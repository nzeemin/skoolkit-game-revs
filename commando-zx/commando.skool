@org
; Data block at 5B00
b$5B00 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B08 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5B10 DEFB $00

; Object records, 20 bytes wide
b$5B11 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B1B DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B25 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B2F DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B39 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B43 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B4D DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B57 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B61 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B6B DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B75 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B7F DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B89 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B93 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5B9D DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5BA7 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5BB1 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5BBB DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5BC5 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00
 $5BCF DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00

; Data block at 5BD9
b$5BD9 DEFB $00                             ; ?? = $90
; Player's object record
 $5BDA DEFB $00                             ; Starting column = $10
 $5BDB DEFB $00                             ; Pixels down screen start point =
                                            ; $40
 $5BDC DEFB $00                             ; ?? = $02
 $5BDD DEFB $00
 $5BDE DEFB $00                             ; ??
 $5BDF DEFB $00                             ; ??
 $5BE0 DEFB $00,$00,$00,$00
 $5BE4 DEFB $00                             ; ?? = $0A
 $5BE5 DEFB $00                             ; ?? = $30
 $5BE6 DEFB $00                             ; ??
 $5BE7 DEFB $00,$00,$00,$00
 $5BEB DEFB $00                             ; ??
 $5BEC DEFB $00,$00
 $5BEE DEFB $00                             ; ?? = $90
 $5BEF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BF7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5BFF DEFB $00,$FF,$E0,$00,$00,$3C,$E1,$1C
 $5C07 DEFB $0D,$0D,$23,$05,$00,$00,$00,$00
 $5C0F DEFB $00,$01,$00,$06,$00,$0B,$00,$01
 $5C17 DEFB $00,$01,$00,$06,$00,$10,$00,$00
 $5C1F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C27 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C2F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C37 DEFB $3C,$40,$00,$FF,$CD,$00,$A5,$61
 $5C3F DEFB $00,$00,$00,$00,$00,$FF,$FE,$FF
 $5C47 DEFB $07,$38,$00,$00,$CB,$5C,$00,$00
 $5C4F DEFB $B6,$5C,$BB,$5C,$CB,$5C,$15,$5D
 $5C57 DEFB $CA,$5C,$CC,$5C,$0E,$5D,$14,$5D
 $5C5F DEFB $00,$00,$16,$5D,$16,$5D,$16,$5D
 $5C67 DEFB $2D,$92,$5C,$00,$02,$00,$00,$00
 $5C6F DEFB $00,$00,$00,$00,$00,$B6,$1A,$00
 $5C77 DEFB $00,$A8,$25,$00,$58,$FF,$00,$00
 $5C7F DEFB $21,$00,$5B,$21,$17,$C0,$40,$E0
 $5C87 DEFB $50,$21,$12,$21,$17,$03,$38,$00
 $5C8F DEFB $38,$00,$00,$00,$00,$00,$00,$00
 $5C97 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5C9F DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CA7 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5CAF DEFB $00,$00,$00,$A8,$61,$FF,$FF,$F4
 $5CB7 DEFB $09,$A8,$10,$4B,$F4,$09,$C4,$15
 $5CBF DEFB $53,$81,$0F,$C4,$15,$52,$F4,$09
 $5CC7 DEFB $C4,$15,$50,$80,$80,$FD

; Message at 5CCD
t$5CCD DEFM "25000"

; Data block at 5CD2
b$5CD2 DEFB $0E,$00,$00,$A8,$61,$00,$3A,$EF
 $5CDA DEFB $22,$22,$AF,$3A,$EF,$22,$22,$AF
 $5CE2 DEFB $3A,$EF,$22,$22,$AA,$3A,$F4

; Message at 5CE9
t$5CE9 DEFM "30052"

; Data block at 5CEE
b$5CEE DEFB $0E,$00,$00,$64,$75,$00

; Message at 5CF4
t$5CF4 DEFM ",31"

; Data block at 5CF7
b$5CF7 DEFB $0E,$00,$00,$1F,$00,$00,$3A,$F2
 $5CFF DEFB $30,$0E,$00,$00,$00,$00,$00,$3A
 $5D07 DEFB $F9,$C0

; Message at 5D09
t$5D09 DEFM "25344"

; Data block at 5D0E
b$5D0E DEFB $0E,$00,$00,$00,$63,$00,$0D,$80
 $5D16 DEFB $00,$00,$00,$63,$00,$00,$00,$1F
 $5D1E DEFB $00,$00,$20,$00,$1B,$00,$40,$00
 $5D26 DEFB $00,$03,$AA

; Message at 5D29
t$5D29 DEFM "         "

; Data block at 5D32
b$5D32 DEFB $00,$1B,$40,$9C,$00,$80,$AA,$E5
 $5D3A DEFB $5C,$00,$00,$20,$00,$00,$00,$00
 $5D42 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D4A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D52 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D5A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D62 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D6A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D72 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D7A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D82 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D8A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5D9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DBA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DCA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DD2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5DFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E02 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E0A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E12 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E1A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E22 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E32 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E3A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E42 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E4A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E52 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E5A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E62 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E6A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E72 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E7A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E82 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E8A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5E9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EBA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ECA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5ED2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5EFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F02 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F0A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F12 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F1A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F22 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F32 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F3A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F42 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F4A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F52 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F5A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F62 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F6A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F72 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F7A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F82 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F8A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F92 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5F9A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FA2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FAA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FB2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FBA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FC2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FCA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FD2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FDA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FE2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $5FFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6002 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $600A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6012 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $601A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6022 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $602A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6032 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $603A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6042 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $604A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6052 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $605A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6062 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $606A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6072 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $607A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6082 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $608A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6092 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $609A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60A2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60AA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60BA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60C2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60CA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60D2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60DA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60E2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60EA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60F2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $60FA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6102 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $610A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6112 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $611A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6122 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $612A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6132 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $613A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6142 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $614A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6152 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $615A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6162 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $616A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6172 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $617A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6182 DEFB $00,$4E,$E2,$83,$E1,$E8,$8B,$DB
 $618A DEFB $E1,$BF,$3B,$1A,$39,$5C,$5F,$2B
 $6192 DEFB $2D,$65,$33,$58

; Data block at 6196
b$6196 DEFB $FF,$ED,$10,$0D,$00,$09,$00,$85
 $619E DEFB $1C,$10,$1C,$52,$1B,$76,$1B,$03
 $61A6 DEFB $13,$00,$3E,$00,$00,$00,$00,$00
 $61AE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61B6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61BE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61C6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61CE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61D6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61DE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $61E6 DEFB $FC,$FC,$5D,$7A,$B5,$76,$30,$13
 $61EE DEFB $E0,$20,$00,$00,$1A,$42,$C7,$71
 $61F6 DEFB $6D,$72

; Data block at 61F8
b$61F8 DEFB $C7,$71,$05,$6A,$3A,$5C,$58,$27
 $6200 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6208 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6210 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6218 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6220 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6228 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6230 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6238 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6240 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6248 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6250 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6258 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6260 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6268 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6270 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6278 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6280 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6288 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6290 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6298 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $62F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6300 DEFB $3A,$14,$69,$3C,$3C,$42,$46,$69

; Data block at 6308
b$6308 DEFB $D6,$8B,$0B,$D2,$8C,$0B,$ED,$82
 $6310 DEFB $42,$BA,$67,$3C,$3C,$3C,$3C,$3C

; Data block at 6318
b$6318 DEFB $D6,$8B,$0B,$FC,$43,$7B,$E1,$C9
 $6320 DEFB $43,$F7,$E1,$33,$99,$4B,$51,$E1
 $6328 DEFB $01,$69,$E1,$9C,$DC,$3C,$42,$C2
 $6330 DEFB $DF,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6338 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6340 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6348 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6350 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6358 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6360 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6368 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6370 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6378 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6380 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6388 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6390 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $6398 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63A0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63A8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63B0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63B8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63C0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63C8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63D0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63D8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63E0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63E8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63F0 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1
 $63F8 DEFB $E1,$E1,$E1,$E1,$E1,$E1,$E1,$E1

; -> $7A10
;
; Used by the routines at #R$9132 and #R$9193.
c$6400 JP $7A10      ;
 $6403 JP $7A5C      ; Delay by BC
 $6406 JP $79CA      ;
 $6409 JP $0000      ;
 $640C JP $7621      ;
 $640F JP $7626      ;
 $6412 JP $75BE      ;

; -> $6825 - Update Score
;
; Used by the routines at #R$8EE3, #R$E1D1, #R$E224, #R$E6FE, #R$F076 and
; #R$F26E.
c$6415 JP $6825      ;

; Data block at 6418
b$6418 DEFB $C3,$6A,$79,$C3,$2C,$79,$C3,$D2
 $6420 DEFB $69,$C3,$57,$73

; -> $7511 - XOR AF and AF' with every byte in $F900-F9FF
;
; Used by the routine at #R$ED52.
c$6424 JP $7511      ;

; -> $6593
;
; Used by the routine at #R$DEEF.
c$6427 JP $6593      ;

; -> $6600
;
; Used by the routines at #R$83B8, #R$85AB, #R$86F5 and #R$F381.
c$642A JP $6600      ;

; -> $6456
;
; Used by the routines at #R$8EE3, #R$DE91, #R$E6FE, #R$ECC1, #R$F26E and
; #R$F381.
c$642D JP $6456      ;

; -> $6C7A - We've got A more grenades
;
; Used by the routines at #R$8EE3 and #R$ECC1.
c$6430 JP $6C7A      ;

; Data block at 6433
b$6433 DEFB $00,$00,$00,$00,$00,$00,$01
 $643A DEFB $94,$14,$2C,$0A,$14,$10,$02,$04
 $6442 DEFB $01,$02,$02,$02,$02,$01
 $6448 DEFW $64F9
 $644A DEFW $64E9
 $644C DEFW $64C7
 $644E DEFW $6505
 $6450 DEFW $650F
 $6452 DEFW $64AB
 $6454 DEFW $6533

; Routine at 6456
;
; Used by the routines at #R$642D, #R$6825 and #R$7637.
c$6456 CP $07        ;
 $6458 JR Z,$6469    ; Clear 7 bytes at $6433
 $645A LD E,A        ;
 $645B LD HL,$6433   ;
 $645E ADD A,L       ;
 $645F LD L,A        ;
 $6460 LD A,E        ;
 $6461 LD DE,$643A   ;
 $6464 ADD A,E       ;
 $6465 LD E,A        ;
 $6466 LD A,(DE)     ;
 $6467 LD (HL),A     ;
 $6468 RET           ;

; Clear 7 bytes at $6433
;
; Used by the routines at #R$6456, #R$69F3 and #R$6BBB.
c$6469 LD B,$07      ;
 $646B LD HL,$6433   ;
*$646E LD (HL),$00   ;
 $6470 INC HL        ;
 $6471 DJNZ $646E    ;
 $6473 RET           ;

; Routine at 6474
;
; Used by the routine at #R$7357.
c$6474 LD HL,$6433   ;
 $6477 LD B,$07      ;
*$6479 LD A,(HL)     ;
 $647A AND A         ;
 $647B JP NZ,$6482   ;
 $647E INC HL        ;
 $647F DJNZ $6479    ;
 $6481 RET           ;
*$6482 LD HL,$6446   ;
 $6485 LD A,B        ;
 $6486 ADD A,A       ;
 $6487 ADD A,L       ;
 $6488 LD L,A        ;
 $6489 JR NC,$648C   ;
 $648B INC H         ;
*$648C LD A,(HL)     ;
 $648D INC HL        ;
 $648E LD H,(HL)     ;
 $648F LD L,A        ;
 $6490 LD DE,$6495   ;
 $6493 PUSH DE       ;
 $6494 JP (HL)       ;

; Routine at 6495
c$6495 LD DE,$6433   ;
 $6498 LD HL,$6441   ;
 $649B LD B,$07      ;
*$649D LD A,(DE)     ;
 $649E AND A         ;
 $649F JR Z,$64A6    ;
 $64A1 SBC A,(HL)    ;
 $64A2 JR NC,$64A5   ;
 $64A4 XOR A         ;
*$64A5 LD (DE),A     ;
*$64A6 INC HL        ;
 $64A7 INC DE        ;
 $64A8 DJNZ $649D    ;
 $64AA RET           ;

; Message at 64AB
t$64AB DEFM ":4d=("

; Data block at 64B0
b$64B0 DEFB $10,$3C,$FE,$0A,$38,$04,$3E,$14
 $64B8 DEFB $18,$02,$3E,$0F,$2E,$0C,$C3

; Message at 64BF
t$64BF DEFM "ue>"

; Data block at 64C2
b$64C2 DEFB $14

; Message at 64C3
t$64C3 DEFM "24d"

; Data block at 64C6
b$64C6 DEFB $C9

; Routine at 64C7
c$64C7 LD A,($6437)  ;
 $64CA NEG           ;
 $64CC AND $1F       ;
 $64CE XOR $1F       ;
 $64D0 OR $01        ;
*$64D2 PUSH AF       ;
 $64D3 LD A,R        ;
 $64D5 XOR $88       ;
 $64D7 AND $F8       ;
 $64D9 LD B,A        ;
 $64DA LD A,($FDF7)  ;
 $64DD OR B          ;
 $64DE OUT ($FE),A   ;
 $64E0 LD B,$0A      ;
*$64E2 DJNZ $64E2    ;
 $64E4 POP AF        ;
 $64E5 DEC A         ;
 $64E6 JR NZ,$64D2   ;
 $64E8 RET           ;

; Routine at 64E9
c$64E9 LD A,($6438)  ;
 $64EC CP $0C        ;
 $64EE JR NC,$64F4   ;
 $64F0 LD B,A        ;
 $64F1 LD A,$0C      ;
 $64F3 SUB B         ;
*$64F4 LD L,$14      ;
 $64F6 JP $6575      ;

; Routine at 64F9
c$64F9 LD A,($6439)  ;
 $64FC NEG           ;
 $64FE AND $0F       ;
 $6500 LD L,$09      ;
 $6502 JP $6575      ;

; Routine at 6505
c$6505 LD A,($6436)  ;
 $6508 ADD A,$0A     ;
 $650A LD L,$09      ;
 $650C JP $6575      ;

; Message at 650F
t$650F DEFM ":5dG"

; Data block at 6513
b$6513 DEFB $FE,$0A,$38,$15,$78,$FE,$1B,$30
 $651B DEFB $09,$3E,$12,$5F,$78,$E6,$07,$B3
 $6523 DEFB $18,$07,$3E,$1C,$5F,$78,$E6,$07
 $652B DEFB $B3,$F6,$01,$2E,$0A,$C3,$75,$65

; Routine at 6533
c$6533 LD A,($6433)  ;
 $6536 CP $14        ;
 $6538 JR C,$6549    ;
 $653A SUB $14       ;
 $653C LD B,A        ;
 $653D LD A,$88      ;
 $653F SUB B         ;
 $6540 AND $F8       ;
 $6542 OR $01        ;
 $6544 LD L,$08      ;
 $6546 JP $6575      ;
*$6549 LD A,$88      ;
 $654B LD L,$08      ;
 $654D JP $6575      ;

; Data block at 6550
b$6550 DEFB $5F,$3A,$F7,$FD,$E6,$07,$D3,$FE
 $6558 DEFB $7B,$3D,$20,$FD,$ED,$5F,$CB,$47
 $6560 DEFB $28,$0A,$47,$3A,$F7,$FD,$E6,$07
 $6568 DEFB $F6,$10,$D3,$FE,$7B,$3D,$20,$FD
 $6570 DEFB $2D,$C2,$76,$65,$C9

; Routine at 6575
;
; Used by the routines at #R$64E9, #R$64F9, #R$6505 and #R$6533.
c$6575 LD E,A        ;
*$6576 LD A,($FDF7)  ;
 $6579 AND $07       ;
 $657B OUT ($FE),A   ;
 $657D LD A,E        ;
*$657E DEC A         ;
 $657F JR NZ,$657E   ;
 $6581 LD A,($FDF7)  ;
 $6584 AND $07       ;
 $6586 OR $10        ;
 $6588 OUT ($FE),A   ;
 $658A LD A,E        ;
*$658B DEC A         ;
 $658C JR NZ,$658B   ;
 $658E DEC L         ;
 $658F JP NZ,$6576   ;
 $6592 RET           ;

; Routine at 6593
;
; Used by the routine at #R$6427.
c$6593 LD HL,$6648   ;
 $6596 LD DE,$0005   ;
 $6599 LD B,$05      ;
*$659B LD A,(HL)     ;
 $659C CP $80        ;
 $659E CALL NZ,$65A5 ;
 $65A1 ADD HL,DE     ;
 $65A2 DJNZ $659B    ;
 $65A4 RET           ;

; Routine at 65A5
;
; Used by the routine at #R$6593.
c$65A5 PUSH HL       ;
 $65A6 ADD HL,DE     ;
 $65A7 DEC HL        ;
 $65A8 DEC (HL)      ;
 $65A9 JR Z,$65AD    ;
 $65AB POP HL        ;
 $65AC RET           ;
*$65AD LD (HL),$03   ;
 $65AF POP HL        ;
 $65B0 PUSH HL       ;
 $65B1 PUSH DE       ;
 $65B2 PUSH BC       ;
 $65B3 LD IX,$6661   ;
 $65B7 LD A,(HL)     ;
 $65B8 LD (IX+$00),A ;
 $65BB LD (IX+$04),A ;
 $65BE INC HL        ;
 $65BF LD B,(HL)     ;
 $65C0 LD (IX+$01),B ;
 $65C3 LD A,R        ;
 $65C5 JP P,$65CA    ;
 $65C8 INC (HL)      ;
 $65C9 INC B         ;
*$65CA LD (IX+$05),B ;
 $65CD INC HL        ;
 $65CE LD A,(HL)     ;
 $65CF INC HL        ;
 $65D0 LD B,(HL)     ;
 $65D1 CALL $65F6    ;
 $65D4 LD (IX+$02),A ;
 $65D7 LD (IX+$03),B ;
 $65DA LD B,(HL)     ;
 $65DB DEC HL        ;
 $65DC INC (HL)      ;
 $65DD LD A,(HL)     ;
 $65DE CALL $65F6    ;
 $65E1 LD (IX+$06),A ;
 $65E4 LD (IX+$07),B ;
 $65E7 JR NC,$65ED   ;
 $65E9 DEC HL        ;
 $65EA DEC HL        ;
 $65EB LD (HL),$80   ;
*$65ED LD C,$07      ;
 $65EF CALL $800F    ; -> $806B
 $65F2 POP BC        ;
 $65F3 POP DE        ;
 $65F4 POP HL        ;
 $65F5 RET           ;

; Routine at 65F6
;
; Used by the routine at #R$65A5.
c$65F6 OR A          ;
 $65F7 JR Z,$65FD    ;
 $65F9 AND $03       ;
 $65FB RET NZ        ;
 $65FC SCF           ;
*$65FD LD B,$12      ;
 $65FF RET           ;

; Routine at 6600
;
; Used by the routine at #R$642A.
c$6600 EX AF,AF'     ;
 $6601 PUSH HL       ;
 $6602 LD HL,$6648   ;
 $6605 LD DE,$0005   ;
 $6608 LD B,$05      ;
 $660A LD A,$80      ;
*$660C CP (HL)       ;
 $660D JR Z,$6614    ;
 $660F ADD HL,DE     ;
 $6610 DJNZ $660C    ;
 $6612 POP HL        ;
 $6613 RET           ;
*$6614 POP DE        ;
 $6615 LD (HL),E     ;
 $6616 INC HL        ;
 $6617 LD (HL),D     ;
 $6618 INC HL        ;
 $6619 LD (HL),$00   ;
 $661B INC HL        ;
 $661C EX AF,AF'     ;
 $661D SRL A         ;
 $661F ADD A,$13     ;
 $6621 LD (HL),A     ;
 $6622 INC HL        ;
 $6623 LD (HL),$01   ;
 $6625 RET           ;

; Prepare records and variables at $6648
;
; Used by the routine at #R$792C.
c$6626 LD IX,$6661     ;
 $662A LD (IX+$08),$04 ;
 $662E LD (IX+$09),$5F ;
 $6632 LD (IX+$0A),$0A ;
 $6636 LD (IX+$0B),$00 ;
 $663A LD HL,$6648     ; {Prepare records at $6648
 $663D LD DE,$0005     ;
 $6640 LD B,$05        ;
*$6642 LD (HL),$80     ;
 $6644 ADD HL,DE       ;
 $6645 DJNZ $6642      ; }
 $6647 RET             ;

; Data block at 6648
b$6648 DEFB $00,$00,$00,$00,$00             ; {??
 $664D DEFB $00,$00,$00,$00,$00             ;
 $6652 DEFB $00,$00,$00,$00,$00             ;
 $6657 DEFB $00,$00,$00,$00,$00             ;
 $665C DEFB $00,$00,$00,$00,$00             ; }
 $6661 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6669 DEFB $00,$00,$00,$00,$73,$18,$C9,$0C
 $6671 DEFB $63,$1D,$28,$E1,$8C,$51,$92,$FB
 $6679 DEFB $B8,$C1,$25,$24,$11,$04,$C6,$70
 $6681 DEFB $14,$A5,$2D,$12,$94,$A1,$28,$82
 $6689 DEFB $52,$AA,$52,$22,$25

; Data block at 668E
b$668E DEFB $02,$25,$42,$2E

; Data block at 6692
b$6692 DEFB $85,$29,$40,$17,$B9,$EB,$10,$F7
 $669A DEFB $19,$28,$C2,$12,$8B,$92,$23,$38
 $66A2 DEFB $C2,$25,$82,$28,$84,$E6,$30,$94
 $66AA DEFB $A1,$29,$12,$94,$05,$28,$82,$52
 $66B2 DEFB $8A,$12,$22,$24,$22,$25,$42,$2E

; Data block at 66BA
b$66BA DEFB $84,$29,$48,$64

; Data block at 66BE
b$66BE DEFB $A1,$29,$0C,$94,$38,$CE,$E1,$8C
 $66C6 DEFB $8A,$0C,$23,$A4,$C1,$19,$24,$11
 $66CE DEFB $04,$26,$30

; Data block at 66D1
b$66D1 DEFB $00,$FE,$00,$00,$03,$11,$80,$00 ; {??
 $66D9 DEFB $04,$10,$40,$00,$08,$00,$20,$00 ;
 $66E1 DEFB $08,$00,$20,$00,$10,$00,$10,$00 ;
 $66E9 DEFB $10,$00,$10,$00,$1E,$00,$F0,$00 ;
 $66F1 DEFB $10,$00,$10,$00,$10,$00,$10,$00 ;
 $66F9 DEFB $08,$00,$20,$00,$08,$00,$20,$00 ;
 $6701 DEFB $04,$10,$40,$00,$03,$11,$80,$00 ;
 $6709 DEFB $00,$FE,$00,$00,$00,$00,$00,$00 ; }
 $6711 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; {?? 4 * 16 bytes
 $6719 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6721 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6729 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6731 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6739 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6741 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $6749 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; }

; Set up scrolling string
;
; Used by the routines at #R$69F3, #R$6A1E and #R$7143.
c$6751 LD HL,$67CE    ;
 $6754 LD ($681B),HL  ; Set addr of scrolling string
 $6757 LD HL,$5AE0    ;
 $675A LD B,$20       ;
*$675C LD (HL),$04    ;
 $675E INC L          ;
 $675F DJNZ $675C     ;
 $6761 LD A,$01       ;
 $6763 LD ($681D),A   ;
 $6766 SET 3,(IY+$07) ; Set bit 3 of byte ($FD87)
 $676A RET            ;

; Routine at 676B
;
; Used by the routine at #R$7357.
c$676B LD A,($681D)  ;
 $676E DEC A         ;
 $676F LD ($681D),A  ;
 $6772 CALL Z,$679D  ;
 $6775 LD E,$02      ;
*$6777 LD BC,$2007   ;
 $677A LD HL,$56FF   ;
*$677D PUSH DE       ;
 $677E LD DE,$681E   ;
 $6781 DEC E         ;
 $6782 LD A,E        ;
 $6783 ADD A,C       ;
 $6784 LD E,A        ;
 $6785 EX DE,HL      ;
 $6786 RL (HL)       ;
 $6788 EX DE,HL      ;
 $6789 POP DE        ;
*$678A RL (HL)       ;
 $678C DEC L         ;
 $678D DJNZ $678A    ;
 $678F LD A,$20      ;
 $6791 ADD A,L       ;
 $6792 LD L,A        ;
 $6793 LD B,$20      ;
 $6795 DEC H         ;
 $6796 DEC C         ;
 $6797 JR NZ,$677D   ;
 $6799 DEC E         ;
 $679A JR NZ,$6777   ;
 $679C RET           ;

; Routine at 679D
;
; Used by the routine at #R$676B.
c$679D LD A,$04      ;
 $679F LD ($681D),A  ;
 $67A2 LD HL,($681B) ;
 $67A5 LD A,(HL)     ;
 $67A6 CP $1F        ;
 $67A8 JR Z,$67C7    ;
 $67AA INC HL        ;
 $67AB LD ($681B),HL ;
 $67AE CP $20        ;
 $67B0 JR NZ,$67B4   ;
 $67B2 LD A,$2F      ;
*$67B4 LD L,A        ;
 $67B5 LD H,$00      ;
 $67B7 ADD HL,HL     ;
 $67B8 ADD HL,HL     ;
 $67B9 ADD HL,HL     ;
 $67BA LD DE,$7D28   ;
 $67BD ADD HL,DE     ;
 $67BE LD DE,$681E   ;
 $67C1 LD BC,$0007   ;
 $67C4 LDIR          ;
 $67C6 RET           ;
*$67C7 LD HL,$67CE   ;
 $67CA LD ($681B),HL ;
 $67CD RET           ;

; Message at 67CE
t$67CE DEFM "PRESS S TO START GAME  PRESS J TO CHOOSE JOYSTICK  PRESS K TO REDE"
 $6810 DEFM "FINE KEYS "
 $681A DEFB $1F

; Data block at 681B
b$681B DEFW $67D4                           ; Address of current char in
                                            ; scrolling string
 $681D DEFB $02,$00,$00,$00,$00,$00,$00,$00

; Update Score
;
; Used by the routines at #R$6415 and #R$6BBB.
;
; I:BC ??
c$6825 LD A,($FDE9)                         ; Get Score 2nd char
 $6828 PUSH AF                              ;
 $6829 LD A,$07                             ;
 $682B SUB C                                ;
 $682C LD E,A                               ;
 $682D ADD A,$E8                            ;
 $682F LD L,A                               ;
 $6830 LD H,$FD                             ;
 $6832 LD C,$00                             ;
*$6834 DEC L                                ;
 $6835 LD D,$01                             ;
 $6837 LD A,(HL)                            ;
 $6838 ADD A,B                              ;
*$6839 CP $3A                               ;
 $683B JR C,$6842                           ;
 $683D SUB $0A                              ;
 $683F INC D                                ;
 $6840 JR $6839                             ;
*$6842 LD (HL),A                            ;
 $6843 INC C                                ;
 $6844 DEC E                                ;
 $6845 JR Z,$684A                           ;
 $6847 LD B,D                               ;
 $6848 DJNZ $6834                           ;
*$684A LD D,$40                             ;
*$684C LD A,(HL)                            ;
 $684D INC L                                ;
 $684E SUB $30                              ;
 $6850 PUSH HL                              ;
 $6851 ADD A,A                              ;
 $6852 ADD A,A                              ;
 $6853 ADD A,A                              ;
 $6854 ADD A,$A8                            ; Font 2nd char address, lo byte
 $6856 LD L,A                               ;
 $6857 LD H,$7E                             ; Font address, hi byte
 $6859 ADC A,H                              ;
 $685A SUB L                                ;
 $685B LD H,A                               ;
 $685C LD B,$07                             ;
*$685E LD A,(HL)                            ;
 $685F INC L                                ;
 $6860 LD (DE),A                            ;
 $6861 INC D                                ;
 $6862 DJNZ $685E                           ;
 $6864 POP HL                               ;
 $6865 LD A,D                               ;
 $6866 SUB $07                              ;
 $6868 LD D,A                               ;
 $6869 INC E                                ;
 $686A DEC C                                ;
 $686B JR NZ,$684C                          ;
 $686D POP AF                               ;
 $686E CP (IY+$69)                          ;
 $6871 RET Z                                ;
 $6872 LD A,$02                             ;
 $6874 CALL $6456                           ;
 $6877 LD HL,$FDE6                          ; Address of variable - Lives
                                            ; player have
 $687A INC (HL)                             ; plus one live
 $687B LD A,(HL)                            ; Get Lives player have
 $687C CP $0A                               ;
 $687E RET NC                               ;
 $687F PUSH AF                              ;
 $6880 CALL $7615                           ; Print immediate string
 $6883 DEFB $16,$00,$15,$19,$00,$18,$00,$10 ;
 $688B DEFB $07,$11,$02,$1F                 ;
 $688F POP AF                               ;
 $6890 ADD A,$30                            ; number 0..9 -> char '0'..'9'
 $6892 CALL $7637                           ; Print char
 $6895 RET                                  ;

; Routine at 6896
;
; Used by the routine at #R$69B4.
c$6896 LD A,H        ;
 $6897 PUSH AF       ;
 $6898 SRL H         ;
 $689A SLA L         ;
 $689C SLA L         ;
 $689E CALL $98D9    ;
 $68A1 POP AF        ;
 $68A2 RRCA          ;
 $68A3 RET NC        ;
 $68A4 INC H         ;
 $68A5 RET           ;

; Routine at 68A6
;
; Used by the routine at #R$68CA.
;
; I:HL ??
c$68A6 LD ($FD82),SP ;
 $68AA LD DE,$0000   ;
*$68AD LD SP,HL      ;
 $68AE PUSH DE       ;
 $68AF PUSH DE       ;
 $68B0 PUSH DE       ;
 $68B1 PUSH DE       ;
 $68B2 PUSH DE       ;
 $68B3 INC H         ;
 $68B4 LD A,H        ;
 $68B5 AND $07       ;
 $68B7 JR NZ,$68C3   ;
 $68B9 LD A,L        ;
 $68BA ADD A,$20     ;
 $68BC LD L,A        ;
 $68BD JR C,$68C3    ;
 $68BF LD A,H        ;
 $68C0 SUB $08       ;
 $68C2 LD H,A        ;
*$68C3 DJNZ $68AD    ;
 $68C5 LD SP,($FD82) ;
 $68C9 RET           ;

; Routine at 68CA
c$68CA LD A,($FDBC)   ;
 $68CD CP $A1         ;
 $68CF JR NZ,$68D6    ;
 $68D1 RES 2,(IY+$07) ;
 $68D5 RET            ;
*$68D6 BIT 5,A        ;
 $68D8 JR Z,$6906     ;
 $68DA PUSH AF        ;
 $68DB LD HL,$482D    ; Address on the screen
 $68DE AND $1F        ;
 $68E0 SRL A          ;
 $68E2 INC A          ;
 $68E3 LD B,A         ;
 $68E4 CALL $68A6     ;
 $68E7 POP AF         ;
 $68E8 PUSH AF        ;
 $68E9 AND $1F        ;
 $68EB SRL A          ;
 $68ED XOR $0F        ;
 $68EF JR Z,$68F7     ;
 $68F1 LD B,A         ;
*$68F2 CALL $98DC     ;
 $68F5 DJNZ $68F2     ;
*$68F7 POP AF         ;
 $68F8 PUSH AF        ;
 $68F9 AND $1F        ;
 $68FB SRL A          ;
 $68FD SUB $10        ;
 $68FF NEG            ;
 $6901 LD B,A         ;
 $6902 CALL $68A6     ;
 $6905 POP AF         ;
*$6906 INC A          ;
 $6907 LD ($FDBC),A   ;
 $690A DEC A          ;
 $690B LD H,A         ;
 $690C BIT 6,A        ;
 $690E JR NZ,$6930    ;
 $6910 BIT 5,A        ;
 $6912 LD A,H         ;
 $6913 JR Z,$6919     ;
 $6915 AND $1F        ;
 $6917 XOR $1F        ;
*$6919 AND $1F        ;
 $691B LD H,A         ;
 $691C LD A,$1F       ;
 $691E LD B,$20       ;
 $6920 LD DE,$0000    ;
*$6923 SUB H          ;
 $6924 JR NC,$692C    ;
 $6926 ADD A,$20      ;
 $6928 CALL $6950     ;
 $692B INC D          ;
*$692C INC E          ;
 $692D DJNZ $6923     ;
 $692F RET            ;
*$6930 BIT 5,A        ;
 $6932 LD A,H         ;
 $6933 JR Z,$6939     ;
 $6935 AND $1F        ;
 $6937 XOR $1F        ;
*$6939 AND $1F        ;
 $693B LD H,A         ;
 $693C LD A,$1F       ;
 $693E LD B,$20       ;
 $6940 LD DE,$001F    ;
*$6943 SUB H          ;
 $6944 JR NC,$694C    ;
 $6946 ADD A,$20      ;
 $6948 CALL $6950     ;
 $694B INC D          ;
*$694C DEC E          ;
 $694D DJNZ $6943     ;
 $694F RET            ;

; Routine at 6950
;
; Used by the routine at #R$68CA.
c$6950 PUSH AF       ;
 $6951 PUSH DE       ;
 $6952 PUSH HL       ;
 $6953 PUSH BC       ;
 $6954 EXX           ;
 $6955 LD DE,$7AA0   ;
 $6958 EXX           ;
 $6959 LD L,$03      ;
 $695B LD A,($FDBC)  ;
 $695E DEC A         ;
 $695F BIT 5,A       ;
 $6961 JR Z,$6965    ;
 $6963 XOR $1F       ;
*$6965 AND $1F       ;
 $6967 ADD A,$91     ;
 $6969 LD H,A        ;
 $696A LD BC,$000A   ;
 $696D CALL $69B4    ;
 $6970 POP BC        ;
 $6971 POP HL        ;
 $6972 POP DE        ;
 $6973 POP AF        ;
 $6974 RET           ;

; Routine at 6975
;
; Used by the routine at #R$7357.
c$6975 LD A,($FDBB)   ;
 $6978 LD H,A         ;
 $6979 CP $20         ;
 $697B JR NZ,$6982    ;
 $697D RES 2,(IY+$07) ;
 $6981 RET            ;
*$6982 INC A          ;
 $6983 LD ($FDBB),A   ;
 $6986 LD A,$1F       ;
 $6988 LD B,$20       ;
 $698A LD DE,$0000    ;
*$698D SUB H          ;
 $698E JR NC,$6996    ;
 $6990 ADD A,$20      ;
 $6992 CALL $699A     ;
 $6995 INC D          ;
*$6996 INC E          ;
 $6997 DJNZ $698D     ;
 $6999 RET            ;

; Routine at 699A
;
; Used by the routine at #R$6975.
c$699A PUSH AF       ;
 $699B PUSH DE       ;
 $699C PUSH HL       ;
 $699D PUSH BC       ;
 $699E EXX           ;
 $699F LD DE,$7BE0   ;
 $69A2 EXX           ;
 $69A3 LD L,$05      ;
 $69A5 LD A,($FDBB)  ;
 $69A8 LD H,A        ;
 $69A9 LD BC,$0016   ;
 $69AC CALL $69B4    ;
 $69AF POP BC        ;
 $69B0 POP HL        ;
 $69B1 POP DE        ;
 $69B2 POP AF        ;
 $69B3 RET           ;

; Routine at 69B4
;
; Used by the routines at #R$6950 and #R$699A.
c$69B4 LD A,$1F      ;
 $69B6 SUB D         ;
 $69B7 SRL H         ;
 $69B9 ADD A,H       ;
 $69BA SUB $10       ;
 $69BC LD H,A        ;
 $69BD CALL $6896    ;
 $69C0 PUSH HL       ;
 $69C1 LD A,$1F      ;
 $69C3 SUB E         ;
 $69C4 LD E,A        ;
 $69C5 LD H,C        ;
 $69C6 CALL $800C    ;
 $69C9 EXX           ;
 $69CA PUSH DE       ;
 $69CB EXX           ;
 $69CC POP DE        ;
 $69CD ADD HL,DE     ;
 $69CE POP DE        ;
 $69CF LDIR          ;
 $69D1 RET           ;

; Data block at 69D2
b$69D2 DEFB $D9,$E5,$FD,$E5,$D9,$ED,$73,$80
 $69DA DEFB $FD,$CD,$CA,$79,$FD,$CB,$07,$CE
 $69E2 DEFB $21,$AB,$FD,$22,$A9,$FD,$AF,$32
 $69EA DEFB $A7,$FD,$32,$98,$FD,$32,$84,$FD
 $69F2 DEFB $FB

; Top Score and Main Menu??
;
; Used by the routine at #R$6CAE.
c$69F3 CALL $7274    ; Print Score Table
 $69F6 CALL $6AE1    ;
; This entry point is used by the routine at #R$6F1D.
*$69F9 CALL $6469    ; Clear 7 bytes at $6433
 $69FC CALL $6B21    ;
 $69FF CALL $6751    ; Set up scrolling string
 $6A02 CALL $71B6    ;
 $6A05 CALL $7251    ; Check menu keys
 $6A08 JR Z,$6A0F    ;
; This entry point is used by the routines at #R$6A1E and #R$7143.
*$6A0A CALL $7251    ; Check menu keys
 $6A0D JR NZ,$6A0A   ;
*$6A0F PUSH AF       ;
 $6A10 CALL $6B21    ;
 $6A13 POP AF        ;
 $6A14 CP $53        ; 'S' - Start game
 $6A16 JP Z,$6BBB    ;
 $6A19 CP $4A        ; 'J' - Joystick
 $6A1B JP Z,$7143    ; => Select joystick type

; Redefine Keys
c$6A1E CALL $7615                           ; Print immediate string
 $6A21 DEFB $15,$00,$11,$02,$10,$07,$18,$02 ;
 $6A29 DEFB $16,$0C,$00,$19,$01             ;
 $6A2E DEFM "REDEFINE",$09,"KEYS"           ;
 $6A3B DEFB $16,$16,$00,$19,$00,$18,$00,$11 ;
 $6A43 DEFB $00,$1F                         ;
 $6A45 LD HL,$759C                          ; Where to store redefined keys
 $6A48 LD B,$0C                             ;
*$6A4A LD (HL),$00                          ;
 $6A4C INC HL                               ;
 $6A4D DJNZ $6A4A                           ;
 $6A4F LD B,$06                             ; 6 keys to redefine
 $6A51 LD HL,$6AA3                          ; Start address for messages to use
                                            ; in Redefine Keys
*$6A54 PUSH BC                              ;
 $6A55 CALL $71A8                           ; Print string HL
 $6A58 PUSH HL                              ;
 $6A59 CALL $98D6                           ; (HL) -> HL
*$6A5C HALT                                 ;
 $6A5D CALL $6B14                           ; Wait key unpress, wait key press
 $6A60 LD C,A                               ;
 $6A61 PUSH HL                              ;
 $6A62 CALL $6A8C                           ;
 $6A65 POP HL                               ;
 $6A66 JR C,$6A5C                           ;
 $6A68 LD A,($FD99)                         ;
 $6A6B LD (HL),A                            ;
 $6A6C INC HL                               ;
 $6A6D LD A,($FD9A)                         ;
 $6A70 LD (HL),A                            ;
 $6A71 LD A,C                               ;
 $6A72 CALL $75D2                           ; Print key entered on Redefine
                                            ; Keys
 $6A75 CALL $7615                           ; Print immediate string
 $6A78 DEFB $03,$04,$0D,$1F                 ;
 $6A7C POP HL                               ;
 $6A7D INC HL                               ;
 $6A7E INC HL                               ;
 $6A7F POP BC                               ;
 $6A80 DJNZ $6A54                           ;
 $6A82 LD (IY+$04),$00                      ; Set joystick type ($FD84) =
                                            ; Keyboard
 $6A86 CALL $6751                           ; Set up scrolling string
 $6A89 JP $6A0A                             ;

; Routine at 6A8C
;
; Used by the routine at #R$6A1E.
c$6A8C LD HL,$759C   ;
 $6A8F LD B,$06      ;
*$6A91 LD A,($FD99)  ;
 $6A94 CP (HL)       ;
 $6A95 INC HL        ;
 $6A96 JR NZ,$6A9E   ;
 $6A98 LD A,($FD9A)  ;
 $6A9B CP (HL)       ;
 $6A9C SCF           ;
 $6A9D RET Z         ;
*$6A9E INC HL        ;
 $6A9F DJNZ $6A91    ;
 $6AA1 OR A          ;
 $6AA2 RET           ;

; Messages to use in Redefine Keys
b$6AA3 DEFM "UP"
 $6AA5 DEFB $03,$0D,$2E,$1F
 $6AA9 DEFB $A0,$75
 $6AAB DEFM "DOWN"
 $6AAF DEFB $03,$0B,$2E,$1F
 $6AB3 DEFB $A2,$75
 $6AB5 DEFM "LEFT"
 $6AB9 DEFB $03,$0B,$2E,$1F
 $6ABD DEFB $A4,$75
 $6ABF DEFM "RIGHT"
 $6AC4 DEFB $03,$0A,$2E,$1F
 $6AC8 DEFB $A6,$75
 $6ACA DEFM "FIRE"
 $6ACE DEFB $03,$0B,$2E,$1F
 $6AD2 DEFB $9E,$75
 $6AD4 DEFM "GRENADE"
 $6ADB DEFB $03,$08,$2E,$1F
 $6ADF DEFB $9C,$75

; Routine at 6AE1
;
; Used by the routines at #R$69F3 and #R$6CAE.
c$6AE1 LD HL,$5805    ;
 $6AE4 LD B,$16       ;
 $6AE6 LD C,$05       ;
 $6AE8 LD A,$46       ;
 $6AEA CALL $75BE     ;
 $6AED XOR A          ;
 $6AEE LD ($FDBB),A   ;
 $6AF1 LD HL,$6975    ;
 $6AF4 LD ($7392),HL  ;
 $6AF7 SET 2,(IY+$07) ;
 $6AFB LD HL,$4686    ;
 $6AFE LD C,$05       ;
 $6B00 LD DE,$666D    ;
*$6B03 PUSH HL        ;
 $6B04 LD B,$14       ;
*$6B06 LD A,(DE)      ;
 $6B07 INC DE         ;
 $6B08 LD (HL),A      ;
 $6B09 INC L          ;
 $6B0A DJNZ $6B06     ;
 $6B0C POP HL         ;
 $6B0D CALL $98DC     ;
 $6B10 DEC C          ;
 $6B11 JR NZ,$6B03    ;
 $6B13 RET            ;

; Wait key unpress, wait key press
;
; Used by the routines at #R$6A1E and #R$7143.
c$6B14 LD A,($FD98)  ; Get last key read from keyboard
 $6B17 OR A          ;
 $6B18 JR NZ,$6B14   ;
*$6B1A LD A,($FD98)  ; Get last key read from keyboard
 $6B1D OR A          ;
 $6B1E JR Z,$6B1A    ;
 $6B20 RET           ;

; Routine at 6B21
;
; Used by the routines at #R$69F3 and #R$6F1D.
c$6B21 RES 3,(IY+$07) ;
 $6B25 LD HL,$58C0    ;
 $6B28 LD BC,$1110    ;
 $6B2B XOR A          ;
 $6B2C CALL $75BE     ;
 $6B2F LD HL,$0600    ;
 $6B32 LD BC,$1110    ;
 $6B35 CALL $6B4C     ;
 $6B38 LD HL,$5AC0    ;
 $6B3B LD BC,$2002    ;
 $6B3E XOR A          ;
 $6B3F CALL $75BE     ;
 $6B42 LD HL,$1600    ;
 $6B45 LD BC,$2002    ;
 $6B48 CALL $6B4C     ;
 $6B4B RET            ;

; Routine at 6B4C
;
; Used by the routines at #R$6B21 and #R$6B87.
c$6B4C SLA C         ;
 $6B4E SLA C         ;
 $6B50 SLA C         ;
 $6B52 ADD HL,HL     ;
 $6B53 ADD HL,HL     ;
 $6B54 CALL $98D9    ;
 $6B57 LD D,B        ;
*$6B58 PUSH HL       ;
 $6B59 LD B,D        ;
*$6B5A LD (HL),$00   ;
 $6B5C INC L         ;
 $6B5D DJNZ $6B5A    ;
 $6B5F POP HL        ;
 $6B60 CALL $98DC    ;
 $6B63 DEC C         ;
 $6B64 JR NZ,$6B58   ;
 $6B66 RET           ;

; Letters to select from entering Top Score
t$6B67 DEFM "ABCDEFGH"
 $6B6F DEFM "IJKLMNOP"
 $6B77 DEFM "QRSTUVWX"
 $6B7F DEFM "YZ:;<=>?"

; Routine at 6B87
;
; Used by the routines at #R$6BBB and #R$792C.
;
; I:A ??
c$6B87 PUSH AF       ;
 $6B88 AND $38       ;
 $6B8A LD C,A        ;
 $6B8B RRCA          ;
 $6B8C RRCA          ;
 $6B8D RRCA          ;
 $6B8E OR C          ;
 $6B8F LD HL,$5820   ;
 $6B92 LD BC,$2017   ;
 $6B95 CALL $75BE    ;
 $6B98 LD HL,$0100   ;
 $6B9B LD BC,$2017   ;
 $6B9E CALL $6B4C    ;
 $6BA1 POP AF        ;
 $6BA2 LD HL,$5820   ;
 $6BA5 LD BC,$2017   ;
 $6BA8 CALL $75BE    ;
 $6BAB RET           ;

; Routine at 6BAC
;
; Used by the routine at #R$792C.
c$6BAC LD B,$5C       ;
*$6BAE PUSH BC        ;
 $6BAF CALL $8003     ; -> $9193
 $6BB2 POP BC         ;
 $6BB3 BIT 4,(IY+$15) ;
 $6BB7 RET NZ         ;
 $6BB8 DJNZ $6BAE     ;
 $6BBA RET            ;

; Start Game
;
; Used by the routine at #R$69F3.
c$6BBB CALL $796A                       ; Prepare new game
*$6BBE CALL $792C                       ; Prepare at new Area
 $6BC1 HALT                             ;
 $6BC2 RES 1,(IY+$07)                   ;
 $6BC6 HALT                             ;
 $6BC7 CALL $8006                       ; -> $91AA
 $6BCA HALT                             ;
 $6BCB CALL $6469                       ; Clear 7 bytes at $6433
 $6BCE CALL $DC89                       ; -> $DCDF - Initialization and go to
                                        ; game main loop
 $6BD1 CALL $6469                       ; Clear 7 bytes at $6433
 $6BD4 HALT                             ;
 $6BD5 SET 1,(IY+$07)                   ;
 $6BD9 HALT                             ;
 $6BDA LD A,($FD85)                     ; Get last joystick/keyboard bits
 $6BDD OR $E0                           ;
 $6BDF INC A                            ;
 $6BE0 BIT 0,(IY+$62)                   ; Is Player alive??
 $6BE4 JR Z,$6C1D                       ; => Successful end of the Area
; Player is dead
 $6BE6 LD HL,$FDE7                      ;
 $6BE9 LD A,(HL)                        ; Get player's grenades number
 $6BEA CP $07                           ;
 $6BEC JR NC,$6BF0                      ;
 $6BEE LD (HL),$06                      ; Set player's grenades number to max
                                        ; allowed
*$6BF0 CALL $6C80                       ; Update grenades number on the screen
 $6BF3 CALL $7615                       ; Print immediate string
 $6BF6 DEFB $16,$00,$15,$1F             ;
 $6BFA LD A,($FDE6)                     ; Get lives player have
 $6BFD ADD A,$2F                        ;
 $6BFF CP $3A                           ;
 $6C01 CALL C,$7637                     ; => Print Char
 $6C04 DEC (IY+$66)                     ; Minus one live
 $6C07 JP Z,$6CAE                       ; => Game Over
 $6C0A LD HL,($FD8A)                    ;
 $6C0D DEC HL                           ;
 $6C0E DEC HL                           ;
*$6C0F DEC HL                           ;
 $6C10 DEC HL                           ;
 $6C11 LD A,(HL)                        ;
 $6C12 CP $22                           ;
 $6C14 JR NZ,$6C0F                      ;
 $6C16 INC HL                           ;
 $6C17 INC HL                           ;
 $6C18 LD ($FD8A),HL                    ;
 $6C1B JR $6BBE                         ;
; Black screen at the end of an Area
*$6C1D LD A,$47                         ;
 $6C1F CALL $6B87                       ;
 $6C22 CALL $7615                       ; Print immediate string
 $6C25 DEFB $15,$01,$19,$01,$16,$14,$09 ;
 $6C2C DEFM "BROKE AREA  "              ;
 $6C38 DEFB $1F                         ;
 $6C39 CALL $6C96                       ; Print Area number
 $6C3C INC (IY+$65)                     ; increase Area number
 $6C3F CALL $7615                       ; Print immediate string
 $6C42 DEFB $16,$19,$06                 ;
 $6C45 DEFM "NOW RUSH TO AREA  "        ;
 $6C57 DEFB $1F                         ;
 $6C58 CALL $6C96                       ; Print Area number
 $6C5B LD BC,$0204                      ; +2000
 $6C5E CALL $6825                       ; Update Score
 $6C61 LD BC,$0096                      ;
 $6C64 CALL $7A5C                       ; Delay by BC
 $6C67 CALL $7615                       ; Print immediate string
 $6C6A DEFB $16,$00,$0D,$1F             ;
 $6C6E CALL $6C96                       ; Print Area number
 $6C71 CALL $7615                       ; Print immediate string
 $6C74 DEFB $19,$00,$1F                 ;
 $6C77 JP $6BBE                         ;

; We've got A more grenades
;
; Used by the routine at #R$6430.
c$6C7A ADD A,(IY+$67) ;
 $6C7D LD ($FDE7),A   ; Update player's grenades number

; Update grenades number on the screen
;
; Used by the routine at #R$6BBB.
c$6C80 CALL $7615                           ; Print immediate string
 $6C83 DEFB $10,$07,$11,$02,$19,$00,$18,$00 ;
 $6C8B DEFB $16,$00,$1E,$15,$00,$1F         ;
 $6C91 LD A,($FDE7)                         ; Get player's grenades number
 $6C94 JR $6C99                             ; Print 2-digit number

; Print Area number
;
; Used by the routine at #R$6BBB.
c$6C96 LD A,($FDE5)  ; Get Area number

; Print 2-digit number A
;
; Used by the routine at #R$6C80.
c$6C99 PUSH BC       ;
 $6C9A LD B,$2F      ;
*$6C9C INC B         ;
 $6C9D SUB $0A       ; minus 10
 $6C9F JR NC,$6C9C   ;
 $6CA1 PUSH AF       ;
 $6CA2 LD A,B        ;
 $6CA3 CALL $7637    ; Print char
 $6CA6 POP AF        ;
 $6CA7 ADD A,$3A     ;
 $6CA9 CALL $7637    ; Print char
 $6CAC POP BC        ;
 $6CAD RET           ;

; Game Over
;
; Used by the routine at #R$6BBB.
c$6CAE CALL $70F8                           ; Find a place in Top Score table
 $6CB1 OR A                                 ;
 $6CB2 JP Z,$69F3                           ; => Top Score and Main Menu
; Enter name for the new Top Score record
 $6CB5 SUB $0B                              ;
 $6CB7 NEG                                  ;
 $6CB9 LD ($FDB9),A                         ;
 $6CBC XOR A                                ;
 $6CBD LD ($FDBA),A                         ;
 $6CC0 CALL $7274                           ;
 $6CC3 CALL $6AE1                           ;
 $6CC6 CALL $7615                           ; Print immediate string
 $6CC9 DEFB $16,$0C,$01,$13,$01,$1F         ;
 $6CCF LD HL,$6B67                          ; Letters to select from entering
                                            ; Top Score
 $6CD2 LD C,$04                             ; 4 rows
*$6CD4 LD B,$08                             ; 8 columns
*$6CD6 LD A,(HL)                            ;
 $6CD7 INC HL                               ;
 $6CD8 CALL $7637                           ; Print char
 $6CDB LD A,$09                             ;
 $6CDD CALL $7637                           ; Print char
 $6CE0 DJNZ $6CD6                           ;
 $6CE2 CALL $7615                           ; Print immediate string
 $6CE5 DEFB $03,$04,$0D,$1F                 ;
 $6CE9 DEC C                                ;
 $6CEA JR NZ,$6CD4                          ;
 $6CEC CALL $7615                           ; Print immediate string
 $6CEF DEFB $16,$20,$01,$18,$02,$19,$01,$11 ;
 $6CF7 DEFB $01                             ;
 $6CF8 DEFM "ENTER YOUR NAME"               ;
 $6D07 DEFB $19,$00,$11,$00,$13,$00,$1F     ;
 $6D0E LD HL,$70A1                          ;
 $6D11 LD DE,$70AF                          ;
 $6D14 LD BC,$000E                          ;
 $6D17 LDIR                                 ;
 $6D19 LD IX,$70AF                          ;
 $6D1D LD B,$11                             ;
*$6D1F PUSH BC                              ;
 $6D20 HALT                                 ;
 $6D21 INC (IX+$05)                         ;
 $6D24 BIT 0,B                              ;
 $6D26 JR Z,$6D30                           ;
 $6D28 LD A,($70B6)                         ;
 $6D2B XOR $0F                              ;
 $6D2D LD ($70B6),A                         ;
*$6D30 CALL $98D0                           ;
 $6D33 HALT                                 ;
 $6D34 POP BC                               ;
 $6D35 DJNZ $6D1F                           ;
 $6D37 XOR A                                ;
 $6D38 LD ($70B6),A                         ;
 $6D3B CALL $98D0                           ;
 $6D3E CALL $70EC                           ; Copy 64 bytes $66D1 to $6711
 $6D41 LD A,$14                             ;
 $6D43 LD ($FDB2),A                         ;
 $6D46 XOR A                                ;
 $6D47 LD ($FDB6),A                         ;
 $6D4A CALL $70BD                           ;
*$6D4D LD A,($FD98)                         ; Get last key read from keyboard
 $6D50 OR A                                 ;
 $6D51 JR NZ,$6D5A                          ;
 $6D53 LD A,($FD85)                         ; Get last joystick/keyboard bits
 $6D56 AND $1F                              ;
 $6D58 JR Z,$6D4D                           ;
*$6D5A CALL $7615                           ; Print immediate string
 $6D5D DEFB $16,$20,$01,$03,$0F,$20,$18,$03 ;
 $6D65 DEFB $1F                             ;
 $6D66 CALL $6FC7                           ;
 $6D69 CALL $6F46                           ;
 $6D6C LD (IY+$38),$01                      ;
*$6D70 HALT                                 ;
 $6D71 BIT 4,(IY+$05)                       ; Check bit 4 (Fire) of Last
                                            ; joystick/keyboard bits ($FD85)
 $6D75 JR NZ,$6D7D                          ;
 $6D77 LD (IY+$37),$00                      ;
 $6D7B JR $6D84                             ;
*$6D7D LD A,($FDB7)                         ;
 $6D80 OR A                                 ;
 $6D81 CALL Z,$6F79                         ;
*$6D84 CALL $6E7B                           ;
 $6D87 DEC (IY+$38)                         ;
 $6D8A JR NZ,$6D93                          ;
 $6D8C LD (IY+$38),$02                      ;
 $6D90 CALL $6E11                           ;
*$6D93 HALT                                 ;
 $6D94 LD IX,$70AF                          ;
 $6D98 CALL $98D0                           ;
 $6D9B CALL $70BD                           ;
 $6D9E LD A,($FD85)                         ; Get last joystick/keyboard bits
 $6DA1 AND $0C                              ;
 $6DA3 JP PE,$6DB1                          ;
 $6DA6 CP $04                               ;
 $6DA8 LD A,$01                             ;
 $6DAA JR Z,$6DAE                           ;
 $6DAC LD A,$FF                             ;
*$6DAE LD ($FDB6),A                         ;
*$6DB1 LD A,($FDB2)                         ;
 $6DB4 ADD A,(IY+$36)                       ;
 $6DB7 CP $13                               ;
 $6DB9 JR Z,$6DCC                           ;
 $6DBB CP $2D                               ;
 $6DBD JR Z,$6DCC                           ;
 $6DBF LD ($FDB2),A                         ;
 $6DC2 AND $07                              ;
 $6DC4 CP $04                               ;
 $6DC6 JR NZ,$6DCC                          ;
 $6DC8 XOR A                                ;
 $6DC9 LD ($FDB6),A                         ;
*$6DCC LD A,($FD85)                         ; Get last joystick/keyboard bits
 $6DCF AND $03                              ;
 $6DD1 JP PE,$6DDD                          ;
 $6DD4 CP $01                               ;
 $6DD6 JR Z,$6DDA                           ;
 $6DD8 LD A,$FF                             ;
*$6DDA LD ($70BB),A                         ;
*$6DDD LD C,(IX+$0C)                        ;
 $6DE0 CALL $6FF5                           ;
 $6DE3 LD A,($70B5)                         ;
 $6DE6 OR A                                 ;
 $6DE7 JR NZ,$6E02                          ;
 $6DE9 BIT 0,(IX+$04)                       ;
 $6DED JR NZ,$6E02                          ;
 $6DEF LD (IX+$0C),$00                      ;
 $6DF3 LD A,($70BC)                         ;
 $6DF6 CP $03                               ;
 $6DF8 JR Z,$6E02                           ;
 $6DFA INC A                                ;
 $6DFB JR C,$6DFF                           ;
 $6DFD SUB $02                              ;
*$6DFF LD ($70BC),A                         ;
*$6E02 CALL $70BD                           ;
 $6E05 JP $6D70                             ;

; Data block at 6E08
b$6E08 DEFB $CD,$14,$6B,$CD,$21,$6B,$C3,$F9
 $6E10 DEFB $69

; Routine at 6E11
;
; Used by the routines at #R$6CAE and #R$6F1D.
c$6E11 LD HL,$6FE5   ;
 $6E14 LD B,$08      ;
*$6E16 PUSH BC       ;
 $6E17 LD A,(HL)     ;
 $6E18 INC HL        ;
 $6E19 LD C,A        ;
 $6E1A INC A         ;
 $6E1B JR Z,$6E2F    ;
 $6E1D LD A,(HL)     ;
 $6E1E CALL $6E34    ;
 $6E21 INC (HL)      ;
 $6E22 LD A,(HL)     ;
 $6E23 CALL $6E34    ;
 $6E26 LD A,(HL)     ;
 $6E27 CP $20        ;
 $6E29 JR NZ,$6E2F   ;
 $6E2B DEC HL        ;
 $6E2C LD (HL),$FF   ;
 $6E2E INC HL        ;
*$6E2F POP BC        ;
 $6E30 INC HL        ;
 $6E31 DJNZ $6E16    ;
 $6E33 RET           ;

; Routine at 6E34
;
; Used by the routine at #R$6E11.
c$6E34 LD E,C        ;
 $6E35 LD D,A        ;
 $6E36 LD A,$16      ;
 $6E38 CALL $7637    ; Print char
 $6E3B LD A,C        ;
 $6E3C SUB $41       ;
 $6E3E JR NC,$6E42   ;
 $6E40 ADD A,$21     ;
*$6E42 AND $F8       ;
 $6E44 SRL A         ;
 $6E46 ADD A,$0C     ;
 $6E48 CALL $7637    ; Print char
 $6E4B LD A,C        ;
 $6E4C CP $41        ;
 $6E4E ADC A,$00     ;
 $6E50 DEC A         ;
 $6E51 AND $07       ;
 $6E53 ADD A,A       ;
 $6E54 INC A         ;
 $6E55 CALL $7637    ; Print char
 $6E58 LD A,D        ;
 $6E59 AND $03       ;
 $6E5B RRCA          ;
 $6E5C JR NC,$6E64   ;
 $6E5E LD A,$03      ;
 $6E60 LD C,$40      ;
 $6E62 JR $6E6B      ;
*$6E64 OR A          ;
 $6E65 LD A,$03      ;
 $6E67 JR Z,$6E6B    ;
 $6E69 LD A,$01      ;
*$6E6B LD B,A        ;
 $6E6C LD A,$18      ;
 $6E6E CALL $7637    ; Print char
 $6E71 LD A,B        ;
 $6E72 CALL $7637    ; Print char
 $6E75 LD A,C        ;
 $6E76 CALL $7637    ; Print char
 $6E79 LD C,E        ;
 $6E7A RET           ;

; Routine at 6E7B
;
; Used by the routine at #R$6CAE.
c$6E7B LD IX,$6FD9     ;
 $6E7F LD B,$04        ;
*$6E81 LD A,(IX+$00)   ;
 $6E84 INC A           ;
 $6E85 JR Z,$6E9A      ;
 $6E87 CALL $6FB0      ;
 $6E8A DEC (IX+$02)    ;
 $6E8D JR Z,$6EA2      ;
 $6E8F LD A,(IX+$01)   ;
 $6E92 SUB $04         ;
 $6E94 LD (IX+$01),A   ;
 $6E97 CALL $6FB0      ;
*$6E9A LD DE,$0003     ;
 $6E9D ADD IX,DE       ;
 $6E9F DJNZ $6E81      ;
 $6EA1 RET             ;
*$6EA2 LD L,(IX+$00)   ;
 $6EA5 LD H,(IX+$01)   ;
 $6EA8 LD (IX+$00),$FF ;
 $6EAC LD A,H          ;
 $6EAD SUB $16         ;
 $6EAF AND $F8         ;
 $6EB1 SRL L           ;
 $6EB3 ADD A,L         ;
 $6EB4 LD HL,$6B67     ; Letters to select from entering Top Score
 $6EB7 CALL $98D3      ; HL = HL + A
 $6EBA LD A,(HL)       ;
 $6EBB CP $3F          ;
 $6EBD JR Z,$6F1D      ;
 $6EBF PUSH BC         ;
 $6EC0 PUSH AF         ;
 $6EC1 CALL $6ECD      ;
 $6EC4 POP AF          ;
 $6EC5 CP $3E          ;
 $6EC7 CALL NZ,$6F52   ;
 $6ECA POP BC          ;
 $6ECB JR $6E9A        ;

; Routine at 6ECD
;
; Used by the routine at #R$6E7B.
c$6ECD LD C,A               ;
 $6ECE CALL $7615           ; Print immediate string
 $6ED1 DEFB $18,$00,$16,$1F ;
 $6ED5 LD A,($FDB9)         ;
 $6ED8 LD H,A               ;
 $6ED9 ADD A,A              ;
 $6EDA ADD A,H              ;
 $6EDB ADD A,$0C            ;
 $6EDD CALL $7637           ; Print char
 $6EE0 LD A,($FDBA)         ;
 $6EE3 LD E,A               ;
 $6EE4 ADD A,$11            ;
 $6EE6 CALL $7637           ; Print char
 $6EE9 LD HL,$FDBA          ;
 $6EEC LD A,C               ;
 $6EED CP $3E               ;
 $6EEF JR NZ,$6EF8          ;
 $6EF1 INC E                ;
 $6EF2 DEC E                ;
 $6EF3 RET Z                ;
 $6EF4 DEC (HL)             ;
 $6EF5 DEC (HL)             ;
 $6EF6 LD C,$0C             ;
*$6EF8 LD A,(HL)            ;
 $6EF9 INC A                ;
 $6EFA CP $09               ;
 $6EFC RET Z                ;
 $6EFD LD (HL),A            ;
 $6EFE DEC HL               ;
 $6EFF LD A,(HL)            ;
 $6F00 ADD A,A              ;
 $6F01 ADD A,A              ;
 $6F02 ADD A,A              ;
 $6F03 ADD A,A              ;
 $6F04 SUB (HL)             ;
 $6F05 INC HL               ;
 $6F06 ADD A,(HL)           ;
 $6F07 LD HL,$72B2          ; Score table address
 $6F0A DEC A                ;
 $6F0B CP $FF               ;
 $6F0D RET Z                ;
 $6F0E CALL $98D3           ; HL = HL + A
 $6F11 LD A,C               ;
 $6F12 CP $0C               ;
 $6F14 JR NZ,$6F19          ;
 $6F16 INC HL               ;
 $6F17 LD C,$20             ;
*$6F19 LD (HL),C            ;
 $6F1A JP $7637             ; => Print Char

; Routine at 6F1D
;
; Used by the routine at #R$6E7B.
c$6F1D LD IX,$6FD9   ;
 $6F21 LD B,$04      ;
 $6F23 LD DE,$0003   ;
*$6F26 LD A,(IX+$00) ;
 $6F29 INC A         ;
 $6F2A CALL NZ,$6FB0 ;
 $6F2D ADD IX,DE     ;
 $6F2F DJNZ $6F26    ;
 $6F31 LD B,$14      ;
*$6F33 PUSH BC       ;
 $6F34 LD B,$04      ;
*$6F36 HALT          ;
 $6F37 DJNZ $6F36    ;
 $6F39 CALL $6E11    ;
 $6F3C POP BC        ;
 $6F3D DJNZ $6F33    ;
 $6F3F POP BC        ;
 $6F40 CALL $6B21    ;
 $6F43 JP $69F9      ;

; Prepare records at $6FE5
;
; Used by the routine at #R$6CAE.
c$6F46 LD HL,$6FE5   ;
 $6F49 LD B,$08      ;
*$6F4B LD (HL),$FF   ;
 $6F4D INC HL        ;
 $6F4E INC HL        ;
 $6F4F DJNZ $6F4B    ;
 $6F51 RET           ;

; Routine at 6F52
;
; Used by the routine at #R$6E7B.
c$6F52 LD C,A        ;
 $6F53 LD HL,$6FE5   ;
 $6F56 LD B,$08      ;
*$6F58 LD A,(HL)     ;
 $6F59 CP C          ;
 $6F5A JR Z,$6F6E    ;
 $6F5C INC HL        ;
 $6F5D INC HL        ;
 $6F5E DJNZ $6F58    ;
 $6F60 LD HL,$6FE5   ;
 $6F63 LD B,$08      ;
*$6F65 LD A,(HL)     ;
 $6F66 INC A         ;
 $6F67 JR Z,$6F74    ;
 $6F69 INC HL        ;
 $6F6A INC HL        ;
 $6F6B DJNZ $6F65    ;
 $6F6D RET           ;
*$6F6E INC HL        ;
 $6F6F LD A,(HL)     ;
 $6F70 AND $03       ;
 $6F72 LD (HL),A     ;
 $6F73 RET           ;
*$6F74 LD (HL),C     ;
 $6F75 INC HL        ;
 $6F76 LD (HL),$00   ;
 $6F78 RET           ;

; Routine at 6F79
;
; Used by the routine at #R$6CAE.
c$6F79 LD A,$FF      ;
 $6F7B LD ($FDB7),A  ;
 $6F7E LD IX,$6FD9   ;
 $6F82 LD B,$04      ;
 $6F84 LD DE,$0003   ;
*$6F87 LD A,(IX+$00) ;
 $6F8A INC A         ;
 $6F8B JR Z,$6F92    ;
 $6F8D ADD IX,DE     ;
 $6F8F DJNZ $6F87    ;
 $6F91 RET           ;
*$6F92 LD A,($70B3)  ;
 $6F95 INC A         ;
 $6F96 OR $01        ;
 $6F98 LD (IX+$00),A ;
 $6F9B LD A,$4E      ;
 $6F9D LD (IX+$01),A ;
 $6FA0 SUB (IY+$32)  ;
 $6FA3 SUB $06       ;
 $6FA5 AND $F8       ;
 $6FA7 SRL A         ;
 $6FA9 SRL A         ;
 $6FAB ADD A,$02     ;
 $6FAD LD (IX+$02),A ;
; This entry point is used by the routines at #R$6E7B and #R$6F1D.
*$6FB0 LD L,(IX+$00) ;
 $6FB3 SLA L         ;
 $6FB5 SLA L         ;
 $6FB7 LD H,(IX+$01) ;
 $6FBA CALL $98D9    ;
 $6FBD LD A,(HL)     ;
 $6FBE XOR $30       ;
 $6FC0 LD (HL),A     ;
 $6FC1 INC H         ;
 $6FC2 LD A,(HL)     ;
 $6FC3 XOR $30       ;
 $6FC5 LD (HL),A     ;
 $6FC6 RET           ;

; Prepare records at $6FD9
;
; Used by the routine at #R$6CAE.
c$6FC7 LD IX,$6FD9     ;
 $6FCB LD DE,$0003     ;
 $6FCE LD B,$04        ;
*$6FD0 LD (IX+$00),$FF ;
 $6FD4 ADD IX,DE       ;
 $6FD6 DJNZ $6FD0      ;
 $6FD8 RET             ;

; Data block at 6FD9
b$6FD9 DEFB $00,$00,$00
 $6FDC DEFB $00,$00,$00
 $6FDF DEFB $00,$00,$00
 $6FE2 DEFB $00,$00,$00

; Data block at 6FE5
b$6FE5 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $6FED DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Routine at 6FF5
;
; Used by the routine at #R$6CAE.
c$6FF5 LD A,($70B3)   ;
 $6FF8 ADD A,A        ;
 $6FF9 ADD A,A        ;
 $6FFA ADD A,(IX+$06) ;
 $6FFD ADD A,C        ;
 $6FFE LD B,A         ;
 $6FFF CP $FF         ;
 $7001 RET Z          ;
 $7002 CP $39         ;
 $7004 RET Z          ;
 $7005 AND $03        ;
 $7007 LD ($70B5),A   ;
 $700A LD A,B         ;
 $700B SRL A          ;
 $700D SRL A          ;
 $700F LD ($70B3),A   ;
 $7012 LD A,($70BC)   ;
 $7015 ADD A,C        ;
 $7016 LD B,A         ;
 $7017 LD HL,$709A    ;
 $701A CALL $98D3     ; HL = HL + A
 $701D LD A,(HL)      ;
 $701E CP $FF         ;
 $7020 JR Z,$7029     ;
 $7022 LD ($70B6),A   ;
 $7025 LD A,B         ;
 $7026 LD ($70BC),A   ;
*$7029 LD A,($70B5)   ;
 $702C LD B,C         ;
 $702D LD C,$02       ;
 $702F DJNZ $7037     ;
 $7031 OR A           ;
 $7032 JP Z,$70EC     ; => Copy 64 bytes $66D1 to $6711
 $7035 JR $7057       ;
*$7037 INC B          ;
 $7038 RET Z          ;
 $7039 CP $03         ;
 $703B JR Z,$706E     ;
*$703D LD DE,$0007    ;
 $7040 LD HL,$6714    ;
 $7043 LD B,$10       ;
*$7045 SLA (HL)       ;
 $7047 DEC HL         ;
 $7048 RL (HL)        ;
 $704A DEC HL         ;
 $704B RL (HL)        ;
 $704D DEC HL         ;
 $704E RL (HL)        ;
 $7050 ADD HL,DE      ;
 $7051 DJNZ $7045     ;
 $7053 DEC C          ;
 $7054 JR NZ,$703D    ;
 $7056 RET            ;
*$7057 LD HL,$6711    ;
 $705A LD B,$10       ;
*$705C SRL (HL)       ;
 $705E INC HL         ;
 $705F RR (HL)        ;
 $7061 INC HL         ;
 $7062 RR (HL)        ;
 $7064 INC HL         ;
 $7065 RR (HL)        ;
 $7067 INC HL         ;
 $7068 DJNZ $705C     ;
 $706A DEC C          ;
 $706B JR NZ,$7057    ;
 $706D RET            ;

; Routine at 706E
;
; Used by the routine at #R$6FF5.
c$706E LD HL,$66D1   ;
 $7071 LD DE,$6711   ;
 $7074 EXX           ;
 $7075 LD B,$10      ;
*$7077 EXX           ;
 $7078 LD C,(HL)     ;
 $7079 INC HL        ;
 $707A LD B,(HL)     ;
 $707B INC HL        ;
 $707C LD A,(HL)     ;
 $707D INC HL        ;
 $707E INC HL        ;
 $707F SLA A         ;
 $7081 RL B          ;
 $7083 RL C          ;
 $7085 SLA A         ;
 $7087 RL B          ;
 $7089 RL C          ;
 $708B EX DE,HL      ;
 $708C LD (HL),$00   ;
 $708E INC HL        ;
 $708F LD (HL),C     ;
 $7090 INC HL        ;
 $7091 LD (HL),B     ;
 $7092 INC HL        ;
 $7093 LD (HL),A     ;
 $7094 INC HL        ;
 $7095 EX DE,HL      ;
 $7096 EXX           ;
 $7097 DJNZ $7077    ;
 $7099 RET           ;

; Data block at 709A
b$709A DEFB $FF,$0B,$0D,$00,$02,$04,$FF,$08
 $70A2 DEFB $3D,$00,$07,$08,$3D,$00,$07,$48
 $70AA DEFB $5F,$0A,$00,$00,$03,$00,$00,$00
 $70B2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $70BA DEFB $00,$00,$00

; Routine at 70BD
;
; Used by the routine at #R$6CAE.
c$70BD LD A,($70B3)  ;
 $70C0 ADD A,A       ;
 $70C1 ADD A,A       ;
 $70C2 LD L,A        ;
 $70C3 LD A,($FDB2)  ;
 $70C6 ADD A,$02     ;
 $70C8 LD H,A        ;
 $70C9 CALL $98D9    ;
 $70CC LD B,$10      ;
 $70CE LD DE,$6711   ;
*$70D1 LD C,L        ;
 $70D2 LD A,(DE)     ;
 $70D3 INC DE        ;
 $70D4 XOR (HL)      ;
 $70D5 LD (HL),A     ;
 $70D6 INC L         ;
 $70D7 LD A,(DE)     ;
 $70D8 INC DE        ;
 $70D9 XOR (HL)      ;
 $70DA LD (HL),A     ;
 $70DB INC L         ;
 $70DC LD A,(DE)     ;
 $70DD INC DE        ;
 $70DE XOR (HL)      ;
 $70DF LD (HL),A     ;
 $70E0 INC L         ;
 $70E1 LD A,(DE)     ;
 $70E2 INC DE        ;
 $70E3 XOR (HL)      ;
 $70E4 LD (HL),A     ;
 $70E5 LD L,C        ;
 $70E6 CALL $98DC    ;
 $70E9 DJNZ $70D1    ;
 $70EB RET           ;

; Copy 64 bytes $66D1 to $6711
;
; Used by the routines at #R$6CAE and #R$6FF5.
c$70EC LD HL,$66D1   ;
 $70EF LD DE,$6711   ;
 $70F2 LD BC,$0040   ;
 $70F5 LDIR          ;
 $70F7 RET           ;

; Find a place in Top Score table
;
; Used by the routine at #R$6CAE.
c$70F8 LD HL,$FDE8   ; Score address
 $70FB LD DE,$72AC   ;
 $70FE LD C,$0B      ;
*$7100 LD B,$0F      ;
*$7102 INC DE        ;
 $7103 DJNZ $7102    ;
 $7105 PUSH HL       ;
 $7106 PUSH DE       ;
 $7107 EXX           ;
 $7108 POP DE        ;
 $7109 POP HL        ;
 $710A LD B,$06      ;
*$710C LD A,(DE)     ;
 $710D CP (HL)       ;
 $710E JR C,$711C    ;
 $7110 JR NZ,$7116   ;
 $7112 INC HL        ;
 $7113 INC DE        ;
 $7114 DJNZ $710C    ;
*$7116 EXX           ;
 $7117 DEC C         ;
 $7118 JR NZ,$7100   ;
 $711A XOR A         ;
 $711B RET           ;
*$711C EXX           ;
 $711D LD A,C        ;
 $711E PUSH AF       ;
 $711F DEC A         ;
 $7120 JR Z,$7132    ;
 $7122 EXX           ;
 $7123 LD HL,$7347   ; Top score #10 last char address
 $7126 LD DE,$7356   ; Top score #11 last char address
*$7129 LD BC,$000F   ; Top score line width = 15
 $712C LDDR          ;
 $712E DEC A         ;
 $712F JR NZ,$7129   ;
 $7131 EXX           ;
*$7132 LD A,$20      ;
 $7134 PUSH DE       ;
 $7135 LD B,$09      ;
*$7137 DEC DE        ;
 $7138 LD (DE),A     ;
 $7139 DJNZ $7137    ;
 $713B POP DE        ;
 $713C LD BC,$0006   ;
 $713F LDIR          ;
 $7141 POP AF        ;
 $7142 RET           ;

; Select joystick type
;
; Used by the routine at #R$69F3.
c$7143 CALL $7615                           ; Print immediate string
 $7146 DEFB $11,$02,$10,$07,$18,$02,$16,$0C ;
 $714E DEFB $00,$15,$00,$19,$01             ;
 $7153 DEFM "SELECT"                        ;
 $7159 DEFB $16,$13,$00,$19,$00,$11,$00     ;
 $7160 DEFM "1.KEMPSTON"                    ;
 $716A DEFB $03,$07,$0D                     ;
 $716D DEFM "2.INTERFACE II"                ;
 $717B DEFB $03,$07,$0D                     ;
 $717E DEFM "3.FULLER"                      ;
 $7186 DEFB $03,$07,$0D                     ;
 $7189 DEFM "4.CURSOR"                      ;
 $7191 DEFB $1F                             ;
*$7192 CALL $6B14                           ; Wait key unpress, wait key press
 $7195 CP $31                               ; < '1' ?
 $7197 JR C,$7192                           ;
 $7199 CP $35                               ; >= '5' ?
 $719B JR NC,$7192                          ;
 $719D SUB $30                              ; char '1'..'4' -> number 1..4
 $719F LD ($FD84),A                         ;
 $71A2 CALL $6751                           ; Set up scrolling string
 $71A5 JP $6A0A                             ;

; Print string HL
;
; Used by the routine at #R$6A1E.
c$71A8 LD A,(HL)     ;
 $71A9 INC HL        ;
 $71AA CP $1F        ;
 $71AC RET Z         ;
 $71AD CALL $7637    ; Print char
 $71B0 JR $71A8      ;

; Screen attributes, 4 bytes
b$71B2 DEFB $07,$05,$46,$06

; Routine at 71B6
;
; Used by the routine at #R$69F3.
c$71B6 CALL $725D                              ; Print immediate string
                                               ; checking menu keys
 $71B9 DEFB $13,$00,$16,$0C,$02,$18,$02,$19    ;
 $71C1 DEFB $01,$15,$00                        ;
 $71C4 DEFM "PUBLISHED BY"                     ;
 $71D0 DEFB $1F                                ;
 $71D1 LD DE,$71B2                             ;
 $71D4 LD HL,$5923                             ;
 $71D7 LD C,$04                                ;
*$71D9 LD B,$0A                                ;
 $71DB LD A,(DE)                               ;
 $71DC INC DE                                  ;
*$71DD LD (HL),A                               ;
 $71DE INC L                                   ;
 $71DF DJNZ $71DD                              ;
 $71E1 LD B,$16                                ;
*$71E3 INC HL                                  ;
 $71E4 DJNZ $71E3                              ;
 $71E6 DEC C                                   ;
 $71E7 JR NZ,$71D9                             ;
 $71E9 LD A,$40                                ;
 $71EB LD ($FDBC),A                            ;
 $71EE LD HL,$68CA                             ;
 $71F1 LD ($7392),HL                           ;
 $71F4 SET 2,(IY+$07)                          ;
 $71F8 CALL $725D                              ; Print immediate string
                                               ; checking menu keys
 $71FB DEFB $16,$1D,$02,$18,$00                ;
 $7200 DEFM "CONVERTED BY",$04,$14,$01         ;
 $720F DEFM "KEITH BURKHILL",$04               ;
 $721E DEFM "& NIGEL ALDERTON",$04,$0D,$14,$01 ;
 $7232 DEFM "GRAPHIC DESIGN",$04,$14,$02       ;
 $7243 DEFM "RORY & KAREN"                     ;
 $724F DEFB $1F                                ;
 $7250 RET                                     ;

; Check menu keys
;
; Used by the routines at #R$69F3 and #R$725D.
c$7251 LD A,($FD98)  ; Get last key read from keyboard
 $7254 CP $53        ; 'S' - Start game
 $7256 RET Z         ;
 $7257 CP $4A        ; 'J' - Joystick
 $7259 RET Z         ;
 $725A CP $4B        ; 'K' - Redefine keys
 $725C RET           ;

; Print immediate string checking menu keys
;
; Used by the routine at #R$71B6.
c$725D HALT           ;
 $725E CALL $7251     ; Check menu keys
 $7261 POP HL         ;
 $7262 JR Z,$726F     ;
 $7264 LD A,(HL)      ;
 $7265 INC HL         ;
 $7266 PUSH HL        ;
 $7267 CP $1F         ;
 $7269 RET Z          ;
 $726A CALL $7637     ; Print char
 $726D JR $725D       ;
*$726F RES 2,(IY+$07) ;
 $7273 RET            ;

; Print Score Table
;
; Used by the routines at #R$69F3 and #R$6CAE.
c$7274 XOR A                                ;
 $7275 OUT ($FE),A                          ;
 $7277 CALL $7615                           ; Print immediate string
 $727A DEFB $01,$00,$07,$15,$01,$1F         ;
 $7280 HALT                                 ;
 $7281 LD HL,$58D1                          ;
 $7284 LD B,$0F                             ;
 $7286 LD C,$10                             ;
 $7288 LD A,$17                             ;
 $728A CALL $75BE                           ;
 $728D CALL $7615                           ; Print immediate string
 $7290 DEFB $13,$11,$16,$0C,$11,$19,$00,$1F ;
 $7298 LD HL,$72B2                          ; Score table address
 $729B LD C,$0B                             ; 11 = score table lines count
*$729D LD B,$0F                             ;
*$729F LD A,(HL)                            ;
 $72A0 CALL $7637                           ; Print char
 $72A3 INC HL                               ;
 $72A4 DJNZ $729F                           ;
 $72A6 LD A,$0D                             ;
 $72A8 CALL $7637                           ; Print char
 $72AB CALL $7637                           ; Print char
 $72AE DEC C                                ;
 $72AF JR NZ,$729D                          ;
 $72B1 RET                                  ;

; Score table
t$72B2 DEFM "KEITH... 060000"
 $72C1 DEFM "NIGUL... 050000"
 $72D0 DEFM "RORY.... 040000"
 $72DF DEFM "KAREN... 030000"
 $72EE DEFM "STUART.. 020000"
 $72FD DEFM "RAY..... 010000"
 $730C DEFM "CLARE... 009000"
 $731B DEFM "CHRIS... 008000"
 $732A DEFM "DAWN.... 007000"
 $7339 DEFM "PAT.LYNN 006000"
 $7348 DEFM "TA.MYK.. 005000"

; Routine at 7357
;
; Used by the routines at #R$7A42 and #R$FCFC.
c$7357 LD ($FD8F),HL  ;
 $735A LD HL,$0000    ;
 $735D EX (SP),HL     ;
 $735E LD ($FD92),HL  ;
 $7361 LD ($FD8D),SP  ;
 $7365 LD SP,$FD80    ;
 $7368 PUSH AF        ;
 $7369 PUSH BC        ;
 $736A PUSH DE        ;
 $736B BIT 1,(IY+$07) ;
 $736F JR NZ,$73A4    ;
 $7371 CALL $7405     ;
*$7374 CALL $7547     ; Read input: joystick or keyboard
 $7377 LD ($FD85),A   ; Save the input
 $737A AND $C0        ;
 $737C CP $C0         ;
 $737E LD HL,$FDC2    ;
 $7381 DEC (HL)       ;
 $7382 JR NZ,$738D    ;
 $7384 LD (HL),$02    ;
 $7386 SET 0,(IY+$07) ;
 $738A CALL $6474     ;
*$738D BIT 2,(IY+$07) ;
 $7391 CALL NZ,$6975  ; !!! Modifying argument: $6975 / $68CA
 $7394 POP DE         ;
 $7395 POP BC         ;
 $7396 POP AF         ;
 $7397 LD HL,($FD8F)  ;
 $739A LD SP,($FD8D)  ;
 $739E INC SP         ;
 $739F INC SP         ;
 $73A0 EI             ;
 $73A1 JP $FD91       ; -> $7A5D - Delay by BC-1 HALTs
*$73A4 CALL $73B7     ; Read Keyboard
 $73A7 LD ($FD98),A   ; Save last key read from keyboard
 $73AA LD ($FD99),BC  ;
 $73AE BIT 3,(IY+$07) ;
 $73B2 CALL NZ,$676B  ;
 $73B5 JR $7374       ;

; Read Keyboard
;
; Used by the routine at #R$7357.
c$73B7 LD BC,$FEFE        ;
 $73BA LD HL,$73DC        ;
 $73BD LD DE,$0005        ;
*$73C0 IN A,(C)           ;
 $73C2 OR $E0             ;
 $73C4 CPL                ;
 $73C5 OR A               ;
 $73C6 JR NZ,$73D1        ;
 $73C8 ADD HL,DE          ;
 $73C9 RLC B              ;
 $73CB JR C,$73C0         ;
 $73CD XOR A              ;
 $73CE LD B,A             ;
 $73CF LD C,A             ;
 $73D0 RET                ;
*$73D1 LD C,B             ;
 $73D2 LD B,$00           ;
 $73D4 SCF                ;
*$73D5 INC HL             ;
 $73D6 RL B               ;
 $73D8 RRCA               ;
 $73D9 JR NC,$73D5        ;
 $73DB LD A,(HL)          ;
 $73DC RET                ;
; Keyboard map
 $73DD DEFM $01,"ZXCV"    ;
 $73E2 DEFM "ASDFG"       ;
 $73E7 DEFM "QWERT"       ;
 $73EC DEFM "12345"       ;
 $73F1 DEFM "09876"       ;
 $73F6 DEFM "POIUY"       ;
 $73FB DEFM $0D,"LKJH"    ;
 $7400 DEFM " ",$02,"MNB" ;

; Routine at 7405
;
; Used by the routine at #R$7357.
c$7405 LD DE,($FD8D) ;
 $7409 LD A,D        ;
 $740A CP $80        ;
 $740C RET C         ;
 $740D CP $F0        ;
 $740F JP NC,$74FF   ;
 $7412 CALL $7416    ;
 $7415 INC DE        ;
*$7416 LD L,E        ;
 $7417 LD H,$80      ;
 $7419 XOR A         ;
 $741A XOR (HL)      ;
 $741B INC H         ;
 $741C XOR (HL)      ;
 $741D INC H         ;
 $741E XOR (HL)      ;
 $741F INC H         ;
 $7420 XOR (HL)      ;
 $7421 INC H         ;
 $7422 XOR (HL)      ;
 $7423 INC H         ;
 $7424 XOR (HL)      ;
 $7425 INC H         ;
 $7426 XOR (HL)      ;
 $7427 INC H         ;
 $7428 XOR (HL)      ;
 $7429 INC H         ;
 $742A XOR (HL)      ;
 $742B INC H         ;
 $742C XOR (HL)      ;
 $742D INC H         ;
 $742E XOR (HL)      ;
 $742F INC H         ;
 $7430 XOR (HL)      ;
 $7431 INC H         ;
 $7432 XOR (HL)      ;
 $7433 INC H         ;
 $7434 XOR (HL)      ;
 $7435 INC H         ;
 $7436 XOR (HL)      ;
 $7437 INC H         ;
 $7438 XOR (HL)      ;
 $7439 INC H         ;
 $743A XOR (HL)      ;
 $743B INC H         ;
 $743C XOR (HL)      ;
 $743D INC H         ;
 $743E XOR (HL)      ;
 $743F INC H         ;
 $7440 XOR (HL)      ;
 $7441 INC H         ;
 $7442 XOR (HL)      ;
 $7443 INC H         ;
 $7444 XOR (HL)      ;
 $7445 INC H         ;
 $7446 XOR (HL)      ;
 $7447 INC H         ;
 $7448 XOR (HL)      ;
 $7449 INC H         ;
 $744A XOR (HL)      ;
 $744B INC H         ;
 $744C XOR (HL)      ;
 $744D INC H         ;
 $744E XOR (HL)      ;
 $744F INC H         ;
 $7450 XOR (HL)      ;
 $7451 INC H         ;
 $7452 XOR (HL)      ;
 $7453 INC H         ;
 $7454 XOR (HL)      ;
 $7455 INC H         ;
 $7456 XOR (HL)      ;
 $7457 INC H         ;
 $7458 XOR (HL)      ;
 $7459 INC H         ;
 $745A XOR (HL)      ;
 $745B INC H         ;
 $745C XOR (HL)      ;
 $745D INC H         ;
 $745E XOR (HL)      ;
 $745F INC H         ;
 $7460 XOR (HL)      ;
 $7461 INC H         ;
 $7462 XOR (HL)      ;
 $7463 INC H         ;
 $7464 XOR (HL)      ;
 $7465 INC H         ;
 $7466 XOR (HL)      ;
 $7467 INC H         ;
 $7468 XOR (HL)      ;
 $7469 INC H         ;
 $746A XOR (HL)      ;
 $746B INC H         ;
 $746C XOR (HL)      ;
 $746D INC H         ;
 $746E XOR (HL)      ;
 $746F INC H         ;
 $7470 XOR (HL)      ;
 $7471 INC H         ;
 $7472 XOR (HL)      ;
 $7473 INC H         ;
 $7474 XOR (HL)      ;
 $7475 INC H         ;
 $7476 XOR (HL)      ;
 $7477 INC H         ;
 $7478 XOR (HL)      ;
 $7479 INC H         ;
 $747A XOR (HL)      ;
 $747B INC H         ;
 $747C XOR (HL)      ;
 $747D INC H         ;
 $747E XOR (HL)      ;
 $747F INC H         ;
 $7480 XOR (HL)      ;
 $7481 INC H         ;
 $7482 XOR (HL)      ;
 $7483 INC H         ;
 $7484 XOR (HL)      ;
 $7485 INC H         ;
 $7486 XOR (HL)      ;
 $7487 INC H         ;
 $7488 XOR (HL)      ;
 $7489 INC H         ;
 $748A XOR (HL)      ;
 $748B INC H         ;
 $748C XOR (HL)      ;
 $748D INC H         ;
 $748E XOR (HL)      ;
 $748F INC H         ;
 $7490 XOR (HL)      ;
 $7491 INC H         ;
 $7492 XOR (HL)      ;
 $7493 INC H         ;
 $7494 XOR (HL)      ;
 $7495 INC H         ;
 $7496 XOR (HL)      ;
 $7497 INC H         ;
 $7498 XOR (HL)      ;
 $7499 INC H         ;
 $749A XOR (HL)      ;
 $749B INC H         ;
 $749C XOR (HL)      ;
 $749D INC H         ;
 $749E XOR (HL)      ;
 $749F INC H         ;
 $74A0 XOR (HL)      ;
 $74A1 INC H         ;
 $74A2 XOR (HL)      ;
 $74A3 INC H         ;
 $74A4 XOR (HL)      ;
 $74A5 INC H         ;
 $74A6 XOR (HL)      ;
 $74A7 INC H         ;
 $74A8 XOR (HL)      ;
 $74A9 INC H         ;
 $74AA XOR (HL)      ;
 $74AB INC H         ;
 $74AC XOR (HL)      ;
 $74AD INC H         ;
 $74AE XOR (HL)      ;
 $74AF INC H         ;
 $74B0 XOR (HL)      ;
 $74B1 INC H         ;
 $74B2 XOR (HL)      ;
 $74B3 INC H         ;
 $74B4 XOR (HL)      ;
 $74B5 INC H         ;
 $74B6 XOR (HL)      ;
 $74B7 INC H         ;
 $74B8 XOR (HL)      ;
 $74B9 INC H         ;
 $74BA XOR (HL)      ;
 $74BB INC H         ;
 $74BC XOR (HL)      ;
 $74BD INC H         ;
 $74BE XOR (HL)      ;
 $74BF INC H         ;
 $74C0 XOR (HL)      ;
 $74C1 INC H         ;
 $74C2 XOR (HL)      ;
 $74C3 INC H         ;
 $74C4 XOR (HL)      ;
 $74C5 INC H         ;
 $74C6 XOR (HL)      ;
 $74C7 INC H         ;
 $74C8 XOR (HL)      ;
 $74C9 INC H         ;
 $74CA XOR (HL)      ;
 $74CB INC H         ;
 $74CC XOR (HL)      ;
 $74CD INC H         ;
 $74CE XOR (HL)      ;
 $74CF INC H         ;
 $74D0 XOR (HL)      ;
 $74D1 INC H         ;
 $74D2 XOR (HL)      ;
 $74D3 INC H         ;
 $74D4 XOR (HL)      ;
 $74D5 INC H         ;
 $74D6 XOR (HL)      ;
 $74D7 INC H         ;
 $74D8 XOR (HL)      ;
 $74D9 INC H         ;
 $74DA XOR (HL)      ;
 $74DB INC H         ;
 $74DC XOR (HL)      ;
 $74DD INC H         ;
 $74DE XOR (HL)      ;
 $74DF INC H         ;
 $74E0 XOR (HL)      ;
 $74E1 INC H         ;
 $74E2 XOR (HL)      ;
 $74E3 INC H         ;
 $74E4 XOR (HL)      ;
 $74E5 INC H         ;
 $74E6 XOR (HL)      ;
 $74E7 INC H         ;
 $74E8 XOR (HL)      ;
 $74E9 INC H         ;
 $74EA XOR (HL)      ;
 $74EB INC H         ;
 $74EC XOR (HL)      ;
 $74ED INC H         ;
 $74EE XOR (HL)      ;
 $74EF INC H         ;
 $74F0 XOR (HL)      ;
 $74F1 INC H         ;
 $74F2 XOR (HL)      ;
 $74F3 INC H         ;
 $74F4 XOR (HL)      ;
 $74F5 INC H         ;
 $74F6 XOR (HL)      ;
 $74F7 INC H         ;
 $74F8 XOR (HL)      ;
 $74F9 INC H         ;
 $74FA LD H,$FA      ; see $FA00
 $74FC XOR (HL)      ;
 $74FD LD (DE),A     ;
 $74FE RET           ;
*$74FF LD A,($FDF5)  ;
 $7502 EX AF,AF'     ;
 $7503 LD A,($FDF4)  ;
 $7506 CALL $7511    ; XOR AF and AF' with every byte in $F900-F9FF
 $7509 LD HL,($FD8D) ;
 $750C LD (HL),A     ;
 $750D EX AF,AF'     ;
 $750E INC L         ;
 $750F LD (HL),A     ;
 $7510 RET           ;

; XOR AF and AF' with every byte in $F900-F9FF
;
; Used by the routines at #R$6424 and #R$7405.
c$7511 LD HL,$F900   ;
*$7514 XOR (HL)      ; #0
 $7515 EX AF,AF'     ;
 $7516 INC L         ;
 $7517 XOR (HL)      ; #1
 $7518 EX AF,AF'     ;
 $7519 INC L         ;
 $751A XOR (HL)      ; #2
 $751B EX AF,AF'     ;
 $751C INC L         ;
 $751D XOR (HL)      ; #3
 $751E EX AF,AF'     ;
 $751F INC L         ;
 $7520 XOR (HL)      ; #4
 $7521 EX AF,AF'     ;
 $7522 INC L         ;
 $7523 XOR (HL)      ; #5
 $7524 EX AF,AF'     ;
 $7525 INC L         ;
 $7526 XOR (HL)      ; #6
 $7527 EX AF,AF'     ;
 $7528 INC L         ;
 $7529 XOR (HL)      ; #7
 $752A EX AF,AF'     ;
 $752B INC L         ;
 $752C XOR (HL)      ; #8
 $752D EX AF,AF'     ;
 $752E INC L         ;
 $752F XOR (HL)      ; #9
 $7530 EX AF,AF'     ;
 $7531 INC L         ;
 $7532 XOR (HL)      ; #10
 $7533 EX AF,AF'     ;
 $7534 INC L         ;
 $7535 XOR (HL)      ; #11
 $7536 EX AF,AF'     ;
 $7537 INC L         ;
 $7538 XOR (HL)      ; #12
 $7539 EX AF,AF'     ;
 $753A INC L         ;
 $753B XOR (HL)      ; #13
 $753C EX AF,AF'     ;
 $753D INC L         ;
 $753E XOR (HL)      ; #14
 $753F EX AF,AF'     ;
 $7540 INC L         ;
 $7541 XOR (HL)      ; #15
 $7542 EX AF,AF'     ;
 $7543 INC L         ;
 $7544 JR NZ,$7514   ;
 $7546 RET           ;

; Read input: joystick or keyboard
;
; Used by the routine at #R$7357.
c$7547 LD C,$00                             ;
 $7549 LD A,($FD84)                         ; Get joystick type 0..4
 $754C DEC A                                ;
 $754D JP M,$75A8                           ; => Read keysboard
 $7550 ADD A,A                              ;
 $7551 LD HL,$755B                          ;
 $7554 CALL $98D3                           ; -> $98EA - HL = HL + A
 $7557 CALL $98D6                           ; -> $98F0 - (HL) -> HL
 $755A JP (HL)                              ; Go to joystick read procedure
 $755B DEFW $7563,$7569,$757A,$7587         ; Joystick read procedure addresses
; Read Kempston
 $7563 IN A,($1F)                           ;
 $7565 AND $1F                              ;
 $7567 LD C,A                               ;
 $7568 RET                                  ;
; Read Interface II
 $7569 LD HL,$7570                          ;
 $756C LD B,$08                             ;
 $756E JR $75AD                             ;
 $7570 DEFB $EF,$01,$EF,$02,$EF,$04,$EF,$10 ; {Keyboard ports + bit masks for
 $7578 DEFB $EF,$08                         ; cursor keys}
; Read Fuller
 $757A LD B,$10                             ;
 $757C IN A,($7F)                           ;
 $757E RLCA                                 ;
*$757F RRCA                                 ;
 $7580 RL B                                 ;
 $7582 JR NC,$757F                          ;
 $7584 CPL                                  ;
 $7585 LD C,A                               ;
 $7586 RET                                  ;
; Read Cursor
 $7587 LD HL,$758E                          ;
 $758A LD B,$08                             ;
 $758C JR $75AD                             ;
 $758E DEFB $EF,$01,$EF,$08,$EF,$10,$F7,$10 ; {Keyboard ports + bit masks for
 $7596 DEFB $EF,$04                         ; cursor keys}

; Keyboard ports and bit masks - keys to read in game mode
b$7598 DEFB $FE,$01,$7F,$01,$7F,$04,$FE,$02
 $75A0 DEFB $F7,$02,$FB,$02,$EF,$02,$EF,$01

; Read keyboard in game mode
;
; Used by the routine at #R$7547.
c$75A8 LD B,$01      ;
 $75AA LD HL,$7598   ;
; This entry point is used by the routine at #R$7547.
*$75AD LD A,(HL)     ;
 $75AE INC HL        ;
 $75AF IN A,($FE)    ;
 $75B1 AND (HL)      ;
 $75B2 INC HL        ;
 $75B3 JR NZ,$75B6   ;
 $75B5 SCF           ;
*$75B6 RL B          ;
 $75B8 JR NC,$75AD   ;
 $75BA LD A,B        ;
 $75BB OR C          ;
 $75BC LD C,A        ;
 $75BD RET           ;

; Routine at 75BE
;
; Used by the routines at #R$6400, #R$6AE1, #R$6B21, #R$6B87 and #R$7274.
;
; I:HL ??
; I:BC ??
c$75BE LD D,B        ;
*$75BF LD E,L        ;
*$75C0 LD (HL),A     ;
 $75C1 INC L         ;
 $75C2 DJNZ $75C0    ;
 $75C4 LD B,D        ;
 $75C5 EX AF,AF'     ;
 $75C6 LD A,E        ;
 $75C7 ADD A,$20     ;
 $75C9 LD L,A        ;
 $75CA JR NC,$75CD   ;
 $75CC INC H         ;
*$75CD EX AF,AF'     ;
 $75CE DEC C         ;
 $75CF JR NZ,$75BF   ;
 $75D1 RET           ;

; Print key entered on Redefine Keys
;
; Used by the routine at #R$6A1E.
;
; I:A Key entered - character or special code
c$75D2 CP $0D           ;
 $75D4 JR Z,$75FB       ;
 $75D6 CP $20           ;
 $75D8 JR Z,$7608       ;
 $75DA CP $02           ;
 $75DC JR C,$75EF       ;
 $75DE JP NZ,$7637      ; => Print Char
 $75E1 CALL $7615       ; Print immediate string
 $75E4 DEFB $03,$05,$08 ;
 $75E7 DEFM "SYMBOL"    ;
 $75ED DEFB $1F         ;
 $75EE RET              ;
*$75EF CALL $7615       ; Print immediate string
 $75F2 DEFB $03,$03,$08 ;
 $75F5 DEFM "CAPS"      ;
 $75F9 DEFB $1F         ;
 $75FA RET              ;
*$75FB CALL $7615       ; Print immediate string
 $75FE DEFB $03,$04,$08 ;
 $7601 DEFM "ENTER"     ;
 $7606 DEFB $1F         ;
 $7607 RET              ;
*$7608 CALL $7615       ; Print immediate string
 $760B DEFB $03,$04,$08 ;
 $760E DEFM "SPACE"     ;
 $7613 DEFB $1F         ;
 $7614 RET              ;

; Print immediate string
;
; Used by the routines at #R$6825, #R$6A1E, #R$6BBB, #R$6C80, #R$6CAE, #R$6ECD,
; #R$7143, #R$7274, #R$75D2, #R$786E and #R$796A.
c$7615 EX (SP),HL    ;
 $7616 LD A,(HL)     ;
 $7617 INC HL        ;
 $7618 EX (SP),HL    ;
 $7619 CP $1F        ;
 $761B RET Z         ;
 $761C CALL $7637    ; Print char
 $761F JR $7615      ;

; Routine at 7621
;
; Used by the routine at #R$6400.
c$7621 LD A,H        ;
 $7622 CALL $7626    ;
 $7625 LD A,L        ;
; This entry point is used by the routine at #R$6400.
*$7626 PUSH AF       ;
 $7627 RRCA          ;
 $7628 RRCA          ;
 $7629 RRCA          ;
 $762A RRCA          ;
 $762B CALL $762F    ;
 $762E POP AF        ;
*$762F AND $0F       ;
 $7631 ADD A,$90     ;
 $7633 DAA           ;
 $7634 ADC A,$40     ;
 $7636 DAA           ;

; Print Char
;
; Used by the routines at #R$6825, #R$6BBB, #R$6C99, #R$6CAE, #R$6E34, #R$6ECD,
; #R$71A8, #R$725D, #R$7274, #R$75D2, #R$7615 and #R$783E.
;
; I:A Character to print
c$7637 PUSH HL        ;
 $7638 PUSH AF        ;
 $7639 LD A,($FDA7)   ;
 $763C AND A          ;
 $763D JR Z,$7655     ;
 $763F POP AF         ;
 $7640 PUSH AF        ;
 $7641 LD HL,($FDA9)  ;
 $7644 LD (HL),A      ;
 $7645 INC HL         ;
 $7646 LD ($FDA9),HL  ;
 $7649 LD A,($FDA7)   ;
 $764C DEC A          ;
 $764D LD ($FDA7),A   ;
 $7650 JR Z,$7675     ;
 $7652 POP AF         ;
 $7653 POP HL         ;
 $7654 RET            ;
*$7655 POP AF         ;
 $7656 PUSH AF        ;
 $7657 CP $20         ; $00..$1F ?
 $7659 JP NC,$7687    ; no => jump
; Process a special char $00..$1F
 $765C LD ($FDA8),A   ;
 $765F LD HL,$78CC    ;
 $7662 CALL $98D3     ; HL = HL + A
 $7665 LD A,(HL)      ; A = $00..$02
 $7666 LD ($FDA7),A   ;
 $7669 AND A          ;
 $766A JR Z,$7675     ;
 $766C LD HL,$FDAB    ;
 $766F LD ($FDA9),HL  ;
 $7672 POP AF         ;
 $7673 POP HL         ;
 $7674 RET            ;
*$7675 LD A,($FDA8)   ;
 $7678 ADD A,A        ;
 $7679 LD HL,$78EC    ;
 $767C CALL $98D3     ; HL = HL + A
 $767F CALL $98D6     ; (HL) -> HL
 $7682 PUSH HL        ;
 $7683 LD HL,$FDA5    ;
 $7686 RET            ;
; Print usual char >= $20
*$7687 PUSH BC        ;
 $7688 PUSH DE        ;
 $7689 CP $2E         ;
 $768B JR NZ,$768F    ;
 $768D LD A,$3A       ;
*$768F CP $21         ;
 $7691 JR NZ,$7695    ;
 $7693 LD A,$3C       ;
*$7695 CP $26         ;
 $7697 JR NZ,$769B    ;
 $7699 LD A,$3D       ;
*$769B SUB $20        ;
 $769D JR Z,$76A1     ;
 $769F SUB $0F        ;
*$76A1 LD HL,$FDAF    ;
 $76A4 BIT 0,(HL)     ;
 $76A6 JR Z,$76B6     ;
 $76A8 PUSH AF        ;
 $76A9 OR A           ;
 $76AA LD A,$06       ;
 $76AC CALL NZ,$6456  ;
 $76AF LD BC,$0004    ;
 $76B2 CALL $7A5C     ; Delay by BC
 $76B5 POP AF         ;
*$76B6 LD L,A         ;
 $76B7 LD H,$00       ;
 $76B9 ADD HL,HL      ;
 $76BA ADD HL,HL      ;
 $76BB ADD HL,HL      ; HL = HL * 8
 $76BC LD DE,($FDA3)  ; Get Font address
 $76C0 ADD HL,DE      ;
 $76C1 EX DE,HL       ;
 $76C2 LD HL,($FDA5)  ;
 $76C5 ADD HL,HL      ;
 $76C6 SLA L          ;
 $76C8 CALL $98D9     ;
 $76CB PUSH HL        ;
 $76CC LD B,$07       ;
 $76CE LD A,($FDB0)   ;
 $76D1 CP $01         ;
 $76D3 JR C,$7716     ;
 $76D5 JR Z,$76E6     ;
 $76D7 CP $02         ;
 $76D9 JR Z,$770A     ;
*$76DB LD A,(DE)      ;
 $76DC INC DE         ;
 $76DD XOR (HL)       ;
 $76DE LD (HL),A      ;
 $76DF CALL $98DC     ;
 $76E2 DJNZ $76DB     ;
 $76E4 JR $771E       ;
*$76E6 LD A,(DE)      ;
 $76E7 INC DE         ;
 $76E8 ADD A,A        ;
 $76E9 RR C           ;
 $76EB ADD A,A        ;
 $76EC RR C           ;
 $76EE ADD A,A        ;
 $76EF RR C           ;
 $76F1 ADD A,A        ;
 $76F2 RR C           ;
 $76F4 ADD A,A        ;
 $76F5 RR C           ;
 $76F7 ADD A,A        ;
 $76F8 RR C           ;
 $76FA ADD A,A        ;
 $76FB RR C           ;
 $76FD ADD A,A        ;
 $76FE RR C           ;
 $7700 LD A,(HL)      ;
 $7701 XOR C          ;
 $7702 LD (HL),A      ;
 $7703 CALL $98DC     ;
 $7706 DJNZ $76E6     ;
 $7708 JR $771E       ;
*$770A LD A,(DE)      ;
 $770B INC DE         ;
 $770C LD (HL),A      ;
 $770D INC H          ;
 $770E LD (HL),A      ;
 $770F CALL $98DC     ;
 $7712 DJNZ $770A     ;
 $7714 JR $771E       ;
*$7716 LD A,(DE)      ;
 $7717 INC DE         ;
 $7718 LD (HL),A      ;
 $7719 CALL $98DC     ;
 $771C DJNZ $7716     ;
*$771E LD HL,$FDAF    ;
 $7721 BIT 1,(HL)     ;
 $7723 POP HL         ;
 $7724 JR NZ,$774B    ;
 $7726 LD A,H         ;
 $7727 AND $07        ;
 $7729 LD C,A         ;
 $772A LD A,H         ;
 $772B RRA            ;
 $772C RRA            ;
 $772D RRA            ;
 $772E AND $03        ;
 $7730 ADD A,(IY+$22) ;
 $7733 LD H,A         ;
 $7734 LD A,($FDA0)   ;
 $7737 LD (HL),A      ;
 $7738 LD DE,$0020    ;
 $773B LD B,A         ;
 $773C INC C          ;
 $773D DEC C          ;
 $773E JR Z,$7742     ;
 $7740 ADD HL,DE      ;
 $7741 LD (HL),B      ;
*$7742 LD A,($FDB0)   ;
 $7745 CP $02         ;
 $7747 JR NZ,$774B    ;
 $7749 ADD HL,DE      ;
 $774A LD (HL),B      ;
*$774B POP DE         ;
 $774C POP BC         ;
 $774D LD A,($FDB1)   ;
 $7750 ADD A,A        ;
 $7751 LD HL,$775F    ;
 $7754 CALL $98D3     ; HL = HL + A
 $7757 CALL $98D6     ; (HL) -> HL
 $775A PUSH HL        ;
 $775B LD HL,$FDA5    ;
 $775E RET            ;

; Data block at 775F
b$775F DEFW $77C2
 $7761 DEFW $77CB
 $7763 DEFW $77AC
 $7765 DEFW $77B8

; Routine at 7767
c$7767 LD A,($FDAB)  ;
 $776A SUB $08       ;
 $776C JP C,$78BF    ;
 $776F CP $04        ;
 $7771 JP NC,$78BF   ;
 $7774 LD ($FDB1),A  ;
 $7777 JP $78C4      ;

; Routine at 777A
c$777A PUSH BC       ;
 $777B PUSH DE       ;
 $777C LD A,($FDAB)  ; Get attribute byte
 $777F LD E,A        ;
 $7780 LD D,$00      ;
 $7782 CALL $7795    ; Fill all screen attributes with D
 $7785 LD HL,$4000   ;
 $7788 LD BC,$0018   ;
 $778B CALL $779B    ; Clear all the screen bits
 $778E LD D,E        ;
 $778F CALL $7795    ; Fill all screen attributes with D
 $7792 JP $78C7      ;

; Fill all screen attributes with D
;
; Used by the routine at #R$777A.
c$7795 LD HL,$5800   ;
 $7798 LD BC,$0003   ;
; This entry point is used by the routine at #R$777A.
*$779B LD (HL),D     ;
 $779C INC L         ;
 $779D DJNZ $779B    ;
 $779F INC H         ;
 $77A0 DEC C         ;
 $77A1 JR NZ,$779B   ;
 $77A3 RET           ;

; Routine at 77A4
c$77A4 INC HL        ;
 $77A5 INC (HL)      ;
 $77A6 INC (HL)      ;
 $77A7 DEC HL        ;
; This entry point is used by the routine at #R$77CB.
*$77A8 LD A,($FD9F)  ;
 $77AB LD (HL),A     ;

; Routine at 77AC
c$77AC INC HL        ;
 $77AD LD A,(HL)     ;
 $77AE INC A         ;
 $77AF LD (HL),A     ;
 $77B0 CP $31        ;
 $77B2 JP NC,$78BF   ;
 $77B5 JP $78C4      ;

; Routine at 77B8
c$77B8 INC HL        ;
 $77B9 LD A,(HL)     ;
 $77BA DEC A         ;
 $77BB LD (HL),A     ;
 $77BC JP C,$78BF    ;
 $77BF JP $78C4      ;

; Routine at 77C2
c$77C2 LD A,(HL)     ;
 $77C3 DEC A         ;
 $77C4 LD (HL),A     ;
 $77C5 JP M,$78BF    ;
 $77C8 JP $78C4      ;

; Routine at 77CB
c$77CB LD A,(HL)     ;
 $77CC INC A         ;
 $77CD LD (HL),A     ;
 $77CE CP $20        ;
 $77D0 JP C,$78C4    ;
 $77D3 JR $77A8      ;

; Routine at 77D5
c$77D5 LD HL,$FDA0   ;
 $77D8 LD A,(HL)     ;
 $77D9 AND $BF       ;
 $77DB LD (HL),A     ;
 $77DC LD A,($FDAB)  ;
 $77DF CP $02        ;
 $77E1 JP NC,$78BF   ;
 $77E4 RRCA          ;
 $77E5 RRCA          ;
 $77E6 OR (HL)       ;
 $77E7 LD (HL),A     ;
 $77E8 JP $78C4      ;

; Routine at 77EB
c$77EB LD HL,$FDAF   ;
 $77EE LD A,($FDAB)  ;
 $77F1 CP $02        ;
 $77F3 JP NC,$78BF   ;
 $77F6 RES 0,(HL)    ;
 $77F8 OR (HL)       ;
 $77F9 LD (HL),A     ;
 $77FA JP $78C4      ;

; Routine at 77FD
c$77FD LD HL,$FDA0   ;
 $7800 LD A,(HL)     ;
 $7801 AND $F8       ;
 $7803 LD (HL),A     ;
 $7804 LD A,($FDAB)  ;
 $7807 CP $08        ;
 $7809 JP NC,$78BF   ;
 $780C OR (HL)       ;
 $780D LD (HL),A     ;
 $780E JP $78C4      ;

; Routine at 7811
c$7811 LD HL,$FDA0   ;
 $7814 LD A,(HL)     ;
 $7815 AND $C7       ;
 $7817 LD (HL),A     ;
 $7818 LD A,($FDAB)  ;
 $781B CP $08        ;
 $781D JP NC,$78BF   ;
 $7820 ADD A,A       ;
 $7821 ADD A,A       ;
 $7822 ADD A,A       ;
 $7823 OR (HL)       ;
 $7824 LD (HL),A     ;
 $7825 JP $78C4      ;

; Routine at 7828
c$7828 LD A,($FDAC)  ;
 $782B CP $20        ;
 $782D JP NC,$78BF   ;
 $7830 LD (HL),A     ;
 $7831 INC HL        ;
 $7832 LD A,($FDAB)  ;
 $7835 CP $2F        ;
 $7837 JP NC,$78BF   ;
 $783A LD (HL),A     ;
 $783B JP $78C4      ;

; Routine at 783E
c$783E LD HL,($FDAB) ;
*$7841 LD A,H        ;
 $7842 CALL $7637    ; Print char
 $7845 DEC L         ;
 $7846 JR NZ,$7841   ;
 $7848 JR $78C4      ;

; Routine at 784A
c$784A LD A,($FDAB)  ;
 $784D LD ($FD9F),A  ;
 $7850 JR $78C4      ;

; Routine at 7852
c$7852 LD A,($FDAB)  ;
 $7855 CP $20        ;
 $7857 JP NC,$78BF   ;
 $785A CP (HL)       ;
 $785B LD (HL),A     ;
 $785C JP NC,$78C4   ;
 $785F INC HL        ;
 $7860 LD A,(HL)     ;
 $7861 ADD A,$02     ;
 $7863 LD (HL),A     ;
 $7864 JR $78C4      ;

; Routine at 7866
c$7866 LD HL,($FDAB) ;
 $7869 LD ($FDA3),HL ;
 $786C JR $78C4      ;

; Routine at 786E
c$786E PUSH BC              ;
 $786F LD HL,$FDB0          ;
 $7872 LD B,(HL)            ;
 $7873 LD (HL),$00          ;
 $7875 CALL $7615           ;
 $7878 DEFB $08,$20,$08,$1F ;
 $787C LD (HL),B            ;
 $787D JR $78C8             ;

; Routine at 787F
c$787F LD A,($FDAB)  ;
 $7882 LD ($FDB0),A  ;
 $7885 JR $78C4      ;

; Routine at 7887
c$7887 LD HL,$FDAF   ;
 $788A RES 1,(HL)    ;
 $788C LD A,($FDAB)  ;
 $788F OR A          ;
 $7890 JR Z,$78C4    ;
 $7892 SET 1,(HL)    ;
 $7894 JR $78C4      ;

; Routine at 7896
c$7896 LD A,$07      ;
 $7898 LD ($FDA0),A  ;
 $789B LD A,$01      ;
 $789D LD ($FDB1),A  ;
 $78A0 XOR A         ;
 $78A1 LD ($FD9F),A  ;
 $78A4 LD ($FDAF),A  ;
 $78A7 LD ($FDB0),A  ;
 $78AA LD HL,$0000   ;
 $78AD LD ($FDA5),HL ;
 $78B0 LD HL,$7EA0   ; Font address
 $78B3 LD ($FDA3),HL ; Set Font address
 $78B6 LD HL,$5800   ;
 $78B9 LD ($FDA1),HL ;
 $78BC JP $78C4      ;

; -> $7A10
;
; Used by the routines at #R$7767, #R$77AC, #R$77B8, #R$77C2, #R$77D5, #R$77EB,
; #R$77FD, #R$7811, #R$7828 and #R$7852.
c$78BF JP $7A10      ;

; Data block at 78C2
b$78C2 DEFB $C1,$D1

; Routine at 78C4
;
; Used by the routines at #R$7767, #R$77AC, #R$77B8, #R$77C2, #R$77CB, #R$77D5,
; #R$77EB, #R$77FD, #R$7811, #R$7828, #R$783E, #R$784A, #R$7852, #R$7866,
; #R$787F, #R$7887 and #R$7896.
c$78C4 POP AF        ;
 $78C5 POP HL        ;
 $78C6 RET           ;

; Routine at 78C7
;
; Used by the routine at #R$777A.
c$78C7 POP DE        ;
; This entry point is used by the routine at #R$786E.
*$78C8 POP BC        ;
 $78C9 POP AF        ;
 $78CA POP HL        ;
 $78CB RET           ;

; Table to map special char $00..$1F to types $00..$02
b$78CC DEFB $01,$00,$01,$02,$00,$00,$00,$00
 $78D4 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $78DC DEFB $01,$01,$01,$01,$01,$01,$02,$00
 $78E4 DEFB $01,$01,$02,$00,$00,$00,$00,$00

; Address map to print chars $00..$1F - 32 addresses
w$78EC DEFW $777A
 $78EE DEFW $7896
 $78F0 DEFW $7767
 $78F2 DEFW $783E
 $78F4 DEFW $77A4
 $78F6 DEFW $78BF
 $78F8 DEFW $78BF
 $78FA DEFW $78BF
 $78FC DEFW $77C2
 $78FE DEFW $77CB
 $7900 DEFW $77AC
 $7902 DEFW $77B8
 $7904 DEFW $786E
 $7906 DEFW $77A8
 $7908 DEFW $78BF
 $790A DEFW $78BF
 $790C DEFW $77FD
 $790E DEFW $7811
 $7910 DEFW $77D5
 $7912 DEFW $784A
 $7914 DEFW $7852
 $7916 DEFW $7887
 $7918 DEFW $7828
 $791A DEFW $78BF
 $791C DEFW $787F
 $791E DEFW $77EB
 $7920 DEFW $7866
 $7922 DEFW $78BF
 $7924 DEFW $78BF
 $7926 DEFW $78BF
 $7928 DEFW $78BF
 $792A DEFW $78BF

; Prepare at new Area
;
; Used by the routine at #R$6BBB.
c$792C XOR A          ;
 $792D LD ($FD85),A   ; Clear last joystick/keyboard bits
 $7930 LD ($FD86),A   ; Clear Land space size
 $7933 LD ($FD88),A   ; Clear Offset in $FF00 buffer
 $7936 LD ($FDDA),A   ;
 $7939 LD ($FDE0),A   ;
 $793C LD ($FDFA),A   ;
 $793F LD ($FDFB),A   ;
 $7942 LD A,$FF       ;
 $7944 LD ($FDC3),A   ;
 $7947 LD ($FDC5),A   ;
 $794A LD ($FDC7),A   ;
 $794D LD ($FDC9),A   ;
 $7950 LD ($FDCB),A   ;
 $7953 RES 0,(IY+$62) ; Clear Player's dead flag
 $7957 RES 4,(IY+$15) ;
 $795B CALL $79E1     ;
 $795E CALL $6626     ; Prepare records and variables at $6648
 $7961 LD A,$31       ;
 $7963 CALL $6B87     ;
 $7966 CALL $6BAC     ;
 $7969 RET            ;

; Prepare New Game
;
; Used by the routine at #R$6BBB.
c$796A LD HL,($800A)                           ;
 $796D LD ($FD8A),HL                           ;
 $7970 XOR A                                   ;
 $7971 LD ($FDA7),A                            ;
 $7974 INC A                                   ;
 $7975 LD ($FDE5),A                            ; Area number = $01
 $7978 LD HL,$FDE8                             ; {Score = "000000"
 $797B LD B,$06                                ;
*$797D LD (HL),$30                             ;
 $797F INC HL                                  ;
 $7980 DJNZ $797D                              ; }
 $7982 LD A,$05                                ; {Player's lives = $05
 $7984 LD ($FDE6),A                            ; }
 $7987 INC A                                   ;
 $7988 LD ($FDE7),A                            ; Set grenades number = $06
 $798B LD A,$00                                ;
 $798D OUT ($FE),A                             ;
 $798F CALL $7615                              ; Print immediate string
 $7992 DEFB $01,$00,$30,$15,$00,$16,$00,$00    ;
 $799A DEFB $18,$00,$19,$00,$11,$02,$10,$07    ;
 $79A2 DEFM "000000  AREA 01  MEN 5  BOMBS 06" ;
 $79C2 DEFB $1F                                ;
 $79C3 EI                                      ;
 $79C4 HALT                                    ;
 $79C5 RES 0,(IY+$07)                          ;
 $79C9 RET                                     ;

; Routine at 79CA
;
; Used by the routine at #R$6400.
c$79CA DI              ;
 $79CB LD IY,$FD80     ;
 $79CF CALL $7A1E      ;
 $79D2 CALL $7A45      ; Prepare $FE00 table - addresses for every even screen
                       ; line
 $79D5 CALL $79FB      ; Calculate checksums??
 $79D8 LD (IY+$07),$00 ; Clear byte ($FD87)
 $79DC LD (IY+$42),$02 ; Set byte ($FDC2) = $02
 $79E0 RET             ;

; Routine at 79E1
;
; Used by the routine at #R$792C.
c$79E1 LD HL,$FF00   ;
 $79E4 LD C,$20      ;
 $79E6 LD A,$08      ;
*$79E8 LD (HL),A     ;
 $79E9 INC L         ;
 $79EA SUB $10       ;
 $79EC LD (HL),A     ;
 $79ED INC L         ;
 $79EE ADD A,$18     ;
 $79F0 LD B,$06      ;
*$79F2 LD (HL),$00   ;
 $79F4 INC L         ;
 $79F5 DJNZ $79F2    ;
 $79F7 DEC C         ;
 $79F8 JR NZ,$79E8   ;
 $79FA RET           ;

; Calculate checksums??
;
; Used by the routine at #R$79CA.
c$79FB LD HL,$8000   ;
 $79FE LD DE,$FA00   ;
*$7A01 LD B,$70      ;
 $7A03 XOR A         ;
*$7A04 XOR (HL)      ;
 $7A05 INC H         ;
 $7A06 DJNZ $7A04    ;
 $7A08 LD (DE),A     ;
 $7A09 INC E         ;
 $7A0A LD H,$80      ;
 $7A0C INC L         ;
 $7A0D JR NZ,$7A01   ;
 $7A0F RET           ;

; Routine at 7A10
;
; Used by the routines at #R$6400 and #R$78BF.
c$7A10 DI            ;
 $7A11 LD SP,($FD80) ;
 $7A15 EXX           ;
 $7A16 POP IY        ;
 $7A18 POP HL        ;
 $7A19 EXX           ;
 $7A1A IM 1          ;
 $7A1C EI            ;
 $7A1D RET           ;

; Routine at 7A1E
;
; Used by the routine at #R$79CA.
c$7A1E LD A,($7A42)  ;
 $7A21 LD ($FD91),A  ;
 $7A24 LD HL,$FB00   ;
 $7A27 LD B,$00      ;
*$7A29 LD (HL),$FC   ;
 $7A2B INC HL        ;
 $7A2C DJNZ $7A29    ;
 $7A2E LD (HL),$FC   ;
 $7A30 LD DE,$FCFC   ;
 $7A33 LD HL,$7A42   ;
 $7A36 LD BC,$0003   ;
 $7A39 LDIR          ;
 $7A3B LD A,$FB      ;
 $7A3D LD I,A        ;
 $7A3F IM 2          ;
 $7A41 RET           ;

; -> $7357
c$7A42 JP $7357      ;

; Prepare $FE00 table - addresses for every even screen line
;
; Used by the routine at #R$79CA.
c$7A45 LD B,$80      ;
 $7A47 LD DE,$4000   ;
 $7A4A LD HL,$FE00   ;
*$7A4D LD (HL),E     ;
 $7A4E INC L         ;
 $7A4F LD (HL),D     ;
 $7A50 INC L         ;
 $7A51 EX DE,HL      ;
 $7A52 CALL $98DC    ; -> $9904 - DOWN HL
 $7A55 CALL $98DC    ; -> $9904 - DOWN HL
 $7A58 EX DE,HL      ;
 $7A59 DJNZ $7A4D    ;
 $7A5B RET           ;

; Delay by BC HALTs
;
; Used by the routines at #R$6400, #R$6BBB and #R$7637.
c$7A5C HALT          ;
; This entry point is used by the routine at #R$FD91.
*$7A5D DEC BC        ;
 $7A5E LD A,B        ;
 $7A5F OR C          ;
 $7A60 JR NZ,$7A5C   ;
 $7A62 RET           ;

; Data block at 7A63
b$7A63 DEFB $10,$FB,$36,$FC,$11,$FC,$FC

; Message at 7A6A
t$7A6A DEFM "!yz"

; Data block at 7A6D
b$7A6D DEFB $01,$03,$00,$ED,$B0,$3E,$FB,$ED
 $7A75 DEFB $47,$ED,$5E,$C9,$C3,$89,$73,$06
 $7A7D DEFB $80,$11,$00,$40,$21,$00,$FE,$73
 $7A85 DEFB $2C,$72,$2C

; Data block at 7A88
b$7A88 DEFB $EB,$CD,$DC,$98,$CD,$DC,$98,$EB
 $7A90 DEFB $10,$F2,$C9,$76,$0B,$78,$B1,$20
 $7A98 DEFB $FA,$C9,$00,$00,$00,$00,$00,$00
 $7AA0 DEFB $00,$00,$00,$07,$07,$07,$00,$00
 $7AA8 DEFB $00,$00,$00,$00,$00,$08,$88,$88
 $7AB0 DEFB $80,$00,$00,$00,$00,$00,$00,$10
 $7AB8 DEFB $50,$50,$40,$00,$00,$00,$00,$00
 $7AC0 DEFB $00,$10,$58,$D0,$40,$00,$00,$00
 $7AC8 DEFB $00,$00,$00,$10,$5F,$D0,$40,$00
 $7AD0 DEFB $00,$00,$00,$00,$00,$10,$4F,$90
 $7AD8 DEFB $40,$00,$00,$00,$00,$00,$00,$10
 $7AE0 DEFB $47,$10,$40,$00,$00,$00,$00,$00
 $7AE8 DEFB $00,$10,$40,$10,$40,$00,$00,$00
 $7AF0 DEFB $00,$03,$FF,$90,$47,$10,$3E,$03
 $7AF8 DEFB $FF,$80,$00,$1C,$00,$50,$48,$90
 $7B00 DEFB $01,$1C,$00,$40,$00,$20,$00,$50
 $7B08 DEFB $50,$50

; Data block at 7B0A
b$7B0A DEFB $01,$20,$00,$40,$00,$40,$FF,$D0
 $7B12 DEFB $50,$50,$3F

; Data block at 7B15
b$7B15 DEFB $40,$FF,$C0,$00,$43,$FF,$90,$50
 $7B1D DEFB $50,$7E,$43,$FF,$80,$00,$87,$00
 $7B25 DEFB $10,$50,$50,$40,$87,$00,$00,$00
 $7B2D DEFB $8C,$00,$10,$50,$50,$40,$8C,$00
 $7B35 DEFB $00,$01,$88,$00,$10,$50,$50,$41

; Data block at 7B3D
b$7B3D DEFB $88,$00,$00,$01,$88,$00,$18,$58
 $7B45 DEFB $58,$41

; Data block at 7B47
b$7B47 DEFB $88,$00,$00,$01,$88,$00,$18,$D8
 $7B4F DEFB $D8,$C1,$88,$00,$00,$03,$87,$FF
 $7B57 DEFB $98,$D8,$D8,$C3,$87,$FF,$80,$03
 $7B5F DEFB $80,$00,$58,$D8,$D8,$C3,$80,$00
 $7B67 DEFB $40,$03,$C0,$00,$5D,$DD,$DD,$C3
 $7B6F DEFB $C0,$00,$40,$03,$FF,$FF,$DF,$DF
 $7B77 DEFB $DF,$C3,$FF,$FF,$C0,$01,$FF,$FF
 $7B7F DEFB $9F,$DF,$DF,$C1,$FF,$FF,$80,$01
 $7B87 DEFB $F8,$00,$1F,$DF,$DF,$C1,$F8,$00
 $7B8F DEFB $00,$01,$F8,$00,$1E,$DE,$DE,$C1
 $7B97 DEFB $F8,$00,$00,$00,$FC,$00,$1F,$5F
 $7B9F DEFB $5F,$40,$FC,$00,$00,$00,$FB,$00
 $7BA7 DEFB $1E,$DE,$DE,$C0,$FB,$00,$00,$00
 $7BAF DEFB $75,$FF,$9D,$5D,$5D,$3E,$75

; Data block at 7BB6
b$7BB6 DEFB $FF,$80,$00,$7A,$00,$5A,$DA,$DA
 $7BBE DEFB $81,$7A,$00,$40,$00,$3D,$00,$5D
 $7BC6 DEFB $5D,$5D,$41,$3D

; Data block at 7BCA
b$7BCA DEFB $00,$40,$00,$1F,$FF,$CF,$8F,$8F
 $7BD2 DEFB $FF,$1F,$FF,$C0,$00,$03,$FF,$87
 $7BDA DEFB $07,$07,$FE,$03,$FF,$80,$00,$03
 $7BE2 DEFB $FF,$FE,$00,$00,$00,$00,$00,$00
 $7BEA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7BF2 DEFB $07,$F8,$00,$00,$00,$7C,$47,$FD
 $7BFA DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7C02 DEFB $00,$00,$00,$00,$00,$00,$FB,$E7
 $7C0A DEFB $F8,$00,$00,$88,$0F,$FB,$80,$00
 $7C12 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7C1A DEFB $00,$00,$00,$01,$FF,$F0,$07,$80
 $7C22 DEFB $01,$00,$0F,$FB,$C3,$FE,$00,$00
 $7C2A DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7C32 DEFB $0E,$FF,$FF,$F0,$00,$80,$01,$00
 $7C3A DEFB $1F,$FF,$FF,$FF,$F0,$00,$00,$00
 $7C42 DEFB $00,$00,$00,$00,$00,$01,$B7,$87
 $7C4A DEFB $FF,$F8,$18,$40,$02,$01,$E0,$FF
 $7C52 DEFB $F3,$FF,$C8,$F0,$00,$00,$00,$00
 $7C5A DEFB $00,$00,$00,$0F,$5F,$CF,$99,$07
 $7C62 DEFB $F0,$40,$04,$FE,$3F,$00,$37,$EF
 $7C6A DEFB $BF,$F1,$FC,$00,$00,$00,$00,$00
 $7C72 DEFB $05,$DF,$DF,$EF,$00,$DC,$0F,$E0
 $7C7A DEFB $0F,$00,$3F,$EF,$80,$07,$FD,$FE
 $7C82 DEFB $26,$78,$00,$00,$00,$1F,$FF,$EF
 $7C8A DEFB $FF,$00,$FB,$FC,$00,$20,$0A,$04
 $7C92 DEFB $FF,$C1,$E7,$F0,$05,$F8,$5F,$F8
 $7C9A DEFB $7F,$03,$F8,$3F,$0F,$EE,$00,$EF
 $7CA2 DEFB $F2,$FC,$00,$20,$08,$38,$3F,$07
 $7CAA DEFB $F7,$5B,$F8,$00,$7E,$5F,$8F,$83
 $7CB2 DEFB $E7,$8B,$8E,$01,$EF,$EF,$E1,$FC
 $7CBA DEFB $00,$20,$0B,$C6,$3F,$C6,$F7,$E0
 $7CC2 DEFB $FC,$FC,$00,$5C,$1F,$83,$F0,$BE
 $7CCA DEFB $01,$C7,$C4,$EF,$E1,$FC,$01,$E0
 $7CD2 DEFB $0C,$00,$3F,$C6,$F7,$F1,$FC,$FC
 $7CDA DEFB $78,$00,$1B,$83,$F0,$41,$C7,$C7
 $7CE2 DEFB $23,$CE,$00,$FC,$1E,$20,$09,$E0
 $7CEA DEFB $3F,$C5,$F7,$F1,$FC,$2C,$F6,$7E
 $7CF2 DEFB $20,$04,$50,$5F,$07,$C7,$E7,$AF
 $7CFA DEFB $A1,$3C,$00,$20,$0E,$00,$FF,$C3
 $7D02 DEFB $F7,$F1,$FC,$FE,$FE,$15,$3F,$07
 $7D0A DEFB $F0,$5C,$E7,$C7,$E7,$EF,$61,$DF
 $7D12 DEFB $00,$00,$08,$03,$3F,$FF,$F7,$F1
 $7D1A DEFB $AC,$FE,$FE,$7F,$7F,$07,$F8,$47
 $7D22 DEFB $E7,$C1,$E7,$EF,$E0,$FC,$70,$20
 $7D2A DEFB $08,$04,$3F,$D0,$07,$F1,$F0,$FE
 $7D32 DEFB $FE,$7F,$FF,$07,$F8,$2F,$F7,$C7
 $7D3A DEFB $67,$EF,$E0,$5C,$08,$20,$08,$3A
 $7D42 DEFB $3F,$D0,$00,$F1,$FC,$4F,$FE,$0F
 $7D4A DEFB $FF,$07,$F8,$33,$F7,$07,$E3,$E2
 $7D52 DEFB $E1,$FC,$06,$20,$09,$81,$3F,$D0
 $7D5A DEFB $07,$F1,$FC,$FF,$F4,$7F,$F8,$07
 $7D62 DEFB $B8,$3F,$2F,$C7,$84,$EF,$E1,$FC
 $7D6A DEFB $19,$A0,$0E,$00,$3A,$3F,$F7,$41
 $7D72 DEFB $FC,$FD,$EE,$7F,$EF,$0F,$BC,$1F
 $7D7A DEFB $FF,$C7,$E7,$EF,$E0,$5C,$20,$20
 $7D82 DEFB $08,$00,$CF,$C7,$F7,$F1,$FC,$FF
 $7D8A DEFB $DE,$7F,$FF,$0E,$3C,$1F,$FF,$87
 $7D92 DEFB $E7,$EF,$E1,$FC,$00,$20,$08,$00
 $7D9A DEFB $1F,$C7,$F7,$F1,$FC,$FE,$DE,$78
 $7DA2 DEFB $EF,$0F,$3C,$1F,$DF,$C7,$E7,$0F
 $7DAA DEFB $E1,$9C,$00,$20,$08,$EC,$3F,$C7
 $7DB2 DEFB $F7,$F1,$CC,$FA,$BE,$7D,$DF,$0F
 $7DBA DEFB $04,$1E,$FF,$C7,$E6,$CF,$E0,$6F
 $7DC2 DEFB $6C,$20

; Data block at 7DC4
b$7DC4 DEFB $0F,$00,$7F,$C7,$F7,$F1,$BC,$F9
 $7DCC DEFB $BE,$7D,$DF,$0F,$3E,$18,$00,$00
 $7DD4 DEFB $C1,$EF,$E1,$FC,$C0,$20,$08,$01
 $7DDC DEFB $FF,$C7,$F7,$F1,$FC,$FB,$BE,$7D
 $7DE4 DEFB $DF,$0E,$FE,$0F,$7F,$C4,$E7,$E1
 $7DEC DEFB $73,$FC,$00,$60,$08,$0A,$3F,$EB
 $7DF4 DEFB $F7,$C0,$FC,$F9,$3E,$3C,$9F,$1B
 $7DFC DEFB $F8,$1E,$7C,$C7,$C7,$EF,$EF,$FC
 $7E04 DEFB $00,$60,$08,$00,$3F,$EF,$F7,$F1
 $7E0C DEFB $7C,$F9,$3E,$2C,$9F,$1F,$A6,$1F
 $7E14 DEFB $3F,$47,$EF,$EF,$DE,$FF,$00,$A0
 $7E1C DEFB $08,$0F,$FE,$DE,$77,$FB,$FC,$28
 $7E24 DEFB $3E,$7C,$1F,$1F,$FF,$1F,$3E,$07
 $7E2C DEFB $FF,$E7,$FF,$0C,$80,$20,$07,$F0
 $7E34 DEFB $1D,$FF,$84,$57,$E4,$F8,$3E,$78
 $7E3C DEFB $1F,$1F,$1F,$0B,$1C,$C7,$FB,$E8
 $7E44 DEFB $7F,$B7,$F0,$20,$04,$C0,$03,$FF
 $7E4C DEFB $E3,$FF,$F9,$FC,$7F,$72,$3C,$A5
 $7E54 DEFB $08,$BF,$9B,$EF,$FD,$EF,$BF,$F8
 $7E5C DEFB $4F,$C0,$03,$20,$0F,$FF,$C3,$9F
 $7E64 DEFB $F8,$7C,$7F,$6E,$3F,$BF,$9F,$BF
 $7E6C DEFB $8F,$EF,$FD,$C7,$DF,$F0,$80,$40
 $7E74 DEFB $00,$80,$07,$FF,$81,$BF,$F1,$AC
 $7E7C DEFB $7F,$7E,$3F,$BF,$9F,$BF,$8F,$EF
 $7E84 DEFB $FF,$83,$FF,$F0,$00,$80,$00,$7F
 $7E8C DEFB $FF,$FF,$7F,$7F,$EE,$FB,$BE,$BD
 $7E94 DEFB $DF,$5F,$6F,$5F,$75,$D7,$FF,$7D
 $7E9C DEFB $FF,$FF,$FF,$00

; Font
;
; #HTML[#UDGARRAY16;$7EA0-$7F1F-8(font0.png)]
; #HTML[#UDGARRAY28;$7F20-$7FFF-8(font1.png)]
b$7EA0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $7EA8 DEFB $28,$6C,$6C,$6C,$6C,$6C,$28,$00
 $7EB0 DEFB $18,$38,$18,$18,$18,$18,$3C,$00
 $7EB8 DEFB $5C,$CE,$4E,$1C,$30,$06,$7E,$00
 $7EC0 DEFB $6C,$C6,$06,$1C,$06,$C6,$6C,$00
 $7EC8 DEFB $0C,$0C,$2C,$4C,$EE,$0C,$1E,$00
 $7ED0 DEFB $FE,$FC,$80,$EC,$06,$C6,$EC,$00
 $7ED8 DEFB $34,$62,$60,$6C,$66,$66,$34,$00
 $7EE0 DEFB $FE,$F8,$86,$1C,$38,$3C,$18,$00
 $7EE8 DEFB $6C,$C6,$C6,$6C,$C6,$C6,$6C,$00
 $7EF0 DEFB $2C,$66,$66,$36,$06,$46,$2C,$00
 $7EF8 DEFB $00,$00,$00,$00,$00,$18,$18,$00
 $7F00 DEFB $6C,$9E,$BE,$BE,$5C,$38,$10,$00
 $7F08 DEFB $18,$18,$18,$18,$18,$00,$18,$00
 $7F10 DEFB $38,$64,$38,$72,$9A,$D8,$6C,$00
 $7F18 DEFB $10,$30,$7E,$FE,$7E,$30,$10,$00
 $7F20 DEFB $E0,$80,$CC,$8A,$EA,$0A,$0C,$00
 $7F28 DEFB $18,$18,$18,$18,$18,$18,$18,$00
 $7F30 DEFB $30,$30,$58,$58,$7C,$8C,$9E,$00
 $7F38 DEFB $EC,$66,$66,$6C,$66,$66,$EC,$00
 $7F40 DEFB $6E,$C6,$C2,$C0,$C0,$C2,$6C,$00
 $7F48 DEFB $EC,$66,$66,$66,$66,$66,$EC,$00
 $7F50 DEFB $EE,$62,$64,$6C,$64,$62,$EE,$00
 $7F58 DEFB $EE,$62,$64,$6C,$64,$60,$E0,$00
 $7F60 DEFB $6E,$C6,$C2,$C0,$CE,$C6,$6C,$00
 $7F68 DEFB $EE,$6C,$6C,$7C,$6C,$6C,$EE,$00
 $7F70 DEFB $3C,$18,$18,$18,$18,$18,$3C,$00
 $7F78 DEFB $1E,$0C,$0C,$0C,$CC,$8C,$58,$00
 $7F80 DEFB $EE,$64,$68,$78,$6C,$6C,$EE,$00
 $7F88 DEFB $F0,$60,$60,$60,$62,$66,$EE,$00
 $7F90 DEFB $8E,$DC,$FC,$7C,$AC,$AC,$8E,$00
 $7F98 DEFB $C6,$E2,$72,$BA,$9C,$8E,$C6,$00
 $7FA0 DEFB $6C,$C6,$C6,$C6,$C6,$C6,$6C,$00
 $7FA8 DEFB $EC,$66,$66,$66,$6C,$60,$E0,$00
 $7FB0 DEFB $6C,$C6,$C6,$C6,$D6,$CC,$6A,$00
 $7FB8 DEFB $EC,$66,$66,$6C,$6C,$66,$E6,$00
 $7FC0 DEFB $6E,$E2,$F0,$7C,$1E,$8E,$EC,$00
 $7FC8 DEFB $5A,$5A,$18,$18,$18,$18,$18,$00
 $7FD0 DEFB $F2,$62,$62,$62,$62,$62,$34,$00
 $7FD8 DEFB $F2,$62,$64,$34,$30,$18,$18,$00
 $7FE0 DEFB $E2,$6A,$6A,$6A,$34,$34,$34,$00
 $7FE8 DEFB $C6,$E4,$70,$38,$1C,$4E,$C6,$00
 $7FF0 DEFB $E6,$64,$30,$18,$18,$18,$3C,$00
 $7FF8 DEFB $F6,$CE,$9C,$38,$72,$E6,$DE,$00

; Data block at 8000
b$8000 DEFB $C3,$00,$64

; -> $9193
;
; Used by the routines at #R$6BAC and #R$DC95.
c$8003 JP $9193      ;

; -> $91AA
;
; Used by the routines at #R$6BBB and #R$DE91.
c$8006 JP $91AA      ;

; Data block at 8009
b$8009 DEFB $C3,$36,$92

; -> $8E92
;
; Used by the routine at #R$69B4.
c$800C JP $8E92      ;

; -> $806B
;
; Used by the routines at #R$65A5 and #R$DD8D.
c$800F JP $806B      ;

; Data block at 8012
b$8012 DEFB $F5,$86,$AC,$90,$14,$90,$05,$90
 $801A DEFB $42,$8F,$49,$8F,$3E,$90,$F1,$87
 $8022 DEFB $6E,$87,$17,$8F,$26,$8F,$35,$8F
 $802A DEFB $CC,$8D,$5D,$8D,$B5,$8E,$CC,$8E
 $8032 DEFB $E3,$8E,$74,$8E,$83,$8E,$01,$83
 $803A DEFB $FD,$88,$14,$89,$2F,$87,$7F,$89
 $8042 DEFB $58,$8D,$94,$85,$58,$84,$A4,$83
 $804A DEFB $3F,$83,$2F,$83,$44,$83,$2B,$82
 $8052 DEFB $8F,$81,$87,$81,$69,$81,$78,$81
 $805A DEFB $64,$81,$4D,$90,$58,$81,$62,$80
 $8062 DEFB $FD,$73,$7B,$FD,$36,$7D,$01,$37
 $806A DEFB $C9

; Routine at 806B
;
; Used by the routines at #R$800F and #R$82C1.
c$806B EXX           ;
 $806C LD D,(IX+$01) ;
 $806F LD E,(IX+$00) ;
 $8072 LD A,(IX+$07) ;
 $8075 CP $12        ;
 $8077 JR Z,$80D6    ;
 $8079 LD H,(IX+$05) ;
 $807C LD L,(IX+$04) ;
 $807F LD A,L        ;
 $8080 CP E          ;
 $8081 JR Z,$8092    ;
 $8083 JP M,$808B    ;
 $8086 CALL $80FB    ;
 $8089 JR $8092      ;
*$808B INC E         ;
 $808C INC E         ;
 $808D CALL $80FB    ;
 $8090 DEC E         ;
 $8091 DEC E         ;
*$8092 CALL $8101    ;
 $8095 INC L         ;
 $8096 CALL $8101    ;
 $8099 INC L         ;
 $809A CALL $8101    ;
 $809D DEC L         ;
 $809E DEC L         ;
 $809F LD A,D        ;
 $80A0 AND $FC       ;
 $80A2 LD B,A        ;
 $80A3 LD A,H        ;
 $80A4 AND $FC       ;
 $80A6 CP B          ;
 $80A7 JR Z,$80B4    ;
 $80A9 JP M,$80B1    ;
 $80AC CALL $80E4    ;
 $80AF JR $80B4      ;
*$80B1 CALL $80EA    ;
*$80B4 LD A,D        ;
 $80B5 INC A         ;
 $80B6 AND $FC       ;
 $80B8 LD B,A        ;
 $80B9 LD A,H        ;
 $80BA INC A         ;
 $80BB AND $FC       ;
 $80BD CP B          ;
 $80BE JR Z,$80D3    ;
 $80C0 JP M,$80CC    ;
 $80C3 LD A,H        ;
 $80C4 ADD A,$0A     ;
 $80C6 LD A,H        ;
 $80C7 CALL $80EA    ;
 $80CA JR $80D3      ;
*$80CC LD A,D        ;
 $80CD ADD A,$0A     ;
 $80CF LD D,A        ;
 $80D0 CALL $80E4    ;
*$80D3 JP $98D0      ;
*$80D6 CALL $80FB    ;
 $80D9 INC E         ;
 $80DA CALL $80FB    ;
 $80DD INC E         ;
 $80DE CALL $80FB    ;
 $80E1 JP $98D0      ;

; Routine at 80E4
;
; Used by the routine at #R$806B.
c$80E4 PUSH DE       ;
 $80E5 EXX           ;
 $80E6 LD B,$01      ;
 $80E8 JR $80ED      ;

; Routine at 80EA
;
; Used by the routine at #R$806B.
c$80EA PUSH HL       ;
 $80EB EXX           ;
 $80EC LD B,C        ;
; This entry point is used by the routine at #R$80E4.
*$80ED POP DE        ;
 $80EE CALL $8122    ;
 $80F1 INC E         ;
 $80F2 CALL $8122    ;
 $80F5 INC E         ;
 $80F6 CALL $8122    ;
 $80F9 EXX           ;
 $80FA RET           ;

; Routine at 80FB
;
; Used by the routine at #R$806B.
c$80FB PUSH DE       ;
 $80FC EXX           ;
 $80FD LD B,$01      ;
 $80FF JR $8104      ;

; Routine at 8101
;
; Used by the routine at #R$806B.
c$8101 PUSH HL       ;
 $8102 EXX           ;
 $8103 LD B,C        ;
; This entry point is used by the routine at #R$80FB.
*$8104 POP DE        ;
 $8105 CALL $8122    ;
 $8108 LD A,D        ;
 $8109 ADD A,$04     ;
 $810B LD D,A        ;
 $810C CALL $8122    ;
 $810F LD A,D        ;
 $8110 ADD A,$04     ;
 $8112 LD D,A        ;
 $8113 CALL $8122    ;
 $8116 LD A,D        ;
 $8117 ADD A,$04     ;
 $8119 LD D,A        ;
 $811A INC A         ;
 $811B AND $03       ;
 $811D CALL Z,$8122  ;
 $8120 EXX           ;
 $8121 RET           ;

; Routine at 8122
;
; Used by the routines at #R$80EA and #R$8101.
c$8122 LD A,E        ;
 $8123 CP $20        ;
 $8125 RET NC        ;
 $8126 LD A,D        ;
 $8127 DEC A         ;
 $8128 CP $5F        ;
 $812A RET NC        ;
 $812B INC A         ;
 $812C CP $04        ;
 $812E RET C         ;
 $812F ADD A,A       ;
 $8130 ADD A,A       ;
 $8131 LD H,$16      ;
 $8133 RL H          ;
 $8135 ADD A,A       ;
 $8136 RL H          ;
 $8138 AND $E0       ;
 $813A OR E          ;
 $813B LD L,A        ;
 $813C LD A,B        ;
 $813D CP $01        ;
 $813F JR Z,$814D    ;
 $8141 LD A,(HL)     ;
 $8142 AND $07       ;
 $8144 CP $01        ;
 $8146 RET NZ        ;
 $8147 LD A,(HL)     ;
 $8148 AND $38       ;
 $814A OR B          ;
 $814B LD (HL),A     ;
 $814C RET           ;
*$814D LD A,(HL)     ;
 $814E AND $07       ;
 $8150 CP C          ;
 $8151 RET NZ        ;
 $8152 LD A,(HL)     ;
 $8153 AND $38       ;
 $8155 OR B          ;
 $8156 LD (HL),A     ;
 $8157 RET           ;

; Data block at 8158
b$8158 DEFB $3E,$01,$1D,$28,$02,$3E,$07,$CD

; Message at 8160
t$8160 DEFM "-d7"

; Data block at 8163
b$8163 DEFB $C9,$2A,$2C,$C0,$18,$03,$2A,$28
 $816B DEFB $C0,$7A,$FE,$65,$3F,$D8,$06,$06
 $8173 DEFB $0E,$30,$C3,$7B,$8A,$7A,$FE,$65
 $817B DEFB $3F,$D8,$2A,$2A,$C0,$06,$06,$0E
 $8183 DEFB $30,$C3,$4B,$8B,$1D,$37,$C0,$FD
 $818B DEFB $CB,$15,$E6,$C9,$01,$01,$17,$CD
 $8193 DEFB $7C,$86,$D8,$EB,$7B,$D6,$08,$5F
 $819B DEFB $0E,$02,$3A,$E0,$FD,$FE,$1F,$20
 $81A3 DEFB $02,$0E,$01,$3E,$08,$CD,$9E,$89
 $81AB DEFB $7B,$C6,$08,$5F,$EB,$11,$FF,$FF
 $81B3 DEFB $D9,$21,$FF,$FF

; Message at 81B7
t$81B7 DEFM "DLT"

; Data block at 81BA
b$81BA DEFB $5C,$3A,$E0,$FD,$CB,$20,$CB,$11
 $81C2 DEFB $CB,$14,$CB,$15,$CB,$3B,$CB,$1A
 $81CA DEFB $D9,$CB,$1B,$CB,$1A,$D9,$3D,$F2
 $81D2 DEFB $BE,$81,$D9,$78,$FE,$17,$20,$15
 $81DA DEFB $3E,$08,$2D,$36,$00,$3D,$20,$FA
 $81E2 DEFB $24,$3E,$08,$36,$00

; Message at 81E7
t$81E7 DEFM ",= "

; Data block at 81EA
b$81EA DEFB $FA,$05,$CD,$DC,$98,$ED,$73,$82
 $81F2 DEFB $FD,$F9,$D5,$D9,$D5,$C5,$E5,$D9
 $81FA DEFB $24,$F9,$D5,$D9,$D5,$C5,$E5,$D9
 $8202 DEFB $24,$7C,$E6,$07,$20,$0A,$7D,$C6

; Message at 820A
t$820A DEFM " o8"

; Data block at 820D
b$820D DEFB $04,$7C,$D6,$08,$67,$10,$DF,$ED
 $8215 DEFB $7B,$82,$FD,$B7,$FD,$CB,$15,$66
 $821D DEFB $C8,$21,$E0,$FD,$34,$7E,$FE,$20
 $8225 DEFB $3F,$D0,$36,$00,$37,$C9

; Routine at 822B
c$822B LD IX,$FDCF     ;
 $822F BIT 7,(IX+$0B)  ;
 $8233 JR Z,$82A7      ;
 $8235 LD A,D          ;
 $8236 CP $28          ;
 $8238 JR NC,$8244     ;
 $823A LD A,R          ;
 $823C JP P,$826F      ;
 $823F INC (IX+$05)    ;
 $8242 JR $826F        ;
*$8244 LD A,(IX+$0B)   ;
 $8247 OR $ED          ;
 $8249 INC A           ;
 $824A JR NZ,$824F     ;
 $824C LD ($FDDB),A    ;
*$824F BIT 0,(IY+$5B)  ;
 $8253 JR NZ,$8262     ;
 $8255 DEC (IX+$06)    ;
 $8258 JP P,$8262      ;
 $825B LD (IX+$06),$03 ;
 $825F DEC (IX+$04)    ;
*$8262 DEC (IY+$5B)    ;
 $8265 JP P,$826F      ;
 $8268 LD (IY+$5B),$03 ;
 $826C DEC (IX+$05)    ;
*$826F LD A,$10        ;
 $8271 LD E,$11        ;
 $8273 LD C,$02        ;
 $8275 CALL $82E1      ;
 $8278 LD A,$08        ;
 $827A LD E,$10        ;
 $827C LD C,$03        ;
 $827E CALL $82E1      ;
 $8281 LD A,$02        ;
 $8283 LD E,$11        ;
 $8285 LD C,$02        ;
 $8287 CALL $82C1      ;
 $828A LD HL,$FDDA     ;
 $828D LD A,(HL)       ;
 $828E RES 7,(HL)      ;
 $8290 OR $E5          ;
 $8292 INC A           ;
 $8293 SCF             ;
 $8294 RET Z           ;
 $8295 SET 7,(HL)      ;
 $8297 LD HL,$FDD3     ;
 $829A LD A,(HL)       ;
 $829B SUB $06         ;
 $829D LD (HL),A       ;
 $829E LD HL,$FDCF     ;
 $82A1 LD A,(HL)       ;
 $82A2 SUB $06         ;
 $82A4 LD (HL),A       ;
 $82A5 OR A            ;
 $82A6 RET             ;
*$82A7 LD HL,$82B4     ;
 $82AA LD DE,$FDCF     ;
 $82AD LD BC,$000D     ;
 $82B0 LDIR            ;
 $82B2 OR A            ;
 $82B3 RET             ;

; Data 13 bytes to copy at $FDCF
b$82B4 DEFB $0C,$FA,$00,$00,$0C,$FA,$00,$00
 $82BC DEFB $04,$5F,$0A,$80,$01

; Routine at 82C1
;
; Used by the routines at #R$822B and #R$82E1.
c$82C1 LD (IX+$03),E   ;
 $82C4 LD (IX+$07),E   ;
 $82C7 PUSH AF         ;
 $82C8 AND (IX+$0B)    ;
 $82CB JR Z,$82D1      ;
 $82CD LD (IX+$07),$12 ;
*$82D1 CALL $806B      ;
 $82D4 POP AF          ;
 $82D5 BIT 5,(IX+$0B)  ;
 $82D9 RET NZ          ;
 $82DA OR (IX+$0B)     ;
 $82DD LD (IX+$0B),A   ;
 $82E0 RET             ;

; Routine at 82E1
;
; Used by the routine at #R$822B.
c$82E1 LD HL,($FDCF) ;
 $82E4 LD B,(IX+$02) ;
 $82E7 PUSH HL       ;
 $82E8 PUSH BC       ;
 $82E9 CALL $82C1    ;
 $82EC POP BC        ;
 $82ED POP HL        ;
 $82EE LD ($FDCF),HL ;
 $82F1 LD (IX+$02),B ;
 $82F4 LD HL,$FDD3   ;
 $82F7 INC (HL)      ;
 $82F8 INC (HL)      ;
 $82F9 INC (HL)      ;
 $82FA LD HL,$FDCF   ;
 $82FD INC (HL)      ;
 $82FE INC (HL)      ;
 $82FF INC (HL)      ;
 $8300 RET           ;

; Data block at 8301
b$8301 DEFB $CB,$7B,$CB,$BB,$28,$1F,$1D,$2A
 $8309 DEFB $4C,$C0,$01,$00,$14,$D5,$CD,$14
 $8311 DEFB $8A,$D1,$7B,$C6,$07,$5F,$01,$00
 $8319 DEFB $14,$D5,$2A,$4E,$C0,$CD,$14,$8A
 $8321 DEFB $D1,$7B,$D6,$06,$5F,$2A,$30,$C0
 $8329 DEFB $06,$14,$3E,$00,$18,$1C,$3E,$80
 $8331 DEFB $06,$14,$2A,$34,$C0,$1C,$1D,$28
 $8339 DEFB $11,$2A,$36,$C0,$18,$0C,$2A,$38
 $8341 DEFB $C0,$18,$03,$2A,$3A,$C0,$3E,$00
 $8349 DEFB $06,$04

; Draw sprite HL
;
; Used by the routine at #R$90AC.
;
; I:A
; I:B Sprite height??
; I:HL Sprite address
c$834B EX AF,AF'     ;
 $834C PUSH HL       ;
 $834D EXX           ;
 $834E POP HL        ;
 $834F EXX           ;
 $8350 LD C,$0C      ;
 $8352 CALL $867C    ;
 $8355 RET C         ;
 $8356 PUSH HL       ;
 $8357 EXX           ;
 $8358 PUSH HL       ;
 $8359 EXX           ;
 $835A POP HL        ;
 $835B ADD HL,DE     ;
 $835C POP DE        ;
 $835D EX AF,AF'     ;
 $835E LD C,A        ;
 $835F LD A,$06      ;
 $8361 BIT 6,C       ;
 $8363 CALL Z,$899E  ;
 $8366 LD ($FD82),SP ;
 $836A LD SP,HL      ;
 $836B EX DE,HL      ;
*$836C LD A,L        ;
 $836D POP DE        ;
 $836E LD (HL),E     ;
 $836F INC L         ;
 $8370 LD (HL),D     ;
 $8371 INC L         ;
 $8372 POP DE        ;
 $8373 LD (HL),E     ;
 $8374 INC L         ;
 $8375 LD (HL),D     ;
 $8376 INC L         ;
 $8377 POP DE        ;
 $8378 LD (HL),E     ;
 $8379 INC L         ;
 $837A LD (HL),D     ;
 $837B LD L,A        ;
 $837C INC H         ;
 $837D POP DE        ;
 $837E LD (HL),E     ;
 $837F INC L         ;
 $8380 LD (HL),D     ;
 $8381 INC L         ;
 $8382 POP DE        ;
 $8383 LD (HL),E     ;
 $8384 INC L         ;
 $8385 LD (HL),D     ;
 $8386 INC L         ;
 $8387 POP DE        ;
 $8388 LD (HL),E     ;
 $8389 INC L         ;
 $838A LD (HL),D     ;
 $838B LD L,A        ;
 $838C INC H         ;
 $838D LD A,H        ;
 $838E AND $07       ;
 $8390 JR NZ,$839C   ;
 $8392 LD A,L        ;
 $8393 ADD A,$20     ;
 $8395 LD L,A        ;
 $8396 JR C,$839C    ;
 $8398 LD A,H        ;
 $8399 SUB $08       ;
 $839B LD H,A        ;
*$839C DJNZ $836C    ;
 $839E LD SP,($FD82) ;
 $83A2 OR A          ;
 $83A3 RET           ;

; Data block at 83A4
b$83A4 DEFB $21,$CB,$FD,$36,$0A,$23,$36,$6A
 $83AC DEFB $23,$36,$46,$AF,$32,$F9,$FD,$32
 $83B4 DEFB $F8,$FD,$37,$C9

; ?? Smth about Jeep
;
; Used by the routine at #R$9193.
c$83B8 LD HL,$FDCB   ;
 $83BB LD E,(HL)     ;
 $83BC INC E         ;
 $83BD RET Z         ;
 $83BE DEC E         ;
 $83BF INC HL        ;
 $83C0 INC HL        ;
 $83C1 DEC (HL)      ;
 $83C2 LD A,(HL)     ;
 $83C3 DEC HL        ;
 $83C4 JP P,$83C9    ;
 $83C7 NEG           ;
*$83C9 CP $32        ;
 $83CB JR C,$83CE    ;
 $83CD DEC (HL)      ;
*$83CE CP $1E        ;
 $83D0 JR C,$83D3    ;
 $83D2 DEC (HL)      ;
*$83D3 LD A,(HL)     ;
 $83D4 CP $04        ;
 $83D6 JR NC,$83F1   ;
 $83D8 DEC HL        ;
 $83D9 LD (HL),$FF   ;
 $83DB RET           ;
*$83DC RES 7,E       ;
 $83DE DEC HL        ;
 $83DF LD (HL),$FF   ;
 $83E1 PUSH DE       ;
 $83E2 LD C,$02      ;
 $83E4 CALL $854A    ;
 $83E7 POP HL        ;
 $83E8 LD A,H        ;
 $83E9 SUB $0E       ;
 $83EB LD H,A        ;
 $83EC LD A,$02      ;
 $83EE JP $642A      ;
*$83F1 LD D,A        ;
 $83F2 LD BC,$1008   ;
 $83F5 BIT 7,E       ;
 $83F7 JR NZ,$83DC   ;
 $83F9 CALL $867C    ;
 $83FC EX DE,HL      ;
 $83FD LD A,$04      ;
 $83FF LD C,$00      ;
 $8401 CALL $899E    ;
 $8404 PUSH DE       ;
 $8405 PUSH BC       ;
 $8406 LD A,D        ;
 $8407 AND $F8       ;
 $8409 LD D,A        ;
 $840A LD A,B        ;
 $840B AND $FC       ;
 $840D RLCA          ;
 $840E RLCA          ;
 $840F RLCA          ;
 $8410 ADD A,E       ;
 $8411 LD E,A        ;
 $8412 JR NC,$841C   ;
 $8414 LD A,D        ;
 $8415 ADD A,$08     ;
 $8417 LD D,A        ;
 $8418 CP $58        ;
 $841A JR NC,$8425   ;
*$841C LD A,$04      ;
 $841E LD B,$04      ;
 $8420 LD C,$01      ;
 $8422 CALL $899E    ;
*$8425 POP BC        ;
 $8426 POP DE        ;
 $8427 EX DE,HL      ;
 $8428 SLA B         ;
 $842A PUSH HL       ;
 $842B LD HL,($C032) ; Get sprite addr Jeep; width 4
 $842E ADD HL,DE     ;
 $842F POP DE        ;
 $8430 LD ($FD82),SP ;
 $8434 LD SP,HL      ;
 $8435 EX DE,HL      ;
*$8436 LD A,L        ;
 $8437 POP DE        ;
 $8438 LD (HL),E     ;
 $8439 INC L         ;
 $843A LD (HL),D     ;
 $843B INC L         ;
 $843C POP DE        ;
 $843D LD (HL),E     ;
 $843E INC L         ;
 $843F LD (HL),D     ;
 $8440 LD L,A        ;
 $8441 INC H         ;
 $8442 LD A,H        ;
 $8443 AND $07       ;
 $8445 JR NZ,$8451   ;
 $8447 LD A,L        ;
 $8448 ADD A,$20     ;
 $844A LD L,A        ;
 $844B JR C,$8451    ;
 $844D LD A,H        ;
 $844E SUB $08       ;
 $8450 LD H,A        ;
*$8451 DJNZ $8436    ;
 $8453 LD SP,($FD82) ;
 $8457 RET           ;

; Routine at 8458
c$8458 LD A,E        ;
 $8459 LD ($FDCE),A  ;
 $845C LD HL,$FDC7   ;
 $845F LD E,(HL)     ;
 $8460 LD A,$03      ;
 $8462 INC E         ;
 $8463 JR Z,$846B    ;
 $8465 DEC E         ;
 $8466 LD A,E        ;
 $8467 AND $03       ;
 $8469 INC HL        ;
 $846A INC HL        ;
*$846B LD (HL),A     ;
 $846C INC HL        ;
 $846D LD (HL),$04   ;
 $846F SCF           ;
 $8470 RET           ;

; ?? Smth about Motorbike
;
; Used by the routine at #R$9193.
c$8471 LD HL,$FDC7   ;
 $8474 LD A,(HL)     ;
 $8475 INC A         ;
 $8476 JR NZ,$847D   ;
 $8478 INC HL        ;
 $8479 INC HL        ;
 $847A LD A,(HL)     ;
 $847B INC A         ;
 $847C RET Z         ;
*$847D CALL $8500    ; ?? Smth with Motorbike sprite
 $8480 LD HL,$FDC7   ;
 $8483 PUSH HL       ;
 $8484 CALL $8497    ;
 $8487 POP HL        ;
 $8488 JR NC,$848C   ;
 $848A LD (HL),$FF   ;
*$848C INC HL        ;
 $848D INC HL        ;
 $848E PUSH HL       ;
 $848F CALL $8497    ;
 $8492 POP HL        ;
 $8493 RET NC        ;
 $8494 LD (HL),$FF   ;
 $8496 RET           ;

; Routine at 8497
;
; Used by the routine at #R$8471.
c$8497 LD E,(HL)     ;
 $8498 OR A          ;
 $8499 INC E         ;
 $849A RET Z         ;
 $849B DEC E         ;
 $849C LD A,($FDCE)  ;
 $849F DEC A         ;
 $84A0 JR Z,$84AF    ;
 $84A2 LD ($FDCE),A  ;
 $84A5 INC E         ;
 $84A6 CP $14        ;
 $84A8 JR NC,$84AE   ;
 $84AA RRCA          ;
 $84AB JR C,$84AE    ;
 $84AD DEC E         ;
*$84AE LD (HL),E     ;
*$84AF INC HL        ;
 $84B0 LD A,R        ;
 $84B2 JP P,$84B6    ;
 $84B5 INC (HL)      ;
*$84B6 LD D,(HL)     ;
 $84B7 LD BC,$0C03   ;
 $84BA LD A,E        ;
 $84BB SRL E         ;
 $84BD SRL E         ;
 $84BF CP $6B        ;
 $84C1 JP Z,$854A    ;
 $84C4 LD C,$0C      ;
 $84C6 CALL $867C    ;
 $84C9 RET C         ;
 $84CA SLA B         ;
 $84CC PUSH HL       ;
 $84CD LD HL,$FC06   ;
 $84D0 ADD HL,DE     ;
 $84D1 POP DE        ;
 $84D2 LD ($FD82),SP ;
 $84D6 LD SP,HL      ;
 $84D7 EX DE,HL      ;
*$84D8 LD A,L        ;
 $84D9 POP DE        ;
 $84DA LD (HL),E     ;
 $84DB INC L         ;
 $84DC LD (HL),D     ;
 $84DD INC L         ;
 $84DE POP DE        ;
 $84DF LD (HL),E     ;
 $84E0 INC L         ;
 $84E1 LD (HL),D     ;
 $84E2 INC L         ;
 $84E3 POP DE        ;
 $84E4 LD (HL),E     ;
 $84E5 INC L         ;
 $84E6 LD (HL),D     ;
 $84E7 LD L,A        ;
 $84E8 INC H         ;
 $84E9 LD A,H        ;
 $84EA AND $07       ;
 $84EC JR NZ,$84F8   ;
 $84EE LD A,L        ;
 $84EF ADD A,$20     ;
 $84F1 LD L,A        ;
 $84F2 JR C,$84F8    ;
 $84F4 LD A,H        ;
 $84F5 SUB $08       ;
 $84F7 LD H,A        ;
*$84F8 DJNZ $84D8    ;
 $84FA LD SP,($FD82) ;
 $84FE OR A          ;
 $84FF RET           ;

; ?? Smth with Motorbike sprite
;
; Used by the routine at #R$8471.
c$8500 LD A,($FDCE)  ;
 $8503 DEC A         ;
 $8504 RET Z         ;
 $8505 CP $14        ;
 $8507 JR NC,$850B   ;
 $8509 RRCA          ;
 $850A RET NC        ;
*$850B LD A,(HL)     ;
 $850C INC A         ;
 $850D AND $03       ;
 $850F JR NZ,$851D   ;
 $8511 LD HL,($C02E) ; Get sprite addr Motorbike
 $8514 LD DE,$FC06   ;
 $8517 LD BC,$0090   ;
 $851A LDIR          ;
 $851C RET           ;
*$851D LD B,$18      ;
 $851F LD HL,$FC06   ;
*$8522 LD A,L        ;
 $8523 SRL (HL)      ;
 $8525 INC L         ;
 $8526 RR (HL)       ;
 $8528 INC L         ;
 $8529 RR (HL)       ;
 $852B INC L         ;
 $852C RR (HL)       ;
 $852E INC L         ;
 $852F RR (HL)       ;
 $8531 INC L         ;
 $8532 RR (HL)       ;
 $8534 LD L,A        ;
 $8535 SRL (HL)      ;
 $8537 INC L         ;
 $8538 RR (HL)       ;
 $853A INC L         ;
 $853B RR (HL)       ;
 $853D INC L         ;
 $853E RR (HL)       ;
 $8540 INC L         ;
 $8541 RR (HL)       ;
 $8543 INC L         ;
 $8544 RR (HL)       ;
 $8546 INC L         ;
 $8547 DJNZ $8522    ;
 $8549 RET           ;

; Routine at 854A
;
; Used by the routines at #R$83B8, #R$8497, #R$85AB, #R$86F5 and #R$8EE3.
c$854A LD A,C        ;
 $854B EX AF,AF'     ;
 $854C LD A,C        ;
 $854D ADD A,A       ;
 $854E DEC A         ;
 $854F LD L,A        ;
 $8550 LD H,$00      ;
 $8552 PUSH HL       ;
 $8553 CALL $867C    ;
 $8556 EX AF,AF'     ;
 $8557 ADD A,A       ;
 $8558 LD C,$01      ;
 $855A EX DE,HL      ;
 $855B CALL $899E    ;
 $855E SRL A         ;
 $8560 LD C,A        ;
 $8561 EX DE,HL      ;
 $8562 POP DE        ;
 $8563 ADD HL,DE     ;
 $8564 LD ($FD82),SP ;
 $8568 LD DE,$0000   ;
 $856B LD A,B        ;
*$856C EX AF,AF'     ;
 $856D LD SP,HL      ;
 $856E INC SP        ;
 $856F LD B,C        ;
*$8570 PUSH DE       ;
 $8571 DJNZ $8570    ;
 $8573 INC H         ;
 $8574 LD SP,HL      ;
 $8575 INC SP        ;
 $8576 LD B,C        ;
*$8577 PUSH DE       ;
 $8578 DJNZ $8577    ;
 $857A INC H         ;
 $857B LD A,H        ;
 $857C AND $07       ;
 $857E JR NZ,$858A   ;
 $8580 LD A,L        ;
 $8581 ADD A,$20     ;
 $8583 LD L,A        ;
 $8584 JR C,$858A    ;
 $8586 LD A,H        ;
 $8587 SUB $08       ;
 $8589 LD H,A        ;
*$858A EX AF,AF'     ;
 $858B DEC A         ;
 $858C JR NZ,$856C   ;
 $858E LD SP,($FD82) ;
 $8592 SCF           ;
 $8593 RET           ;

; Data block at 8594
b$8594 DEFB $21,$C3,$FD,$5E,$3E,$07,$1C,$28
 $859C DEFB $06,$1D,$7B,$E6,$07,$23,$23,$C6
 $85A4 DEFB $B8,$77,$23,$36,$04,$37,$C9

; ?? Smth about Truck
;
; Used by the routine at #R$9193.
c$85AB LD HL,$FDC3   ;
 $85AE LD A,(HL)     ;
 $85AF INC A         ;
 $85B0 JR NZ,$85B7   ;
 $85B2 INC HL        ;
 $85B3 INC HL        ;
 $85B4 LD A,(HL)     ;
 $85B5 INC A         ;
 $85B6 RET Z         ;
*$85B7 PUSH AF       ;
 $85B8 LD A,R        ;
 $85BA JP P,$85C3    ;
 $85BD INC (IY+$44)  ;
 $85C0 INC (IY+$46)  ;
*$85C3 POP AF        ;
 $85C4 CALL $86B8    ; Get Truck sprite to $6300 buffer and shift it if needed
 $85C7 LD HL,$FDC3   ;
 $85CA CALL $85D0    ;
 $85CD LD HL,$FDC5   ;
*$85D0 LD A,(HL)     ;
 $85D1 CP $FF        ;
 $85D3 RET Z         ;
 $85D4 DEC (HL)      ;
 $85D5 JR Z,$8605    ;
 $85D7 INC HL        ;
 $85D8 LD A,(HL)     ;
 $85D9 DEC HL        ;
 $85DA ADD A,A       ;
 $85DB JR C,$85E6    ;
 $85DD PUSH HL       ;
 $85DE CALL $8618    ;
 $85E1 POP HL        ;
 $85E2 RET NC        ;
 $85E3 LD (HL),$FF   ;
 $85E5 RET           ;
*$85E6 PUSH HL       ;
 $85E7 LD A,(HL)     ;
 $85E8 RRCA          ;
 $85E9 RRCA          ;
 $85EA RRCA          ;
 $85EB AND $1F       ;
 $85ED INC A         ;
 $85EE INC HL        ;
 $85EF LD H,(HL)     ;
 $85F0 LD L,A        ;
 $85F1 LD A,H        ;
 $85F2 AND $7F       ;
 $85F4 SUB $0E       ;
 $85F6 LD H,A        ;
 $85F7 XOR A         ;
 $85F8 PUSH HL       ;
 $85F9 CALL $642A    ;
 $85FC POP HL        ;
 $85FD INC L         ;
 $85FE INC L         ;
 $85FF INC L         ;
 $8600 XOR A         ;
 $8601 CALL $642A    ;
 $8604 POP HL        ;
*$8605 LD E,(HL)     ;
 $8606 LD (HL),$FF   ;
 $8608 SRL E         ;
 $860A SRL E         ;
 $860C SRL E         ;
 $860E INC HL        ;
 $860F LD D,(HL)     ;
 $8610 RES 7,D       ;
 $8612 LD BC,$1004   ;
 $8615 JP $854A      ;

; Routine at 8618
;
; Used by the routine at #R$85AB.
c$8618 LD A,(HL)     ;
 $8619 INC A         ;
 $861A INC HL        ;
 $861B RRCA          ;
 $861C RRCA          ;
 $861D RRCA          ;
 $861E AND $1F       ;
 $8620 LD E,A        ;
 $8621 LD D,(HL)     ;
 $8622 LD BC,$1010   ;
 $8625 CALL $867C    ;
 $8628 RET C         ;
 $8629 EX DE,HL      ;
 $862A LD A,$08      ;
 $862C LD C,$04      ;
 $862E CALL $899E    ;
 $8631 LD A,E        ;
 $8632 ADD A,$08     ;
 $8634 LD E,A        ;
 $8635 LD A,$01      ;
 $8637 LD C,$01      ;
 $8639 CALL $899E    ;
 $863C LD A,E        ;
 $863D SUB $08       ;
 $863F LD E,A        ;
 $8640 EX DE,HL      ;
 $8641 SLA B         ;
 $8643 PUSH HL       ;
 $8644 LD HL,$6300   ;
 $8647 ADD HL,DE     ;
 $8648 POP DE        ;
 $8649 LD ($FD82),SP ;
 $864D LD SP,HL      ;
 $864E EX DE,HL      ;
*$864F LD A,L        ;
 $8650 POP DE        ;
 $8651 LD (HL),D     ;
 $8652 INC L         ;
 $8653 LD (HL),E     ;
 $8654 INC L         ;
 $8655 POP DE        ;
 $8656 LD (HL),D     ;
 $8657 INC L         ;
 $8658 LD (HL),E     ;
 $8659 INC L         ;
 $865A POP DE        ;
 $865B LD (HL),D     ;
 $865C INC L         ;
 $865D LD (HL),E     ;
 $865E INC L         ;
 $865F POP DE        ;
 $8660 LD (HL),D     ;
 $8661 INC L         ;
 $8662 LD (HL),E     ;
 $8663 LD L,A        ;
 $8664 INC H         ;
 $8665 LD A,H        ;
 $8666 AND $07       ;
 $8668 JR NZ,$8674   ;
 $866A LD A,L        ;
 $866B ADD A,$20     ;
 $866D LD L,A        ;
 $866E JR C,$8674    ;
 $8670 LD A,H        ;
 $8671 SUB $08       ;
 $8673 LD H,A        ;
*$8674 DJNZ $864F    ;
 $8676 LD SP,($FD82) ;
 $867A OR A          ;
 $867B RET           ;

; Routine at 867C
;
; Used by the routines at #R$834B, #R$83B8, #R$8497, #R$854A, #R$8618, #R$8A14,
; #R$8A7B, #R$8AC3, #R$8CC9 and #R$90AC.
c$867C LD A,D        ;
 $867D CP $60        ;
 $867F JR NC,$869B   ;
 $8681 LD H,B        ;
 $8682 SUB B         ;
 $8683 CP $03        ;
 $8685 JP P,$86A4    ;
 $8688 SUB $03       ;
 $868A NEG           ;
 $868C LD H,A        ;
 $868D NEG           ;
 $868F ADD A,B       ;
 $8690 LD B,A        ;
 $8691 LD A,E        ;
 $8692 LD E,C        ;
 $8693 CALL $8E92    ;
 $8696 LD E,A        ;
 $8697 LD D,$04      ;
 $8699 JR $86AB      ;
*$869B SUB B         ;
 $869C SUB $5F       ;
 $869E CCF           ;
 $869F RET C         ;
 $86A0 LD H,B        ;
 $86A1 NEG           ;
 $86A3 LD B,A        ;
*$86A4 LD A,D        ;
 $86A5 SUB H         ;
 $86A6 INC A         ;
 $86A7 LD D,A        ;
 $86A8 LD HL,$0000   ;
*$86AB EX DE,HL      ;
 $86AC LD A,L        ;
 $86AD LD L,H        ;
 $86AE SLA L         ;
 $86B0 LD H,$FE      ; $FE00 - table of even screen lines addresses
 $86B2 ADD A,(HL)    ;
 $86B3 INC L         ;
 $86B4 LD H,(HL)     ;
 $86B5 LD L,A        ;
 $86B6 OR A          ;
 $86B7 RET           ;

; Get Truck sprite to $6300 buffer and shift it if needed
;
; Used by the routine at #R$85AB.
c$86B8 AND $07       ;
 $86BA JR NZ,$86C7   ;
 $86BC LD HL,($C03C) ; Get sprite addr Truck; width 8
 $86BF LD DE,$6300   ;
 $86C2 LD BC,$0100   ;
 $86C5 LDIR          ;
; Shift 8*32 bytes at $6300 one bit left
*$86C7 LD ($FD82),SP ;
 $86CB LD HL,$6300   ; Buffer address
 $86CE LD DE,$0008   ;
 $86D1 LD B,$20      ; Loop counter = 32
*$86D3 ADD HL,DE     ;
 $86D4 LD SP,HL      ;
 $86D5 EXX           ;
 $86D6 DEC SP        ;
 $86D7 DEC SP        ;
 $86D8 POP HL        ;
 $86D9 ADD HL,HL     ;
 $86DA PUSH HL       ;
 $86DB DEC SP        ;
 $86DC DEC SP        ;
 $86DD POP HL        ;
 $86DE ADC HL,HL     ;
 $86E0 PUSH HL       ;
 $86E1 DEC SP        ;
 $86E2 DEC SP        ;
 $86E3 POP HL        ;
 $86E4 ADC HL,HL     ;
 $86E6 PUSH HL       ;
 $86E7 DEC SP        ;
 $86E8 DEC SP        ;
 $86E9 POP HL        ;
 $86EA ADC HL,HL     ;
 $86EC PUSH HL       ;
 $86ED EXX           ;
 $86EE DJNZ $86D3    ;
 $86F0 LD SP,($FD82) ;
 $86F4 RET           ;

; Routine at 86F5
c$86F5 LD A,D        ;
 $86F6 CP $7F        ;
 $86F8 CCF           ;
 $86F9 RET C         ;
 $86FA LD B,$20      ;
 $86FC BIT 7,E       ;
 $86FE JR NZ,$8711   ;
 $8700 LD C,$32      ;
 $8702 LD A,E        ;
 $8703 CP $0F        ;
 $8705 LD HL,($C024) ;
 $8708 JP C,$8C52    ;
 $870B LD HL,($C026) ;
 $870E JP $8C52      ;
*$8711 RES 7,E       ;
 $8713 PUSH DE       ;
 $8714 LD C,$03      ;
 $8716 CALL $854A    ;
 $8719 POP HL        ;
 $871A LD A,H        ;
 $871B SUB $16       ;
 $871D LD H,A        ;
 $871E LD A,$02      ;
 $8720 PUSH HL       ;
 $8721 CALL $642A    ;
 $8724 POP HL        ;
 $8725 LD A,$02      ;
 $8727 INC L         ;
 $8728 INC L         ;
 $8729 INC L         ;
 $872A CALL $642A    ;
 $872D SCF           ;
 $872E RET           ;

; Routine at 872F
c$872F LD A,D        ;
 $8730 CP $5F        ;
 $8732 CCF           ;
 $8733 RET C         ;
 $8734 AND $03       ;
 $8736 RET NZ        ;
 $8737 LD B,$04      ;
 $8739 LD A,D        ;
 $873A CP $10        ;
 $873C JR NC,$8743   ;
 $873E SRL A         ;
 $8740 SRL A         ;
 $8742 LD B,A        ;
*$8743 CALL $896D    ; Get attributes address for screen line D
 $8746 LD D,$38      ;
 $8748 LD E,D        ;
 $8749 LD ($FD82),SP ;
*$874D LD SP,HL      ;
 $874E INC SP        ;
 $874F PUSH DE       ;
 $8750 PUSH DE       ;
 $8751 PUSH DE       ;
 $8752 PUSH DE       ;
 $8753 PUSH DE       ;
 $8754 PUSH DE       ;
 $8755 PUSH DE       ;
 $8756 PUSH DE       ;
 $8757 PUSH DE       ;
 $8758 PUSH DE       ;
 $8759 PUSH DE       ;
 $875A PUSH DE       ;
 $875B PUSH DE       ;
 $875C PUSH DE       ;
 $875D PUSH DE       ;
 $875E PUSH DE       ;
 $875F LD A,L        ;
 $8760 SUB $20       ;
 $8762 LD L,A        ;
 $8763 JR NC,$8766   ;
 $8765 DEC H         ;
*$8766 DJNZ $874D    ;
 $8768 LD SP,($FD82) ;
 $876C OR A          ;
 $876D RET           ;

; Draw walls??
c$876E LD A,D        ;
 $876F CP $78        ;
 $8771 CCF           ;
 $8772 RET C         ;
 $8773 LD B,$19      ;
 $8775 LD A,D        ;
 $8776 INC A         ;
 $8777 SUB B         ;
 $8778 LD D,A        ;
 $8779 CP $04        ;
 $877B JP P,$879E    ;
 $877E LD A,D        ;
 $877F ADD A,B       ;
 $8780 SUB $04       ;
 $8782 EXX           ;
 $8783 LD B,A        ;
 $8784 EXX           ;
 $8785 LD H,$40      ;
 $8787 LD A,E        ;
 $8788 ADD A,$20     ;
 $878A LD L,A        ;
 $878B LD A,D        ;
 $878C EXX           ;
 $878D NEG           ;
 $878F ADD A,$04     ;
 $8791 LD L,A        ;
 $8792 LD H,$00      ;
 $8794 ADD HL,HL     ;
 $8795 ADD HL,HL     ;
 $8796 ADD HL,HL     ;
 $8797 LD DE,($C004) ; Get Sprite addr Wall; width 4
 $879B ADD HL,DE     ;
 $879C JR $87AE      ;
*$879E LD A,D        ;
 $879F ADD A,A       ;
 $87A0 LD L,A        ;
 $87A1 LD A,E        ;
 $87A2 LD H,$FE      ; $FE00 - table of even screen lines addresses
 $87A4 ADD A,(HL)    ;
 $87A5 INC L         ;
 $87A6 LD H,(HL)     ;
 $87A7 LD L,A        ;
 $87A8 EXX           ;
 $87A9 LD B,$19      ; Height = 25
 $87AB LD HL,($C004) ; Get Sprite addr Wall; width 4
*$87AE LD DE,$0004   ;
 $87B1 LD ($FD82),SP ;
*$87B5 LD SP,HL      ;
 $87B6 ADD HL,DE     ;
 $87B7 EXX           ;
 $87B8 POP BC        ;
 $87B9 POP DE        ;
 $87BA LD SP,HL      ;
 $87BB INC SP        ;
 $87BC PUSH DE       ;
 $87BD PUSH BC       ;
 $87BE PUSH DE       ;
 $87BF PUSH BC       ;
 $87C0 PUSH DE       ;
 $87C1 PUSH BC       ;
 $87C2 INC H         ;
 $87C3 EXX           ;
 $87C4 LD SP,HL      ;
 $87C5 ADD HL,DE     ;
 $87C6 EXX           ;
 $87C7 POP BC        ;
 $87C8 POP DE        ;
 $87C9 LD SP,HL      ;
 $87CA INC SP        ;
 $87CB PUSH DE       ;
 $87CC PUSH BC       ;
 $87CD PUSH DE       ;
 $87CE PUSH BC       ;
 $87CF PUSH DE       ;
 $87D0 PUSH BC       ;
 $87D1 INC H         ;
 $87D2 LD A,H        ;
 $87D3 AND $07       ;
 $87D5 JR NZ,$87E8   ;
 $87D7 LD A,L        ;
 $87D8 ADD A,$20     ;
 $87DA LD L,A        ;
 $87DB JR C,$87E1    ;
 $87DD LD A,H        ;
 $87DE SUB $08       ;
 $87E0 LD H,A        ;
*$87E1 LD A,H        ;
 $87E2 AND $18       ;
 $87E4 CP $18        ;
 $87E6 JR Z,$87EB    ;
*$87E8 EXX           ;
 $87E9 DJNZ $87B5    ;
*$87EB LD SP,($FD82) ;
 $87EF OR A          ;
 $87F0 RET           ;

; Routine at 87F1
c$87F1 PUSH DE       ;
 $87F2 LD A,D        ;
 $87F3 SUB $03       ;
 $87F5 LD D,A        ;
 $87F6 AND $03       ;
 $87F8 JR NZ,$885B   ;
 $87FA LD A,D        ;
 $87FB LD C,D        ;
 $87FC CP $60        ;
 $87FE JR C,$8823    ;
 $8800 JR NZ,$885B   ;
 $8802 SUB $04       ;
 $8804 LD D,A        ;
 $8805 CALL $896D    ; Get attributes address for screen line D
 $8808 LD D,$31      ; Attribute byte
 $880A LD E,D        ;
 $880B LD ($FD82),SP ;
 $880F LD SP,HL      ;
 $8810 INC SP        ;
 $8811 PUSH DE       ; {Fill attribute line
 $8812 PUSH DE       ;
 $8813 PUSH DE       ;
 $8814 PUSH DE       ;
 $8815 PUSH DE       ;
 $8816 PUSH DE       ;
 $8817 PUSH DE       ;
 $8818 PUSH DE       ;
 $8819 PUSH DE       ;
 $881A PUSH DE       ;
 $881B PUSH DE       ;
 $881C PUSH DE       ;
 $881D PUSH DE       ;
 $881E PUSH DE       ;
 $881F PUSH DE       ;
 $8820 PUSH DE       ; }
 $8821 JR $8857      ;
*$8823 CALL $896D    ; Get attributes address for screen line D
 $8826 LD D,$30      ; Attribute byte
 $8828 LD E,D        ;
 $8829 LD ($FD82),SP ;
 $882D LD SP,HL      ;
 $882E INC SP        ;
 $882F PUSH DE       ; {Fill attribute line
 $8830 PUSH DE       ;
 $8831 PUSH DE       ;
 $8832 PUSH DE       ;
 $8833 PUSH DE       ;
 $8834 PUSH DE       ;
 $8835 PUSH DE       ;
 $8836 PUSH DE       ;
 $8837 PUSH DE       ;
 $8838 PUSH DE       ;
 $8839 PUSH DE       ;
 $883A PUSH DE       ;
 $883B PUSH DE       ;
 $883C PUSH DE       ;
 $883D PUSH DE       ;
 $883E PUSH DE       ; }
 $883F LD A,C        ;
 $8840 CP $04        ;
 $8842 JR Z,$8857    ;
 $8844 LD D,$31      ; Attribute byte
 $8846 LD E,D        ;
 $8847 PUSH DE       ; {Fill attribute line
 $8848 PUSH DE       ;
 $8849 PUSH DE       ;
 $884A PUSH DE       ;
 $884B PUSH DE       ;
 $884C PUSH DE       ;
 $884D PUSH DE       ;
 $884E PUSH DE       ;
 $884F PUSH DE       ;
 $8850 PUSH DE       ;
 $8851 PUSH DE       ;
 $8852 PUSH DE       ;
 $8853 PUSH DE       ;
 $8854 PUSH DE       ;
 $8855 PUSH DE       ;
 $8856 PUSH DE       ; }
*$8857 LD SP,($FD82) ;
*$885B POP DE        ;
 $885C CP $69        ;
 $885E CCF           ;
 $885F RET C         ;
 $8860 LD A,D        ;
 $8861 CP $65        ;
 $8863 RET NC        ;
 $8864 LD B,$06      ;
 $8866 LD A,D        ;
 $8867 INC A         ;
 $8868 SUB B         ;
 $8869 LD D,A        ;
 $886A CP $04        ;
 $886C EXX           ;
 $886D LD HL,$88E5   ;
 $8870 EXX           ;
 $8871 JP P,$8887    ;
 $8874 LD A,D        ;
 $8875 ADD A,B       ;
 $8876 SUB $04       ;
 $8878 LD B,A        ;
 $8879 LD A,D        ;
 $887A NEG           ;
 $887C ADD A,$04     ;
 $887E ADD A,A       ;
 $887F ADD A,A       ;
 $8880 EXX           ;
 $8881 CALL $98D3    ; HL = HL + A; now HL = address in table $88E5
 $8884 EXX           ;
 $8885 LD D,$04      ;
*$8887 LD A,D        ;
 $8888 ADD A,A       ;
 $8889 LD L,A        ;
 $888A LD A,E        ;
 $888B LD H,$FE      ; $FE00 - table of even screen lines addresses
 $888D ADD A,(HL)    ; {Get screen line address from table $FE00
 $888E INC L         ;
 $888F LD H,(HL)     ;
 $8890 LD L,A        ; }
 $8891 LD ($FD82),SP ;
*$8895 LD SP,HL      ; Now SP = address on the screen
 $8896 INC SP        ;
 $8897 EXX           ;
 $8898 LD E,(HL)     ; {Get 1st word from table $88E5
 $8899 INC HL        ;
 $889A LD D,(HL)     ;
 $889B INC HL        ; }
 $889C PUSH DE       ; {Fill screen line with DE
 $889D PUSH DE       ;
 $889E PUSH DE       ;
 $889F PUSH DE       ;
 $88A0 PUSH DE       ;
 $88A1 PUSH DE       ;
 $88A2 PUSH DE       ;
 $88A3 PUSH DE       ;
 $88A4 PUSH DE       ;
 $88A5 PUSH DE       ;
 $88A6 PUSH DE       ;
 $88A7 PUSH DE       ;
 $88A8 PUSH DE       ;
 $88A9 PUSH DE       ;
 $88AA PUSH DE       ;
 $88AB PUSH DE       ; }
 $88AC EXX           ;
 $88AD INC H         ; Next screen line
 $88AE LD SP,HL      ;
 $88AF INC SP        ;
 $88B0 EXX           ;
 $88B1 LD E,(HL)     ; {Get 2nd word from table $88E5
 $88B2 INC HL        ;
 $88B3 LD D,(HL)     ;
 $88B4 INC HL        ; }
 $88B5 PUSH DE       ; {Fill screen line with DE
 $88B6 PUSH DE       ;
 $88B7 PUSH DE       ;
 $88B8 PUSH DE       ;
 $88B9 PUSH DE       ;
 $88BA PUSH DE       ;
 $88BB PUSH DE       ;
 $88BC PUSH DE       ;
 $88BD PUSH DE       ;
 $88BE PUSH DE       ;
 $88BF PUSH DE       ;
 $88C0 PUSH DE       ;
 $88C1 PUSH DE       ;
 $88C2 PUSH DE       ;
 $88C3 PUSH DE       ;
 $88C4 PUSH DE       ; }
 $88C5 EXX           ;
 $88C6 INC H         ;
 $88C7 LD A,H        ;
 $88C8 AND $07       ;
 $88CA JR NZ,$88DD   ;
 $88CC LD A,L        ;
 $88CD ADD A,$20     ;
 $88CF LD L,A        ;
 $88D0 JR C,$88D6    ;
 $88D2 LD A,H        ;
 $88D3 SUB $08       ;
 $88D5 LD H,A        ;
*$88D6 LD A,H        ;
 $88D7 AND $18       ;
 $88D9 CP $18        ;
 $88DB JR Z,$88DF    ;
*$88DD DJNZ $8895    ;
*$88DF LD SP,($FD82) ;
 $88E3 OR A          ;
 $88E4 RET           ;

; Data block at 88E5
b$88E5 DEFB $00,$00,$00,$00
 $88E9 DEFB $3F,$FE,$55,$55
 $88ED DEFB $6A,$AB,$D5,$55
 $88F1 DEFB $FF,$FF,$7F,$FF
 $88F5 DEFB $FF,$FF,$7F,$FF
 $88F9 DEFB $7F,$FF,$BF,$FE
 $88FD DEFB $7A,$FE,$80,$3F
 $8901 DEFB $D8,$06,$21,$0E
 $8905 DEFB $31,$7B,$B7,$2A
 $8909 DEFB $20,$C0,$CA,$E7
 $890D DEFB $8B,$2A,$22,$C0
 $8911 DEFB $C3,$E7,$8B

; Routine at 8914
c$8914 LD A,D        ;
 $8915 CP $78        ;
 $8917 CCF           ;
 $8918 RET C         ;
 $8919 LD B,$19      ;
 $891B LD C,$30      ;
 $891D LD HL,($C006) ;
 $8920 PUSH DE       ;
 $8921 CALL $8CC9    ;
 $8924 POP DE        ;
 $8925 LD A,D        ;
 $8926 CP $60        ;
 $8928 RET NC        ;
 $8929 LD E,$1F      ;
 $892B LD H,$16      ;
 $892D LD A,D        ;
 $892E ADD A,A       ;
 $892F ADD A,A       ;
 $8930 RL H          ;
 $8932 ADD A,A       ;
 $8933 RL H          ;
 $8935 AND $E0       ;
 $8937 OR E          ;
 $8938 LD L,A        ;
 $8939 LD D,$30      ;
 $893B LD E,D        ;
 $893C LD ($FD82),SP ;
 $8940 LD SP,HL      ;
 $8941 INC SP        ;
 $8942 PUSH DE       ;
 $8943 PUSH DE       ;
 $8944 PUSH DE       ;
 $8945 PUSH DE       ;
 $8946 PUSH DE       ;
 $8947 PUSH DE       ;
 $8948 PUSH DE       ;
 $8949 PUSH DE       ;
 $894A PUSH DE       ;
 $894B PUSH DE       ;
 $894C PUSH DE       ;
 $894D PUSH DE       ;
 $894E PUSH DE       ;
 $894F PUSH DE       ;
 $8950 PUSH DE       ;
 $8951 PUSH DE       ;
 $8952 LD A,H        ;
 $8953 CP $5A        ;
 $8955 JR C,$8967    ;
 $8957 PUSH DE       ;
 $8958 PUSH DE       ;
 $8959 PUSH DE       ;
 $895A PUSH DE       ;
 $895B PUSH DE       ;
 $895C PUSH DE       ;
 $895D PUSH DE       ;
 $895E PUSH DE       ;
 $895F PUSH DE       ;
 $8960 PUSH DE       ;
 $8961 PUSH DE       ;
 $8962 PUSH DE       ;
 $8963 PUSH DE       ;
 $8964 PUSH DE       ;
 $8965 PUSH DE       ;
 $8966 PUSH DE       ;
*$8967 LD SP,($FD82) ;
 $896B OR A          ;
 $896C RET           ;

; Get attributes address for the screen line
;
; Used by the routines at #R$872F and #R$87F1.
;
; I:D Screen line number, divided by 2
; O:HL Address in the screen attribute area for the given line
c$896D LD A,D        ;
 $896E ADD A,A       ;
 $896F LD H,$FE      ; $FE00 - table of even screen lines addresses
 $8971 LD L,A        ;
 $8972 LD A,E        ;
 $8973 ADD A,(HL)    ; {Get screen line address to HL
 $8974 INC L         ;
 $8975 LD H,(HL)     ;
 $8976 LD L,A        ;
 $8977 LD A,H        ; }
 $8978 RRCA          ; {Rotate H right on 3 bits
 $8979 RRCA          ;
 $897A RRCA          ; }
 $897B OR $58        ;
 $897D LD H,A        ; Now HL = address in the screen attribute area for the
                     ; given line
 $897E RET           ;

; Data block at 897F
b$897F DEFB $7A,$FE,$87,$3F,$D8,$06,$28,$0E
 $8987 DEFB $32,$2A,$12,$C0,$D5,$CD,$14,$8A
 $898F DEFB $D1,$7B,$C6,$07,$5F,$06,$28,$0E
 $8997 DEFB $32,$2A,$12,$C0,$C3,$14,$8A

; Routine at 899E
;
; Used by the routines at #R$834B, #R$83B8, #R$854A, #R$8618, #R$8A14, #R$8A7B,
; #R$8AC3 and #R$8CC9.
c$899E PUSH AF       ;
 $899F PUSH DE       ;
 $89A0 PUSH HL       ;
 $89A1 PUSH BC       ;
 $89A2 LD H,B        ;
 $89A3 LD L,A        ;
 $89A4 EX AF,AF'     ;
 $89A5 LD A,D        ;
 $89A6 PUSH HL       ;
 $89A7 EXX           ;
 $89A8 POP BC        ;
 $89A9 AND $06       ;
 $89AB RRCA          ;
 $89AC LD H,A        ;
 $89AD EXX           ;
 $89AE EX AF,AF'     ;
 $89AF NEG           ;
 $89B1 ADD A,$20     ;
 $89B3 LD L,A        ;
 $89B4 LD H,$00      ;
 $89B6 LD A,D        ;
 $89B7 RRCA          ;
 $89B8 RRCA          ;
 $89B9 RRCA          ;
 $89BA AND $03       ;
 $89BC OR $58        ;
 $89BE LD D,A        ;
 $89BF EX DE,HL      ;
 $89C0 EXX           ;
 $89C1 LD A,H        ;
 $89C2 INC A         ;
 $89C3 AND $03       ;
 $89C5 JR Z,$89CC    ;
 $89C7 CALL $89F3    ;
 $89CA JR $89E2      ;
*$89CC LD A,R        ;
 $89CE JP M,$89DB    ;
*$89D1 EXX           ;
 $89D2 PUSH DE       ;
 $89D3 LD DE,$0020   ;
 $89D6 ADD HL,DE     ;
 $89D7 POP DE        ;
 $89D8 EXX           ;
 $89D9 JR $89E2      ;
*$89DB BIT 7,C       ;
 $89DD JR NZ,$89D1   ;
 $89DF CALL $8A03    ;
*$89E2 DEC B         ;
 $89E3 JR Z,$89EE    ;
*$89E5 INC H         ;
 $89E6 LD A,H        ;
 $89E7 AND $03       ;
 $89E9 CALL Z,$89F3  ;
 $89EC DJNZ $89E5    ;
*$89EE POP BC        ;
 $89EF POP HL        ;
 $89F0 POP DE        ;
 $89F1 POP AF        ;
 $89F2 RET           ;

; Routine at 89F3
;
; Used by the routine at #R$899E.
c$89F3 LD A,C        ;
 $89F4 EXX           ;
 $89F5 LD B,A        ;
 $89F6 RES 7,C       ;
*$89F8 LD A,(HL)     ;
 $89F9 AND $38       ;
 $89FB OR C          ;
 $89FC LD (HL),A     ;
 $89FD INC HL        ;
 $89FE DJNZ $89F8    ;
 $8A00 ADD HL,DE     ;
 $8A01 EXX           ;
 $8A02 RET           ;

; Routine at 8A03
;
; Used by the routine at #R$899E.
c$8A03 LD A,C        ;
 $8A04 EXX           ;
 $8A05 LD B,A        ;
 $8A06 RES 7,C       ;
*$8A08 LD A,(HL)     ;
 $8A09 AND $38       ;
 $8A0B OR $01        ;
 $8A0D LD (HL),A     ;
 $8A0E INC HL        ;
 $8A0F DJNZ $8A08    ;
 $8A11 ADD HL,DE     ;
 $8A12 EXX           ;
 $8A13 RET           ;

; Routine at 8A14
;
; Used by the routines at #R$9014 and #R$90A1.
c$8A14 LD A,C        ;
 $8A15 EX AF,AF'     ;
 $8A16 LD C,$04      ;
 $8A18 PUSH HL       ;
 $8A19 CALL $867C    ;
 $8A1C JR NC,$8A23   ;
 $8A1E POP HL        ;
 $8A1F EX AF,AF'     ;
 $8A20 LD C,A        ;
 $8A21 SCF           ;
 $8A22 RET           ;
*$8A23 EX (SP),HL    ;
 $8A24 ADD HL,DE     ;
 $8A25 POP DE        ;
 $8A26 EX AF,AF'     ;
 $8A27 LD C,A        ;
 $8A28 LD A,$01      ;
 $8A2A CALL $899E    ;
 $8A2D LD ($FD82),SP ;
 $8A31 LD SP,HL      ;
 $8A32 EX DE,HL      ;
 $8A33 LD A,R        ;
 $8A35 JP P,$8A5B    ;
*$8A38 POP DE        ;
 $8A39 LD A,(HL)     ;
 $8A3A AND D         ;
 $8A3B OR E          ;
 $8A3C LD (HL),A     ;
 $8A3D INC H         ;
 $8A3E POP DE        ;
 $8A3F LD A,(HL)     ;
 $8A40 AND D         ;
 $8A41 OR E          ;
 $8A42 LD (HL),A     ;
 $8A43 INC H         ;
 $8A44 LD A,H        ;
 $8A45 AND $07       ;
 $8A47 JR NZ,$8A53   ;
 $8A49 LD A,L        ;
 $8A4A ADD A,$20     ;
 $8A4C LD L,A        ;
 $8A4D JR C,$8A53    ;
 $8A4F LD A,H        ;
 $8A50 SUB $08       ;
 $8A52 LD H,A        ;
*$8A53 DJNZ $8A38    ;
 $8A55 OR A          ;
 $8A56 LD SP,($FD82) ;
 $8A5A RET           ;
*$8A5B DEC SP        ;
*$8A5C POP AF        ;
 $8A5D OR (HL)       ;
 $8A5E LD (HL),A     ;
 $8A5F INC H         ;
 $8A60 POP AF        ;
 $8A61 OR (HL)       ;
 $8A62 LD (HL),A     ;
 $8A63 INC H         ;
 $8A64 LD A,H        ;
 $8A65 AND $07       ;
 $8A67 JR NZ,$8A73   ;
 $8A69 LD A,L        ;
 $8A6A ADD A,$20     ;
 $8A6C LD L,A        ;
 $8A6D JR C,$8A73    ;
 $8A6F LD A,H        ;
 $8A70 SUB $08       ;
 $8A72 LD H,A        ;
*$8A73 DJNZ $8A5C    ;
 $8A75 OR A          ;
 $8A76 LD SP,($FD82) ;
 $8A7A RET           ;

; Routine at 8A7B
;
; Used by the routines at #R$8E83, #R$8EB5, #R$8F17 and #R$8F35.
c$8A7B LD A,C        ;
 $8A7C EX AF,AF'     ;
 $8A7D LD C,$08      ;
 $8A7F PUSH HL       ;
 $8A80 CALL $867C    ;
 $8A83 EX (SP),HL    ;
 $8A84 ADD HL,DE     ;
 $8A85 POP DE        ;
 $8A86 EX AF,AF'     ;
 $8A87 LD C,A        ;
 $8A88 ADD A,A       ;
 $8A89 LD A,$02      ;
 $8A8B CALL NC,$899E ;
 $8A8E LD ($FD82),SP ;
 $8A92 LD SP,HL      ;
 $8A93 EX DE,HL      ;
*$8A94 POP DE        ;
 $8A95 LD A,(HL)     ;
 $8A96 AND D         ;
 $8A97 OR E          ;
 $8A98 LD (HL),A     ;
 $8A99 INC L         ;
 $8A9A POP DE        ;
 $8A9B LD A,(HL)     ;
 $8A9C AND D         ;
 $8A9D OR E          ;
 $8A9E LD (HL),A     ;
 $8A9F INC H         ;
 $8AA0 POP DE        ;
 $8AA1 LD A,(HL)     ;
 $8AA2 AND D         ;
 $8AA3 OR E          ;
 $8AA4 LD (HL),A     ;
 $8AA5 DEC L         ;
 $8AA6 POP DE        ;
 $8AA7 LD A,(HL)     ;
 $8AA8 AND D         ;
 $8AA9 OR E          ;
 $8AAA LD (HL),A     ;
 $8AAB INC H         ;
 $8AAC LD A,H        ;
 $8AAD AND $07       ;
 $8AAF JR NZ,$8ABB   ;
 $8AB1 LD A,L        ;
 $8AB2 ADD A,$20     ;
 $8AB4 LD L,A        ;
 $8AB5 JR C,$8ABB    ;
 $8AB7 LD A,H        ;
 $8AB8 SUB $08       ;
 $8ABA LD H,A        ;
*$8ABB DJNZ $8A94    ;
 $8ABD OR A          ;
 $8ABE LD SP,($FD82) ;
 $8AC2 RET           ;

; Routine at 8AC3
;
; Used by the routines at #R$8EE3, #R$8F26, #R$9014 and #R$903E.
c$8AC3 LD A,C        ;
 $8AC4 EX AF,AF'     ;
 $8AC5 LD C,$0C      ;
 $8AC7 PUSH HL       ;
 $8AC8 CALL $867C    ;
 $8ACB EX (SP),HL    ;
 $8ACC ADD HL,DE     ;
 $8ACD POP DE        ;
 $8ACE EX AF,AF'     ;
 $8ACF LD C,A        ;
 $8AD0 LD A,$03      ;
 $8AD2 CALL $899E    ;
 $8AD5 LD ($FD82),SP ;
 $8AD9 LD SP,HL      ;
 $8ADA EX DE,HL      ;
 $8ADB LD A,R        ;
 $8ADD JP P,$8B1B    ;
*$8AE0 POP DE        ;
 $8AE1 LD A,(HL)     ;
 $8AE2 AND D         ;
 $8AE3 OR E          ;
 $8AE4 LD (HL),A     ;
 $8AE5 INC L         ;
 $8AE6 POP DE        ;
 $8AE7 LD A,(HL)     ;
 $8AE8 AND D         ;
 $8AE9 OR E          ;
 $8AEA LD (HL),A     ;
 $8AEB INC L         ;
 $8AEC POP DE        ;
 $8AED LD A,(HL)     ;
 $8AEE AND D         ;
 $8AEF OR E          ;
 $8AF0 LD (HL),A     ;
 $8AF1 INC H         ;
 $8AF2 POP DE        ;
 $8AF3 LD A,(HL)     ;
 $8AF4 AND D         ;
 $8AF5 OR E          ;
 $8AF6 LD (HL),A     ;
 $8AF7 DEC L         ;
 $8AF8 POP DE        ;
 $8AF9 LD A,(HL)     ;
 $8AFA AND D         ;
 $8AFB OR E          ;
 $8AFC LD (HL),A     ;
 $8AFD DEC L         ;
 $8AFE POP DE        ;
 $8AFF LD A,(HL)     ;
 $8B00 AND D         ;
 $8B01 OR E          ;
 $8B02 LD (HL),A     ;
 $8B03 INC H         ;
 $8B04 LD A,H        ;
 $8B05 AND $07       ;
 $8B07 JR NZ,$8B13   ;
 $8B09 LD A,L        ;
 $8B0A ADD A,$20     ;
 $8B0C LD L,A        ;
 $8B0D JR C,$8B13    ;
 $8B0F LD A,H        ;
 $8B10 SUB $08       ;
 $8B12 LD H,A        ;
*$8B13 DJNZ $8AE0    ;
 $8B15 OR A          ;
 $8B16 LD SP,($FD82) ;
 $8B1A RET           ;
*$8B1B DEC SP        ;
*$8B1C POP AF        ;
 $8B1D OR (HL)       ;
 $8B1E LD (HL),A     ;
 $8B1F INC L         ;
 $8B20 POP AF        ;
 $8B21 OR (HL)       ;
 $8B22 LD (HL),A     ;
 $8B23 INC L         ;
 $8B24 POP AF        ;
 $8B25 OR (HL)       ;
 $8B26 LD (HL),A     ;
 $8B27 INC H         ;
 $8B28 POP AF        ;
 $8B29 OR (HL)       ;
 $8B2A LD (HL),A     ;
 $8B2B DEC L         ;
 $8B2C POP AF        ;
 $8B2D OR (HL)       ;
 $8B2E LD (HL),A     ;
 $8B2F DEC L         ;
 $8B30 POP AF        ;
 $8B31 OR (HL)       ;
 $8B32 LD (HL),A     ;
 $8B33 INC H         ;
 $8B34 LD A,H        ;
 $8B35 AND $07       ;
 $8B37 JR NZ,$8B43   ;
 $8B39 LD A,L        ;
 $8B3A ADD A,$20     ;
 $8B3C LD L,A        ;
 $8B3D JR C,$8B43    ;
 $8B3F LD A,H        ;
 $8B40 SUB $08       ;
 $8B42 LD H,A        ;
*$8B43 DJNZ $8B1C    ;
 $8B45 OR A          ;
 $8B46 LD SP,($FD82) ;
 $8B4A RET           ;

; Data block at 8B4B
b$8B4B DEFB $79,$08,$0E,$10,$E5,$CD,$7C,$86
 $8B53 DEFB $E3,$19,$D1,$08,$4F,$3E,$04,$CD
 $8B5B DEFB $9E,$89,$ED,$73,$82,$FD,$F9,$EB
 $8B63 DEFB $ED,$5F,$F2,$AF,$8B,$D1,$7E,$A2
 $8B6B DEFB $B3,$77,$2C,$D1,$7E,$A2,$B3,$77
 $8B73 DEFB $2C,$D1,$7E,$A2,$B3,$77,$2C,$D1
 $8B7B DEFB $7E,$A2,$B3,$77,$24,$D1,$7E,$A2
 $8B83 DEFB $B3,$77,$2D,$D1,$7E,$A2,$B3,$77
 $8B8B DEFB $2D,$D1,$7E,$A2,$B3,$77,$2D,$D1
 $8B93 DEFB $7E,$A2,$B3,$77,$24,$7C,$E6,$07
 $8B9B DEFB $20,$0A,$7D,$C6

; Message at 8B9F
t$8B9F DEFM " o8"

; Data block at 8BA2
b$8BA2 DEFB $04,$7C,$D6,$08,$67,$10,$BF,$B7
 $8BAA DEFB $ED,$7B,$82,$FD,$C9,$3B,$F1,$B6
 $8BB2 DEFB $77,$2C,$F1,$B6,$77,$2C,$F1,$B6
 $8BBA DEFB $77,$2C,$F1,$B6,$77,$24,$F1,$B6
 $8BC2 DEFB $77,$2D,$F1,$B6,$77,$2D,$F1,$B6
 $8BCA DEFB $77,$2D,$F1,$B6,$77,$24,$7C,$E6
 $8BD2 DEFB $07,$20,$0A,$7D,$C6

; Message at 8BD7
t$8BD7 DEFM " o8"

; Data block at 8BDA
b$8BDA DEFB $04,$7C,$D6,$08,$67,$10,$CF,$B7
 $8BE2 DEFB $ED,$7B,$82,$FD,$C9,$79,$08,$0E
 $8BEA DEFB $14,$E5,$CD,$7C,$86,$E3,$19,$D1
 $8BF2 DEFB $08,$4F,$3E,$05,$CD,$9E,$89,$ED
 $8BFA DEFB $73,$82,$FD,$F9,$EB,$D1,$7E,$A2
 $8C02 DEFB $B3,$77,$2C,$D1,$7E,$A2,$B3,$77
 $8C0A DEFB $2C,$D1,$7E,$A2,$B3,$77,$2C,$D1
 $8C12 DEFB $7E,$A2,$B3,$77,$2C,$D1,$7E,$A2
 $8C1A DEFB $B3,$77,$24,$D1,$7E,$A2,$B3,$77
 $8C22 DEFB $2D,$D1,$7E,$A2,$B3,$77,$2D,$D1
 $8C2A DEFB $7E,$A2,$B3,$77,$2D,$D1,$7E,$A2
 $8C32 DEFB $B3,$77,$2D,$D1,$7E,$A2,$B3,$77
 $8C3A DEFB $24,$7C,$E6,$07,$20,$0A,$7D,$C6

; Message at 8C42
t$8C42 DEFM " o8"

; Data block at 8C45
b$8C45 DEFB $04,$7C,$D6,$08,$67,$10,$B3,$B7
 $8C4D DEFB $ED,$7B,$82,$FD,$C9,$79,$08,$0E
 $8C55 DEFB $18,$E5,$CD,$7C,$86,$E3,$19,$D1
 $8C5D DEFB $08,$4F,$3E,$06,$CD,$9E,$89,$ED
 $8C65 DEFB $73,$82,$FD,$F9,$EB,$D1,$7E,$A2
 $8C6D DEFB $B3,$77,$2C,$D1,$7E,$A2,$B3,$77
 $8C75 DEFB $2C,$D1,$7E,$A2,$B3,$77,$2C,$D1
 $8C7D DEFB $7E,$A2,$B3,$77,$2C,$D1,$7E,$A2
 $8C85 DEFB $B3,$77,$2C,$D1,$7E,$A2,$B3,$77
 $8C8D DEFB $24,$D1,$7E,$A2,$B3,$77,$2D,$D1
 $8C95 DEFB $7E,$A2,$B3,$77,$2D,$D1,$7E,$A2
 $8C9D DEFB $B3,$77,$2D,$D1,$7E,$A2,$B3,$77
 $8CA5 DEFB $2D,$D1,$7E,$A2,$B3,$77,$2D,$D1
 $8CAD DEFB $7E,$A2,$B3,$77,$24,$7C,$E6,$07
 $8CB5 DEFB $20,$0A,$7D,$C6

; Message at 8CB9
t$8CB9 DEFM " o8"

; Data block at 8CBC
b$8CBC DEFB $04,$7C,$D6,$08,$67,$10,$A7,$B7
 $8CC4 DEFB $ED,$7B,$82,$FD,$C9

; Routine at 8CC9
;
; Used by the routine at #R$8914.
c$8CC9 LD A,C        ;
 $8CCA EX AF,AF'     ;
 $8CCB LD C,$20      ;
 $8CCD PUSH HL       ;
 $8CCE CALL $867C    ;
 $8CD1 EX (SP),HL    ;
 $8CD2 ADD HL,DE     ;
 $8CD3 POP DE        ;
 $8CD4 EX AF,AF'     ;
 $8CD5 LD C,A        ;
 $8CD6 LD A,$08      ;
 $8CD8 CALL $899E    ;
 $8CDB LD ($FD82),SP ;
 $8CDF LD SP,HL      ;
 $8CE0 EX DE,HL      ;
*$8CE1 POP DE        ;
 $8CE2 LD A,(HL)     ;
 $8CE3 AND D         ;
 $8CE4 OR E          ;
 $8CE5 LD (HL),A     ;
 $8CE6 INC L         ;
 $8CE7 POP DE        ;
 $8CE8 LD A,(HL)     ;
 $8CE9 AND D         ;
 $8CEA OR E          ;
 $8CEB LD (HL),A     ;
 $8CEC INC L         ;
 $8CED POP DE        ;
 $8CEE LD A,(HL)     ;
 $8CEF AND D         ;
 $8CF0 OR E          ;
 $8CF1 LD (HL),A     ;
 $8CF2 INC L         ;
 $8CF3 POP DE        ;
 $8CF4 LD A,(HL)     ;
 $8CF5 AND D         ;
 $8CF6 OR E          ;
 $8CF7 LD (HL),A     ;
 $8CF8 INC L         ;
 $8CF9 POP DE        ;
 $8CFA LD A,(HL)     ;
 $8CFB AND D         ;
 $8CFC OR E          ;
 $8CFD LD (HL),A     ;
 $8CFE INC L         ;
 $8CFF POP DE        ;
 $8D00 LD A,(HL)     ;
 $8D01 AND D         ;
 $8D02 OR E          ;
 $8D03 LD (HL),A     ;
 $8D04 INC L         ;
 $8D05 POP DE        ;
 $8D06 LD A,(HL)     ;
 $8D07 AND D         ;
 $8D08 OR E          ;
 $8D09 LD (HL),A     ;
 $8D0A INC L         ;
 $8D0B POP DE        ;
 $8D0C LD A,(HL)     ;
 $8D0D AND D         ;
 $8D0E OR E          ;
 $8D0F LD (HL),A     ;
 $8D10 INC H         ;
 $8D11 POP DE        ;
 $8D12 LD A,(HL)     ;
 $8D13 AND D         ;
 $8D14 OR E          ;
 $8D15 LD (HL),A     ;
 $8D16 DEC L         ;
 $8D17 POP DE        ;
 $8D18 LD A,(HL)     ;
 $8D19 AND D         ;
 $8D1A OR E          ;
 $8D1B LD (HL),A     ;
 $8D1C DEC L         ;
 $8D1D POP DE        ;
 $8D1E LD A,(HL)     ;
 $8D1F AND D         ;
 $8D20 OR E          ;
 $8D21 LD (HL),A     ;
 $8D22 DEC L         ;
 $8D23 POP DE        ;
 $8D24 LD A,(HL)     ;
 $8D25 AND D         ;
 $8D26 OR E          ;
 $8D27 LD (HL),A     ;
 $8D28 DEC L         ;
 $8D29 POP DE        ;
 $8D2A LD A,(HL)     ;
 $8D2B AND D         ;
 $8D2C OR E          ;
 $8D2D LD (HL),A     ;
 $8D2E DEC L         ;
 $8D2F POP DE        ;
 $8D30 LD A,(HL)     ;
 $8D31 AND D         ;
 $8D32 OR E          ;
 $8D33 LD (HL),A     ;
 $8D34 DEC L         ;
 $8D35 POP DE        ;
 $8D36 LD A,(HL)     ;
 $8D37 AND D         ;
 $8D38 OR E          ;
 $8D39 LD (HL),A     ;
 $8D3A DEC L         ;
 $8D3B POP DE        ;
 $8D3C LD A,(HL)     ;
 $8D3D AND D         ;
 $8D3E OR E          ;
 $8D3F LD (HL),A     ;
 $8D40 INC H         ;
 $8D41 LD A,H        ;
 $8D42 AND $07       ;
 $8D44 JR NZ,$8D50   ;
 $8D46 LD A,L        ;
 $8D47 ADD A,$20     ;
 $8D49 LD L,A        ;
 $8D4A JR C,$8D50    ;
 $8D4C LD A,H        ;
 $8D4D SUB $08       ;
 $8D4F LD H,A        ;
*$8D50 DJNZ $8CE1    ;
 $8D52 OR A          ;
 $8D53 LD SP,($FD82) ;
 $8D57 RET           ;

; Data block at 8D58
b$8D58 DEFB $3E,$0D,$08,$18,$03,$3E,$31,$08
 $8D60 DEFB $7A,$FE,$60,$3F,$D8,$7A,$87,$6F
 $8D68 DEFB $26,$FE,$3E,$07,$86

; Message at 8D6D
t$8D6D DEFM ",foz"

; Data block at 8D71
b$8D71 DEFB $EE,$03,$3D,$E6,$03,$4F,$CD,$9E
 $8D79 DEFB $8D,$CD,$8D,$8D,$7D,$83,$6F,$CD
 $8D81 DEFB $9E,$8D,$CD,$8D,$8D,$7D,$F6,$18
 $8D89 DEFB $6F,$CD,$9E,$8D,$0C,$0D,$C8,$7A
 $8D91 DEFB $FE,$5F,$C8,$79,$D9,$11,$FF,$FF
 $8D99 DEFB $43,$4B,$C3,$35,$8E,$E5,$D9,$E1
 $8DA1 DEFB $11,$00,$00

; Message at 8DA4
t$8DA4 DEFM "CK>"

; Data block at 8DA7
b$8DA7 DEFB $01,$CD,$35,$8E,$7A,$FE,$5F,$C8
 $8DAF DEFB $D9,$7C,$E6,$07,$20,$0A,$7D,$C6

; Message at 8DB7
t$8DB7 DEFM " o8"

; Data block at 8DBA
b$8DBA DEFB $04,$7C,$D6,$08,$67,$CD,$51,$8E
 $8DC2 DEFB $11,$92,$89,$01,$DD,$E5,$3E,$01
 $8DCA DEFB $18,$69,$7A,$FE,$60,$3F,$D8,$7A
 $8DD2 DEFB $E6,$FC,$87,$6F,$26,$FE,$3E,$07
 $8DDA DEFB $86

; Message at 8DDB
t$8DDB DEFM ",foz<"

; Data block at 8DE0
b$8DE0 DEFB $E6,$03,$4F,$CD,$1D,$8E,$CD,$F9
 $8DE8 DEFB $8D,$7B,$85,$6F,$CD,$1D,$8E,$CD
 $8DF0 DEFB $F9,$8D,$7D,$F6,$18,$6F,$CD,$1D
 $8DF8 DEFB $8E,$7A,$FE,$5F,$C8,$D9,$7C,$E6
 $8E00 DEFB $07,$20,$0A,$7D,$C6

; Message at 8E05
t$8E05 DEFM " o8"

; Data block at 8E08
b$8E08 DEFB $04,$7C,$D6,$08

; Message at 8E0C
t$8E0C DEFM "g>5"

; Data block at 8E0F
b$8E0F DEFB $08,$CD,$51,$8E,$11,$E5,$DD,$01
 $8E17 DEFB $89,$92,$3E,$01,$18,$18,$E5,$79
 $8E1F DEFB $B7,$D9,$E1,$11,$FF,$FF

; Message at 8E25
t$8E25 DEFM "CK "

; Data block at 8E28
b$8E28 DEFB $0C,$D9,$3E,$29,$08,$CD,$51,$8E
 $8E30 DEFB $D9,$13,$03,$3E,$04,$ED,$73,$82
 $8E38 DEFB $FD,$23,$F9,$D5,$D5,$D5,$D5,$24
 $8E40 DEFB $F9,$C5,$C5,$C5,$C5

; Message at 8E45
t$8E45 DEFM "$= "

; Data block at 8E48
b$8E48 DEFB $F1,$2B,$D9,$ED,$7B,$82,$FD,$B7
 $8E50 DEFB $C9,$44,$7C,$E6,$F8,$0F,$0F,$0F
 $8E58 DEFB $E6,$03,$F6,$58,$67,$08

; Message at 8E5E
t$8E5E DEFM "w-w-w-w-w-w-w-w"

; Data block at 8E6D
b$8E6D DEFB $08,$7D,$C6,$07,$6F,$60,$C9,$7A
 $8E75 DEFB $FE,$67,$3F,$D8,$06,$08,$0E,$30
 $8E7D DEFB $2A,$0E,$C0,$C3,$7B,$8A

; Routine at 8E83
c$8E83 LD A,D        ;
 $8E84 CP $67        ;
 $8E86 CCF           ;
 $8E87 RET C         ;
 $8E88 LD B,$08      ;
 $8E8A LD C,$30      ;
 $8E8C LD HL,($C010) ;
 $8E8F JP $8A7B      ;

; Routine at 8E92
;
; Used by the routines at #R$800C and #R$867C.
;
; I:H ??
; I:E ??
c$8E92 LD L,$00      ;
 $8E94 LD D,L        ;
 $8E95 ADD HL,HL     ;
 $8E96 JR NC,$8E99   ;
 $8E98 ADD HL,DE     ;
*$8E99 ADD HL,HL     ;
 $8E9A JR NC,$8E9D   ;
 $8E9C ADD HL,DE     ;
*$8E9D ADD HL,HL     ;
 $8E9E JR NC,$8EA1   ;
 $8EA0 ADD HL,DE     ;
*$8EA1 ADD HL,HL     ;
 $8EA2 JR NC,$8EA5   ;
 $8EA4 ADD HL,DE     ;
*$8EA5 ADD HL,HL     ;
 $8EA6 JR NC,$8EA9   ;
 $8EA8 ADD HL,DE     ;
*$8EA9 ADD HL,HL     ;
 $8EAA JR NC,$8EAD   ;
 $8EAC ADD HL,DE     ;
*$8EAD ADD HL,HL     ;
 $8EAE JR NC,$8EB1   ;
 $8EB0 ADD HL,DE     ;
*$8EB1 ADD HL,HL     ;
 $8EB2 RET NC        ;
 $8EB3 ADD HL,DE     ;
 $8EB4 RET           ;

; Routine at 8EB5
c$8EB5 LD A,D        ;
 $8EB6 CP $67        ;
 $8EB8 CCF           ;
 $8EB9 RET C         ;
 $8EBA LD A,$01      ;
 $8EBC LD B,$08      ;
 $8EBE LD C,$01      ;
 $8EC0 BIT 7,E       ;
 $8EC2 JR NZ,$8EFA   ;
 $8EC4 LD C,$32      ;
 $8EC6 LD HL,($C008) ;
 $8EC9 JP $8A7B      ;

; Data block at 8ECC
b$8ECC DEFB $7A,$FE,$6A,$3F,$D8,$3E,$03,$06
 $8ED4 DEFB $0B,$0E,$02,$CB,$7B,$20,$1F,$0E
 $8EDC DEFB $32,$2A,$0A,$C0,$C3,$C3,$8A

; Routine at 8EE3
c$8EE3 LD A,D        ;
 $8EE4 CP $6A        ;
 $8EE6 CCF           ;
 $8EE7 RET C         ;
 $8EE8 LD A,$05      ;
 $8EEA LD B,$0B      ;
 $8EEC LD C,$02      ;
 $8EEE BIT 7,E       ;
 $8EF0 JR NZ,$8EFA   ;
 $8EF2 LD C,$32      ;
 $8EF4 LD HL,($C00C) ;
 $8EF7 JP $8AC3      ;
; This entry point is used by the routine at #R$8EB5.
*$8EFA RES 7,E       ;
 $8EFC CALL $6430    ; -> $6C7A - We've got A more grenades
 $8EFF LD A,C        ;
 $8F00 ADD A,A       ;
 $8F01 ADD A,E       ;
 $8F02 CP $21        ;
 $8F04 JR C,$8F07    ;
 $8F06 DEC E         ;
*$8F07 CALL $854A    ;
 $8F0A LD BC,$0104   ; +1000
 $8F0D CALL $6415    ; -> $6825 - Update Score
 $8F10 LD A,$03      ;
 $8F12 CALL $642D    ; -> $6456
 $8F15 SCF           ;
 $8F16 RET           ;

; Routine at 8F17
c$8F17 LD A,D        ;
 $8F18 CP $68        ;
 $8F1A CCF           ;
 $8F1B RET C         ;
 $8F1C LD B,$09      ;
 $8F1E LD C,$31      ;
 $8F20 LD HL,($C016) ;
 $8F23 JP $8A7B      ;

; Routine at 8F26
c$8F26 LD A,D        ;
 $8F27 CP $68        ;
 $8F29 CCF           ;
 $8F2A RET C         ;
 $8F2B LD B,$09      ;
 $8F2D LD C,$31      ;
 $8F2F LD HL,($C018) ;
 $8F32 JP $8AC3      ;

; Routine at 8F35
c$8F35 LD A,D        ;
 $8F36 CP $68        ;
 $8F38 CCF           ;
 $8F39 RET C         ;
 $8F3A LD B,$09      ;
 $8F3C LD HL,($C01A) ;
 $8F3F JP $8A7B      ;

; Data block at 8F42
b$8F42 DEFB $D9,$0E,$07,$3E,$30,$18,$05,$D9
 $8F4A DEFB $0E,$31,$3E,$06,$D9,$08,$7A,$FE
 $8F52 DEFB $9F,$3F,$D8,$06,$40,$3C,$90,$57
 $8F5A DEFB $D6,$04,$F2,$8D,$8F,$ED

; Data block at 8F60
b$8F60 DEFB $44,$4F,$3E,$3F

; Data block at 8F64
b$8F64 DEFB $91,$CB,$3F,$CB

; Data block at 8F68
b$8F68 DEFB $3F,$3C,$47,$79

; Data block at 8F6C
b$8F6C DEFB $CB,$3F,$CB,$3F,$83,$5F,$C6

; Data block at 8F73
b$8F73 DEFB $20,$6F,$26

; Data block at 8F76
b$8F76 DEFB $40,$79,$E6,$03,$EE,$03,$57,$14
 $8F7E DEFB $79,$E6,$03,$0E,$FF,$28,$3E,$FE
 $8F86 DEFB $02

; Data block at 8F87
b$8F87 DEFB $28,$4A,$38,$3F

; Data block at 8F8B
b$8F8B DEFB $18,$4F,$06,$10,$7A,$E6,$FC,$87
 $8F93 DEFB $6F,$26,$FE,$7E,$2C,$66,$83,$6F
 $8F9B DEFB $0E,$FF,$7A,$E6,$03,$28,$21,$FE
 $8FA3 DEFB $02,$38,$19,$28,$13,$4C,$7C,$0F
 $8FAB DEFB $0F,$0F,$F6,$58,$67,$D9,$79,$D9
 $8FB3 DEFB $77,$61,$0E,$00

; Data block at 8FB7
b$8FB7 DEFB $71,$24,$71,$24,$71,$24,$71,$24
 $8FBF DEFB $71,$24,$71,$24,$71,$24,$71

; Data block at 8FC6
b$8FC6 DEFB $CD,$FC,$8F,$D0,$36,$3F,$24,$36
 $8FCE DEFB $3F

; Data block at 8FCF
b$8FCF DEFB $CD,$FC,$8F,$D0,$36,$0F,$24,$36
 $8FD7 DEFB $0F,$CD,$FC,$8F,$D0,$4C,$7C,$E6
 $8FDF DEFB $F8,$0F,$0F,$0F,$F6,$58,$67,$08
 $8FE7 DEFB $77,$08,$61,$36,$03,$24,$36,$03
 $8FEF DEFB $CD,$FC,$8F,$D0,$7A,$C6,$04,$57
 $8FF7 DEFB $1C,$10,$95,$B7,$C9,$CD,$DC,$98
 $8FFF DEFB $7C,$E6,$18,$FE,$18,$C9,$7A,$FE
 $9007 DEFB $68,$3F,$D8,$06,$09,$0E,$87,$2A
 $900F DEFB $3E,$C0,$C3,$7B,$8A

; Routine at 9014
c$9014 LD A,D        ;
 $9015 CP $6B        ;
 $9017 JR NC,$9025   ;
 $9019 LD HL,($C01E) ;
 $901C LD B,$0C      ;
 $901E LD C,$B4      ;
 $9020 PUSH DE       ;
 $9021 CALL $8A14    ;
 $9024 POP DE        ;
*$9025 DEC E         ;
 $9026 LD A,D        ;
 $9027 SUB $0C       ;
 $9029 CCF           ;
 $902A RET NC        ;
 $902B CP $04        ;
 $902D CCF           ;
 $902E RET NC        ;
 $902F LD D,A        ;
 $9030 CP $67        ;
 $9032 CCF           ;
 $9033 RET C         ;
 $9034 LD HL,($C01C) ;
 $9037 LD B,$08      ;
 $9039 LD C,$34      ;
 $903B JP $8AC3      ;

; Routine at 903E
c$903E LD A,D        ;
 $903F CP $6A        ;
 $9041 CCF           ;
 $9042 RET C         ;
 $9043 LD B,$0B      ;
 $9045 LD C,$30      ;
 $9047 LD HL,($C014) ;
 $904A JP $8AC3      ;

; Routine at 904D
c$904D LD A,E         ;
 $904E AND $1F        ;
 $9050 BIT 7,E        ;
 $9052 JR NZ,$9070    ;
 $9054 LD HL,($C002)  ; Get sprite addr Cliff edge left
 $9057 PUSH HL        ;
 $9058 LD HL,($C048)  ; Get sprite addr ???
 $905B BIT 6,E        ;
 $905D JR Z,$908A     ;
 $905F LD (IY+$5F),D  ;
 $9062 RES 0,(IY+$71) ;
 $9066 BIT 5,E        ;
 $9068 JR Z,$908A     ;
 $906A SET 0,(IY+$71) ;
 $906E JR $908A       ;
*$9070 LD HL,($C000)  ; Get sprite addr Cliff edge right
 $9073 PUSH HL        ;
 $9074 LD HL,($C042)  ;
 $9077 BIT 6,E        ;
 $9079 JR Z,$908A     ;
 $907B LD (IY+$5E),D  ;
 $907E RES 1,(IY+$71) ;
 $9082 BIT 5,E        ;
 $9084 JR Z,$908A     ;
 $9086 SET 1,(IY+$71) ;
*$908A LD E,A         ;
 $908B LD B,$15       ;
 $908D LD C,$34       ;
 $908F LD A,$EC       ;
 $9091 CALL $90A1     ;
 $9094 POP HL         ;
 $9095 RET C          ;
 $9096 LD B,$0F       ;
 $9098 LD C,$37       ;
 $909A LD A,$FE       ;
 $909C CALL $90A1     ;
 $909F OR A           ;
 $90A0 RET            ;

; Routine at 90A1
;
; Used by the routine at #R$904D.
;
; I:B ??
; I:C ??
; I:A ??
; I:DE ??
c$90A1 PUSH DE       ;
 $90A2 ADD A,D       ;
 $90A3 LD D,A        ;
 $90A4 SUB $04       ;
 $90A6 OR A          ;
 $90A7 CALL P,$8A14  ;
 $90AA POP DE        ;
 $90AB RET           ;

; Routine at 90AC
c$90AC LD A,D        ;
 $90AD CP $93        ;
 $90AF CCF           ;
 $90B0 RET C         ;
 $90B1 BIT 7,E       ;
 $90B3 RES 7,E       ;
 $90B5 LD A,E        ;
 $90B6 JR NZ,$90C1   ;
 $90B8 LD HL,($C040) ; Get sprite addr Cliff top right; width 6
 $90BB PUSH HL       ;
 $90BC LD HL,($C044) ; Get sprite addr Cliff bottom right; width 6
 $90BF JR $90C8      ;
*$90C1 LD HL,($C046) ; Get sprite addr Cliff top left; width 6
 $90C4 PUSH HL       ;
 $90C5 LD HL,($C04A) ; Get sprite addr Cliff bottom left; width 6
*$90C8 LD B,$14      ; Sprite height = 20
 $90CA PUSH DE       ;
 $90CB LD A,$40      ;
 $90CD CALL $834B    ; Draw sprite HL
 $90D0 POP DE        ;
 $90D1 POP HL        ;
 $90D2 LD B,$0C      ; Sprite height = 12
 $90D4 PUSH DE       ;
 $90D5 LD A,D        ;
 $90D6 SUB $24       ;
 $90D8 LD D,A        ;
 $90D9 CP $04        ;
 $90DB LD A,$40      ;
 $90DD CALL P,$834B  ; Draw sprite HL
 $90E0 POP DE        ;
 $90E1 LD A,D        ;
 $90E2 AND $FC       ;
 $90E4 LD D,A        ;
 $90E5 LD BC,$3401   ;
 $90E8 CALL $867C    ;
 $90EB PUSH HL       ;
 $90EC LD A,E        ;
 $90ED EXX           ;
 $90EE ADD A,$01     ;
 $90F0 SRL A         ;
 $90F2 SRL A         ;
 $90F4 LD HL,$9124   ;
 $90F7 CALL $98D3    ; HL = HL + A
 $90FA EX DE,HL      ;
 $90FB POP HL        ;
 $90FC LD A,H        ;
 $90FD RRCA          ;
 $90FE RRCA          ;
 $90FF RRCA          ;
 $9100 AND $03       ;
 $9102 OR $58        ;
 $9104 LD H,A        ;
 $9105 LD BC,$001B   ;
 $9108 EXX           ;
 $9109 LD A,B        ;
 $910A SRL A         ;
 $910C SRL A         ;
 $910E INC A         ;
 $910F LD B,A        ;
*$9110 EXX           ;
 $9111 LD A,(DE)     ;
 $9112 INC DE        ;
 $9113 LD (HL),A     ;
 $9114 INC L         ;
 $9115 LD (HL),A     ;
 $9116 INC L         ;
 $9117 LD (HL),A     ;
 $9118 INC L         ;
 $9119 LD (HL),A     ;
 $911A INC L         ;
 $911B LD (HL),A     ;
 $911C INC L         ;
 $911D LD (HL),A     ;
 $911E ADD HL,BC     ;
 $911F EXX           ;
 $9120 DJNZ $9110    ;
 $9122 OR A          ;
 $9123 RET           ;

; Data block at 9124
b$9124 DEFB $31,$34,$34,$34,$24,$21,$21,$21
 $912C DEFB $27,$27,$27,$37,$37,$37

; Decrement Land space or process next record in the sequence
;
; Used by the routine at #R$9193.
c$9132 LD A,($FD86)   ; Get Land space size
 $9135 OR A           ; zero?
 $9136 JR Z,$913D     ; yes => process next record in the sequence
 $9138 DEC A          ;
 $9139 LD ($FD86),A   ; Update Land space size
 $913C RET            ;
*$913D LD HL,($FD8A)  ; Get current level sequence address
 $9140 LD A,(HL)      ; Get record code
 $9141 AND $7F        ;
 $9143 CP $7F         ; End of levels marker?
 $9145 JR NZ,$914D    ;
 $9147 LD HL,$9236    ; Level 1 start address
 $914A LD A,(HL)      ; Get record code
 $914B AND $7F        ;
*$914D INC HL         ;
 $914E LD E,(HL)      ; Get record parameter
 $914F INC HL         ;
 $9150 LD ($FD8A),HL  ; Save current level sequence address
 $9153 OR A           ; $00 - Land space?
 $9154 JR NZ,$915B    ; no => jump
 $9156 LD A,E         ;
 $9157 LD ($FD86),A   ; Save Land space size
 $915A RET            ;
*$915B CP $29         ;
 $915D JR C,$9165     ;
 $915F LD BC,$0002    ;
 $9162 JP $6400       ; -> $7A10
*$9165 CP $22         ; Spawn Point/Level End ?
 $9167 JR NZ,$9171    ; no => jump
 $9169 DEC E          ; Level End ?
 $916A JR NZ,$913D    ; no => jump
 $916C SET 4,(IY+$15) ;
 $9170 RET            ;
*$9171 CALL $9204     ; Process codes $01-28, not $22
 $9174 JR $913D       ; => process next record in the sequence

; Data block at 9176
b$9176 DEFB $01,$05,$00,$C3,$00,$64

; Routine at 917C
;
; Used by the routine at #R$9193.
c$917C LD A,($FD88)  ; Get Offset in $FF00 buffer
 $917F OR A          ;
 $9180 RET Z         ;
 $9181 LD HL,$FF00   ;
*$9184 LD L,(HL)     ;
 $9185 LD E,L        ;
 $9186 LD A,L        ;
 $9187 ADD A,$04     ;
 $9189 LD L,A        ;
 $918A INC (HL)      ;
 $918B LD L,E        ;
 $918C LD A,($FD88)  ; Get Offset in $FF00 buffer
 $918F CP L          ;
 $9190 JR NZ,$9184   ;
 $9192 RET           ;

; Routine at 9193
;
; Used by the routine at #R$8003.
c$9193 BIT 4,(IY+$15) ;
 $9197 JR NZ,$91AA    ;
 $9199 CALL $917C     ;
 $919C CALL $9132     ; Decrement Land space or process next record in the
                      ; sequence
 $919F BIT 1,(IY+$07) ;
 $91A3 RET NZ         ;
 $91A4 LD A,$80       ;
 $91A6 LD R,A         ;
 $91A8 JR $91AD       ;
; This entry point is used by the routine at #R$8006.
*$91AA XOR A          ;
 $91AB LD R,A         ;
*$91AD CALL $85AB     ; ?? Smth about Truck
 $91B0 CALL $8471     ; ?? Smth about Motorbike
 $91B3 CALL $83B8     ; ?? Smth about Jeep
 $91B6 LD A,($FD88)   ; Get Offset in $FF00 buffer
 $91B9 OR A           ;
 $91BA RET Z          ;
 $91BB LD HL,$FF00    ;
; This entry point is used by the routine at #R$91E3.
*$91BE LD L,(HL)      ;
; This entry point is used by the routine at #R$91E3.
*$91BF PUSH HL        ;
 $91C0 INC L          ;
 $91C1 INC L          ;
 $91C2 LD A,(HL)      ;
 $91C3 AND $7F        ;
 $91C5 INC L          ;
 $91C6 LD E,(HL)      ;
 $91C7 INC L          ;
 $91C8 LD D,(HL)      ;
 $91C9 CP $29         ;
 $91CB JR NC,$91DD    ;
 $91CD LD HL,$91E3    ;
 $91D0 PUSH HL        ;
 $91D1 DEC A          ;
 $91D2 ADD A,A        ;
 $91D3 ADD A,$12      ;
 $91D5 LD L,A         ;
 $91D6 LD H,$80       ;
 $91D8 LD A,(HL)      ;
 $91D9 INC L          ;
 $91DA LD H,(HL)      ;
 $91DB LD L,A         ;
 $91DC JP (HL)        ;
*$91DD LD BC,$0004    ;
 $91E0 JP $6400       ; -> $7A10

; Routine at 91E3
c$91E3 JR NC,$91FC   ;
 $91E5 POP HL        ;
 $91E6 LD A,($FD88)  ; Get Offset in $FF00 buffer
 $91E9 CP L          ;
 $91EA JR Z,$91F6    ;
 $91EC LD A,L        ;
 $91ED LD L,(HL)     ;
 $91EE PUSH HL       ;
 $91EF LD L,A        ;
 $91F0 CALL $921F    ;
 $91F3 POP HL        ;
 $91F4 JR $91BF      ;
*$91F6 INC L         ;
 $91F7 LD A,(HL)     ;
 $91F8 LD ($FD88),A  ; Update Offset in $FF00 buffer
 $91FB RET           ;
*$91FC POP HL        ;
 $91FD LD A,($FD88)  ; Get Offset in $FF00 buffer
 $9200 CP L          ;
 $9201 JR NZ,$91BE   ;
 $9203 RET           ;

; Process record codes $01-28, not $22
;
; Used by the routine at #R$9132.
c$9204 LD B,A        ;
 $9205 LD H,$FF      ;
 $9207 LD A,($FD88)  ; Get Offset in $FF00 buffer
 $920A LD L,A        ;
 $920B LD A,(HL)     ;
 $920C LD L,A        ;
 $920D LD ($FD88),A  ; Update Offset in $FF00 buffer
 $9210 INC L         ;
 $9211 INC L         ;
 $9212 LD (HL),B     ;
 $9213 INC L         ;
 $9214 LD (HL),E     ;
 $9215 INC L         ;
 $9216 LD (HL),$04   ;
 $9218 INC L         ;
 $9219 LD (HL),$00   ;
 $921B INC L         ;
 $921C LD (HL),$00   ;
 $921E RET           ;

; Routine at 921F
;
; Used by the routine at #R$91E3.
c$921F LD D,L        ;
 $9220 LD A,(HL)     ;
 $9221 INC L         ;
 $9222 LD L,(HL)     ;
 $9223 LD E,L        ;
 $9224 LD (HL),A     ;
 $9225 LD L,A        ;
 $9226 INC L         ;
 $9227 LD (HL),E     ;
 $9228 LD A,($FD88)  ; Get Offset in $FF00 buffer
 $922B LD L,A        ;
 $922C LD E,(HL)     ;
 $922D LD (HL),D     ;
 $922E LD L,D        ;
 $922F LD (HL),E     ;
 $9230 INC L         ;
 $9231 LD (HL),A     ;
 $9232 LD L,E        ;
 $9233 INC L         ;
 $9234 LD (HL),D     ;
 $9235 RET           ;

; Level 1
b$9236 DEFB $22,$00  ; Spawn Point
 $9238 DEFB $00,$04  ; Land Space
 $923A DEFB $83,$0C  ; A tree in column 12
 $923C DEFB $00,$05  ; Land Space
 $923E DEFB $83,$0A  ; A tree in column 10
 $9240 DEFB $83,$0E  ; A tree in column 14
 $9242 DEFB $00,$1E  ; Land Space
 $9244 DEFB $83,$1C  ; A tree in column 28
 $9246 DEFB $83,$02  ; A tree in column 2
 $9248 DEFB $00,$15  ; Land Space
 $924A DEFB $82,$9A  ; A mirrored cliff in column 26
 $924C DEFB $26,$59  ; A cliff edge in column 25 with jumping soldiers
 $924E DEFB $00,$14  ; Land Space
 $9250 DEFB $87,$14  ; A boulder in column 20
 $9252 DEFB $00,$14  ; Land Space
 $9254 DEFB $83,$08  ; A tree in column 8
 $9256 DEFB $00,$1E  ; Land Space
 $9258 DEFB $83,$12  ; A tree in column 18
 $925A DEFB $83,$16  ; A tree in column 22
 $925C DEFB $00,$05  ; Land Space
 $925E DEFB $83,$14  ; A tree in column 20
 $9260 DEFB $00,$19  ; Land Space
 $9262 DEFB $83,$09  ; A tree in column 9
 $9264 DEFB $00,$14  ; Land Space
 $9266 DEFB $82,$9A  ; A mirrored cliff in column 26
 $9268 DEFB $26,$59  ; A cliff edge in column 25 with jumping soldiers
 $926A DEFB $00,$28  ; Land Space
 $926C DEFB $83,$01  ; A tree in column 1
 $926E DEFB $83,$17  ; A tree in column 23
 $9270 DEFB $83,$05  ; A tree in column 5
 $9272 DEFB $00,$06  ; Land Space
 $9274 DEFB $83,$03  ; A tree in column 3
 $9276 DEFB $00,$10  ; Land Space
 $9278 DEFB $8A,$11  ; Sandbags LHS in column 17
 $927A DEFB $8B,$13  ; Sandbags MIDDLE in column 19
 $927C DEFB $8B,$16  ; Sandbags MIDDLE in column 22
 $927E DEFB $8C,$19  ; Sandbags RHS in column 25
 $9280 DEFB $00,$08  ; Land Space
 $9282 DEFB $83,$0D  ; A tree in column 13
 $9284 DEFB $0F,$11  ; A single grenade in column 17
 $9286 DEFB $00,$1C  ; Land Space
 $9288 DEFB $83,$18  ; A tree in column 24
 $928A DEFB $82,$00  ; A cliff in column 0
 $928C DEFB $26,$C6  ; A mirrored cliff edge in column 6 with jumping soldiers
 $928E DEFB $00,$28  ; Land Space
 $9290 DEFB $83,$19  ; A tree in column 25
 $9292 DEFB $00,$1E  ; Land Space
 $9294 DEFB $82,$8A  ; A mirrored cliff in column 10
 $9296 DEFB $82,$10  ; A cliff in column 16
 $9298 DEFB $26,$09  ; A cliff edge in column 9
 $929A DEFB $26,$96  ; A mirrored cliff edge in column 22
 $929C DEFB $00,$36  ; Land Space
 $929E DEFB $87,$14  ; A boulder in column 20
 $92A0 DEFB $00,$04  ; Land Space
 $92A2 DEFB $20,$00  ; Prisoner of war
 $92A4 DEFB $00,$05  ; Land Space
 $92A6 DEFB $22,$00  ; Spawn Point
 $92A8 DEFB $00,$23  ; Land Space
 $92AA DEFB $83,$02  ; A tree in column 2
 $92AC DEFB $00,$14  ; Land Space
 $92AE DEFB $83,$13  ; A tree in column 19
 $92B0 DEFB $00,$1E  ; Land Space
 $92B2 DEFB $8B,$1D  ; Sandbags MIDDLE in column 29
 $92B4 DEFB $8B,$1A  ; Sandbags MIDDLE in column 26
 $92B6 DEFB $8A,$18  ; Sandbags LHS in column 24
 $92B8 DEFB $00,$08  ; Land Space
 $92BA DEFB $13,$19  ; A right mortar in column 25
 $92BC DEFB $00,$06  ; Land Space
 $92BE DEFB $11,$16  ; A quintuple grenade in column 22
 $92C0 DEFB $00,$0D  ; Land Space
 $92C2 DEFB $09,$0B  ; A wall in column 11
 $92C4 DEFB $09,$1F  ; A wall in column 31
 $92C6 DEFB $96,$0C  ; A tunnel in column 12
 $92C8 DEFB $00,$17  ; Land Space
 $92CA DEFB $17,$1F  ; Draw Road on bridge
 $92CC DEFB $00,$01  ; Land Space
 $92CE DEFB $1B,$3C  ; Motorbike
 $92D0 DEFB $00,$0B  ; Land Space
 $92D2 DEFB $08,$1F  ; A bridge section
 $92D4 DEFB $00,$14  ; Land Space
 $92D6 DEFB $87,$0F  ; A boulder in column 15
 $92D8 DEFB $00,$32  ; Land Space
 $92DA DEFB $22,$00  ; Spawn Point
 $92DC DEFB $00,$1E  ; Land Space
 $92DE DEFB $87,$01  ; A boulder in column 1
 $92E0 DEFB $00,$23  ; Land Space
 $92E2 DEFB $87,$09  ; A boulder in column 9
 $92E4 DEFB $00,$14  ; Land Space
 $92E6 DEFB $87,$12  ; A boulder in column 18
 $92E8 DEFB $00,$1E  ; Land Space
 $92EA DEFB $87,$01  ; A boulder in column 1
 $92EC DEFB $87,$0E  ; A boulder in column 14
 $92EE DEFB $87,$1B  ; A boulder in column 27
 $92F0 DEFB $00,$19  ; Land Space
 $92F2 DEFB $8A,$02  ; Sandbags LHS in column 2
 $92F4 DEFB $8B,$04  ; Sandbags MIDDLE in column 4
 $92F6 DEFB $8B,$07  ; Sandbags MIDDLE in column 7
 $92F8 DEFB $8C,$0A  ; Sandbags RHS in column 10
 $92FA DEFB $00,$0A  ; Land Space
 $92FC DEFB $11,$03  ; A quintuple grenade in column 3
 $92FE DEFB $00,$0F  ; Land Space
 $9300 DEFB $8A,$13  ; Sandbags LHS in column 19
 $9302 DEFB $8B,$15  ; Sandbags MIDDLE in column 21
 $9304 DEFB $8B,$18  ; Sandbags MIDDLE in column 24
 $9306 DEFB $8C,$1B  ; Sandbags RHS in column 27
 $9308 DEFB $00,$12  ; Land Space
 $930A DEFB $8A,$04  ; Sandbags LHS in column 4
 $930C DEFB $8B,$06  ; Sandbags MIDDLE in column 6
 $930E DEFB $8C,$09  ; Sandbags RHS in column 9
 $9310 DEFB $00,$09  ; Land Space
 $9312 DEFB $10,$05  ; A triple grenade in column 5
 $9314 DEFB $00,$05  ; Land Space
 $9316 DEFB $22,$00  ; Spawn Point
 $9318 DEFB $00,$32  ; Land Space
 $931A DEFB $8A,$0D  ; Sandbags LHS in column 13
 $931C DEFB $8B,$0F  ; Sandbags MIDDLE in column 15
 $931E DEFB $8C,$12  ; Sandbags RHS in column 18
 $9320 DEFB $00,$19  ; Land Space
 $9322 DEFB $8A,$00  ; Sandbags LHS in column 0
 $9324 DEFB $8B,$02  ; Sandbags MIDDLE in column 2
 $9326 DEFB $8C,$05  ; Sandbags RHS in column 5
 $9328 DEFB $00,$1C  ; Land Space
 $932A DEFB $8B,$1D  ; Sandbags MIDDLE in column 29
 $932C DEFB $8B,$1A  ; Sandbags MIDDLE in column 26
 $932E DEFB $8A,$18  ; Sandbags LHS in column 24
 $9330 DEFB $00,$08  ; Land Space
 $9332 DEFB $0F,$18  ; A single grenade in column 24
 $9334 DEFB $00,$32  ; Land Space
 $9336 DEFB $09,$0B  ; A wall in column 11
 $9338 DEFB $09,$1F  ; A wall in column 31
 $933A DEFB $21,$14  ; Fortress gates
 $933C DEFB $00,$16  ; Land Space
 $933E DEFB $22,$01  ; Spawn Point

; Level 2
b$9340 DEFB $00,$5E  ; Land Space
 $9342 DEFB $1C,$00  ; Jeep
 $9344 DEFB $1A,$00  ; Truck
 $9346 DEFB $00,$3C  ; Land Space
 $9348 DEFB $1B,$FF  ; Motorbike
 $934A DEFB $00,$28  ; Land Space
 $934C DEFB $0F,$07  ; A single grenade in column 7
 $934E DEFB $00,$08  ; Land Space
 $9350 DEFB $24,$00  ; A trench MIDDLE in column 0
 $9352 DEFB $24,$04  ; A trench MIDDLE in column 4
 $9354 DEFB $25,$08  ; A trench RIGHT in column 8
 $9356 DEFB $00,$19  ; Land Space
 $9358 DEFB $23,$14  ; A trench LHS in column 20
 $935A DEFB $24,$16  ; A trench MIDDLE in column 22
 $935C DEFB $25,$1A  ; A trench RIGHT in column 26
 $935E DEFB $00,$1E  ; Land Space
 $9360 DEFB $23,$02  ; A trench LHS in column 2
 $9362 DEFB $24,$04  ; A trench MIDDLE in column 4
 $9364 DEFB $25,$08  ; A trench RIGHT in column 8
 $9366 DEFB $00,$08  ; Land Space
 $9368 DEFB $23,$16  ; A trench LHS in column 22
 $936A DEFB $24,$18  ; A trench MIDDLE in column 24
 $936C DEFB $25,$1C  ; A trench RIGHT in column 28
 $936E DEFB $00,$1E  ; Land Space
 $9370 DEFB $23,$0A  ; A trench LHS in column 10
 $9372 DEFB $24,$0C  ; A trench MIDDLE in column 12
 $9374 DEFB $24,$10  ; A trench MIDDLE in column 16
 $9376 DEFB $25,$14  ; A trench RIGHT in column 20
 $9378 DEFB $00,$14  ; Land Space
 $937A DEFB $10,$1B  ; A triple grenade in column 27
 $937C DEFB $00,$0A  ; Land Space
 $937E DEFB $22,$00  ; Spawn Point
 $9380 DEFB $00,$32  ; Land Space
 $9382 DEFB $23,$12  ; A trench LHS in column 18
 $9384 DEFB $24,$14  ; A trench MIDDLE in column 20
 $9386 DEFB $24,$18  ; A trench MIDDLE in column 24
 $9388 DEFB $24,$1C  ; A trench MIDDLE in column 28
 $938A DEFB $00,$19  ; Land Space
 $938C DEFB $23,$01  ; A trench LHS in column 1
 $938E DEFB $24,$03  ; A trench MIDDLE in column 3
 $9390 DEFB $25,$07  ; A trench RIGHT in column 7
 $9392 DEFB $00,$1E  ; Land Space
 $9394 DEFB $23,$0C  ; A trench LHS in column 12
 $9396 DEFB $24,$0E  ; A trench MIDDLE in column 14
 $9398 DEFB $24,$12  ; A trench MIDDLE in column 18
 $939A DEFB $24,$16  ; A trench MIDDLE in column 22
 $939C DEFB $25,$1A  ; A trench RIGHT in column 26
 $939E DEFB $00,$1E  ; Land Space
 $93A0 DEFB $23,$02  ; A trench LHS in column 2
 $93A2 DEFB $24,$04  ; A trench MIDDLE in column 4
 $93A4 DEFB $25,$08  ; A trench RIGHT in column 8
 $93A6 DEFB $00,$3C  ; Land Space
 $93A8 DEFB $10,$14  ; A triple grenade in column 20
 $93AA DEFB $00,$0C  ; Land Space
 $93AC DEFB $09,$0B  ; A wall in column 11
 $93AE DEFB $09,$1F  ; A wall in column 31
 $93B0 DEFB $96,$0C  ; A tunnel in column 12
 $93B2 DEFB $00,$17  ; Land Space
 $93B4 DEFB $17,$1F  ; Draw Road on bridge
 $93B6 DEFB $00,$0C  ; Land Space
 $93B8 DEFB $08,$1F  ; A bridge section
 $93BA DEFB $00,$50  ; Land Space
 $93BC DEFB $22,$00  ; Spawn Point
 $93BE DEFB $00,$14  ; Land Space
 $93C0 DEFB $95,$00  ; A barracks in column 0
 $93C2 DEFB $00,$23  ; Land Space
 $93C4 DEFB $10,$03  ; A triple grenade in column 3
 $93C6 DEFB $00,$1E  ; Land Space
 $93C8 DEFB $28,$19  ; Start of NME with rocket launchers. Ferocity:25
 $93CA DEFB $00,$0F  ; Land Space
 $93CC DEFB $98,$10  ; A log crossing in column 16
 $93CE DEFB $00,$02  ; Land Space
 $93D0 DEFB $0D,$08  ; Water
 $93D2 DEFB $00,$19  ; Land Space
 $93D4 DEFB $19,$08  ; Water Strip 1
 $93D6 DEFB $00,$05  ; Land Space
 $93D8 DEFB $0E,$08  ; Water Strip 2
 $93DA DEFB $00,$0A  ; Land Space
 $93DC DEFB $81,$00  ; A bunker in column 0
 $93DE DEFB $00,$14  ; Land Space
 $93E0 DEFB $28,$00  ; End of NME with rocket launchers
 $93E2 DEFB $00,$32  ; Land Space
 $93E4 DEFB $81,$1A  ; A bunker in column 26
 $93E6 DEFB $00,$05  ; Land Space
 $93E8 DEFB $22,$00  ; Spawn Point
 $93EA DEFB $00,$3C  ; Land Space
 $93EC DEFB $81,$00  ; A bunker in column 0
 $93EE DEFB $00,$1E  ; Land Space
 $93F0 DEFB $1F,$1A  ; A cave bottom edge in column 26
 $93F2 DEFB $00,$03  ; Land Space
 $93F4 DEFB $1E,$1A  ; A cave main in column 26
 $93F6 DEFB $00,$0F  ; Land Space
 $93F8 DEFB $1F,$00  ; A cave bottom edge in column 0
 $93FA DEFB $00,$03  ; Land Space
 $93FC DEFB $1E,$00  ; A cave main in column 0
 $93FE DEFB $1E,$1A  ; A cave main in column 26
 $9400 DEFB $00,$13  ; Land Space
 $9402 DEFB $1E,$00  ; A cave main in column 0
 $9404 DEFB $1E,$1A  ; A cave main in column 26
 $9406 DEFB $00,$13  ; Land Space
 $9408 DEFB $1D,$00  ; A cave top edge in column 0
 $940A DEFB $1D,$1A  ; A cave top edge in column 26
 $940C DEFB $00,$04  ; Land Space
 $940E DEFB $09,$0B  ; A wall in column 11
 $9410 DEFB $09,$1F  ; A wall in column 31
 $9412 DEFB $21,$14  ; Fortress gates
 $9414 DEFB $00,$16  ; Land Space
 $9416 DEFB $22,$01  ; Spawn Point

; Level 3
b$9418 DEFB $00,$14  ; Land Space
 $941A DEFB $94,$86  ; A large hut in column 6
 $941C DEFB $00,$19  ; Land Space
 $941E DEFB $94,$94  ; A large hut in column 20
 $9420 DEFB $00,$28  ; Land Space
 $9422 DEFB $94,$81  ; A large hut in column 1
 $9424 DEFB $00,$14  ; Land Space
 $9426 DEFB $10,$16  ; A triple grenade in column 22
 $9428 DEFB $00,$0A  ; Land Space
 $942A DEFB $94,$8B  ; A large hut in column 11
 $942C DEFB $00,$1E  ; Land Space
 $942E DEFB $94,$94  ; A large hut in column 20
 $9430 DEFB $00,$0A  ; Land Space
 $9432 DEFB $94,$84  ; A large hut in column 4
 $9434 DEFB $00,$28  ; Land Space
 $9436 DEFB $94,$8D  ; A large hut in column 13
 $9438 DEFB $00,$28  ; Land Space
 $943A DEFB $94,$86  ; A large hut in column 6
 $943C DEFB $00,$19  ; Land Space
 $943E DEFB $94,$99  ; A large hut in column 25
 $9440 DEFB $00,$23  ; Land Space
 $9442 DEFB $23,$12  ; A trench LHS in column 18
 $9444 DEFB $24,$14  ; A trench MIDDLE in column 20
 $9446 DEFB $25,$18  ; A trench RIGHT in column 24
 $9448 DEFB $00,$0D  ; Land Space
 $944A DEFB $10,$14  ; A triple grenade in column 20
 $944C DEFB $94,$81  ; A large hut in column 1
 $944E DEFB $00,$16  ; Land Space
 $9450 DEFB $94,$8C  ; A large hut in column 12
 $9452 DEFB $00,$32  ; Land Space
 $9454 DEFB $94,$86  ; A large hut in column 6
 $9456 DEFB $00,$0A  ; Land Space
 $9458 DEFB $22,$00  ; Spawn Point
 $945A DEFB $00,$05  ; Land Space
 $945C DEFB $94,$93  ; A large hut in column 19
 $945E DEFB $00,$19  ; Land Space
 $9460 DEFB $24,$00  ; A trench MIDDLE in column 0
 $9462 DEFB $24,$04  ; A trench MIDDLE in column 4
 $9464 DEFB $25,$08  ; A trench RIGHT in column 8
 $9466 DEFB $00,$1E  ; Land Space
 $9468 DEFB $94,$88  ; A large hut in column 8
 $946A DEFB $00,$1E  ; Land Space
 $946C DEFB $23,$14  ; A trench LHS in column 20
 $946E DEFB $24,$16  ; A trench MIDDLE in column 22
 $9470 DEFB $25,$1A  ; A trench RIGHT in column 26
 $9472 DEFB $00,$28  ; Land Space
 $9474 DEFB $94,$92  ; A large hut in column 18
 $9476 DEFB $00,$1E  ; Land Space
 $9478 DEFB $23,$00  ; A trench LHS in column 0
 $947A DEFB $24,$02  ; A trench MIDDLE in column 2
 $947C DEFB $24,$06  ; A trench MIDDLE in column 6
 $947E DEFB $25,$0A  ; A trench RIGHT in column 10
 $9480 DEFB $00,$1E  ; Land Space
 $9482 DEFB $11,$04  ; A quintuple grenade in column 4
 $9484 DEFB $00,$28  ; Land Space
 $9486 DEFB $09,$0B  ; A wall in column 11
 $9488 DEFB $09,$1F  ; A wall in column 31
 $948A DEFB $96,$0C  ; A tunnel in column 12
 $948C DEFB $00,$17  ; Land Space
 $948E DEFB $17,$1F  ; Draw Road on bridge
 $9490 DEFB $00,$0C  ; Land Space
 $9492 DEFB $08,$1F  ; A bridge section
 $9494 DEFB $00,$5A  ; Land Space
 $9496 DEFB $1A,$00  ; Truck
 $9498 DEFB $00,$1E  ; Land Space
 $949A DEFB $1B,$FF  ; Motorbike
 $949C DEFB $00,$05  ; Land Space
 $949E DEFB $22,$00  ; Spawn Point
 $94A0 DEFB $00,$28  ; Land Space
 $94A2 DEFB $1A,$00  ; Truck
 $94A4 DEFB $00,$23  ; Land Space
 $94A6 DEFB $1B,$FF  ; Motorbike
 $94A8 DEFB $00,$1E  ; Land Space
 $94AA DEFB $1C,$00  ; Jeep
 $94AC DEFB $00,$28  ; Land Space
 $94AE DEFB $1A,$00  ; Truck
 $94B0 DEFB $00,$3C  ; Land Space
 $94B2 DEFB $28,$1E  ; Start of NME with rocket launchers. Ferocity:30
 $94B4 DEFB $00,$28  ; Land Space
 $94B6 DEFB $1C,$00  ; Jeep
 $94B8 DEFB $28,$00  ; End of NME with rocket launchers
 $94BA DEFB $00,$05  ; Land Space
 $94BC DEFB $22,$00  ; Spawn Point
 $94BE DEFB $00,$3C  ; Land Space
 $94C0 DEFB $0F,$04  ; A single grenade in column 4
 $94C2 DEFB $00,$3C  ; Land Space
 $94C4 DEFB $8A,$02  ; Sandbags LHS in column 2
 $94C6 DEFB $8B,$04  ; Sandbags MIDDLE in column 4
 $94C8 DEFB $8C,$07  ; Sandbags RHS in column 7
 $94CA DEFB $8A,$17  ; Sandbags LHS in column 23
 $94CC DEFB $8B,$19  ; Sandbags MIDDLE in column 25
 $94CE DEFB $8C,$1C  ; Sandbags RHS in column 28
 $94D0 DEFB $00,$05  ; Land Space
 $94D2 DEFB $10,$0A  ; A triple grenade in column 10
 $94D4 DEFB $10,$13  ; A triple grenade in column 19
 $94D6 DEFB $00,$04  ; Land Space
 $94D8 DEFB $13,$1B  ; A right mortar in column 27
 $94DA DEFB $12,$03  ; A left mortar in column 3
 $94DC DEFB $00,$14  ; Land Space
 $94DE DEFB $09,$0B  ; A wall in column 11
 $94E0 DEFB $09,$1F  ; A wall in column 31
 $94E2 DEFB $21,$14  ; Fortress gates
 $94E4 DEFB $00,$16  ; Land Space
 $94E6 DEFB $22,$01  ; Spawn Point

; Level 4
b$94E8 DEFB $00,$46  ; Land Space
 $94EA DEFB $28,$46  ; Start of NME with rocket launchers. Ferocity:70
 $94EC DEFB $00,$14  ; Land Space
 $94EE DEFB $98,$10  ; A log crossing in column 16
 $94F0 DEFB $00,$02  ; Land Space
 $94F2 DEFB $0D,$08  ; Water
 $94F4 DEFB $00,$19  ; Land Space
 $94F6 DEFB $19,$08  ; Water Strip 1
 $94F8 DEFB $00,$05  ; Land Space
 $94FA DEFB $0E,$08  ; Water Strip 2
 $94FC DEFB $00,$19  ; Land Space
 $94FE DEFB $10,$19  ; A triple grenade in column 25
 $9500 DEFB $00,$19  ; Land Space
 $9502 DEFB $98,$08  ; A log crossing in column 8
 $9504 DEFB $00,$02  ; Land Space
 $9506 DEFB $0D,$10  ; Water
 $9508 DEFB $00,$19  ; Land Space
 $950A DEFB $19,$10  ; Water Strip 1
 $950C DEFB $00,$05  ; Land Space
 $950E DEFB $0E,$10  ; Water Strip 2
 $9510 DEFB $00,$3C  ; Land Space
 $9512 DEFB $98,$10  ; A log crossing in column 16
 $9514 DEFB $00,$02  ; Land Space
 $9516 DEFB $0D,$08  ; Water
 $9518 DEFB $00,$19  ; Land Space
 $951A DEFB $19,$08  ; Water Strip 1
 $951C DEFB $00,$05  ; Land Space
 $951E DEFB $0E,$08  ; Water Strip 2
 $9520 DEFB $00,$1E  ; Land Space
 $9522 DEFB $22,$00  ; Spawn Point
 $9524 DEFB $00,$14  ; Land Space
 $9526 DEFB $28,$46  ; Start of NME with rocket launchers. Ferocity:70
 $9528 DEFB $83,$02  ; A tree in column 2
 $952A DEFB $00,$23  ; Land Space
 $952C DEFB $83,$14  ; A tree in column 20
 $952E DEFB $00,$23  ; Land Space
 $9530 DEFB $05,$10  ; A road bottom edging in column 16
 $9532 DEFB $00,$13  ; Land Space
 $9534 DEFB $27,$01  ; Turn the alarm ON
 $9536 DEFB $8A,$01  ; Sandbags LHS in column 1
 $9538 DEFB $8B,$03  ; Sandbags MIDDLE in column 3
 $953A DEFB $8B,$06  ; Sandbags MIDDLE in column 6
 $953C DEFB $8C,$09  ; Sandbags RHS in column 9
 $953E DEFB $00,$1E  ; Land Space
 $9540 DEFB $04,$1B  ; A road marking in column 27
 $9542 DEFB $28,$14  ; Start of NME with rocket launchers. Ferocity:20
 $9544 DEFB $00,$0C  ; Land Space
 $9546 DEFB $05,$00  ; A road bottom edging in column 0
 $9548 DEFB $00,$0C  ; Land Space
 $954A DEFB $04,$15  ; A road marking in column 21
 $954C DEFB $11,$04  ; A quintuple grenade in column 4
 $954E DEFB $00,$06  ; Land Space
 $9550 DEFB $06,$10  ; A road top edging in column 16
 $9552 DEFB $00,$12  ; Land Space
 $9554 DEFB $04,$0F  ; A road marking in column 15
 $9556 DEFB $00,$18  ; Land Space
 $9558 DEFB $04,$09  ; A road marking in column 9
 $955A DEFB $00,$13  ; Land Space
 $955C DEFB $06,$00  ; A road top edging in column 0
 $955E DEFB $00,$05  ; Land Space
 $9560 DEFB $04,$03  ; A road marking in column 3
 $9562 DEFB $83,$14  ; A tree in column 20
 $9564 DEFB $00,$14  ; Land Space
 $9566 DEFB $83,$1B  ; A tree in column 27
 $9568 DEFB $00,$32  ; Land Space
 $956A DEFB $81,$1A  ; A bunker in column 26
 $956C DEFB $00,$1E  ; Land Space
 $956E DEFB $28,$00  ; End of NME with rocket launchers
 $9570 DEFB $00,$28  ; Land Space
 $9572 DEFB $87,$04  ; A boulder in column 4
 $9574 DEFB $00,$05  ; Land Space
 $9576 DEFB $22,$00  ; Spawn Point
 $9578 DEFB $00,$28  ; Land Space
 $957A DEFB $27,$01  ; Turn the alarm ON
 $957C DEFB $11,$19  ; A quintuple grenade in column 25
 $957E DEFB $00,$14  ; Land Space
 $9580 DEFB $8A,$14  ; Sandbags LHS in column 20
 $9582 DEFB $8B,$16  ; Sandbags MIDDLE in column 22
 $9584 DEFB $8C,$19  ; Sandbags RHS in column 25
 $9586 DEFB $00,$32  ; Land Space
 $9588 DEFB $27,$00  ; Turn the alarm OFF
 $958A DEFB $10,$04  ; A triple grenade in column 4
 $958C DEFB $00,$32  ; Land Space
 $958E DEFB $09,$0B  ; A wall in column 11
 $9590 DEFB $09,$1F  ; A wall in column 31
 $9592 DEFB $21,$14  ; Fortress gates
 $9594 DEFB $00,$1E  ; Land Space
 $9596 DEFB $22,$01  ; Spawn Point

; Level 5
b$9598 DEFB $00,$05  ; Land Space
 $959A DEFB $83,$05  ; A tree in column 5
 $959C DEFB $00,$05  ; Land Space
 $959E DEFB $83,$0B  ; A tree in column 11
 $95A0 DEFB $00,$1E  ; Land Space
 $95A2 DEFB $82,$80  ; A mirrored cliff in column 0
 $95A4 DEFB $26,$EC  ; A double cliff mirrored cliff edge in column 12 with
                     ; jumping soldiers
 $95A6 DEFB $82,$06  ; A cliff in column 6
 $95A8 DEFB $00,$1E  ; Land Space
 $95AA DEFB $82,$9A  ; A mirrored cliff in column 26
 $95AC DEFB $26,$59  ; A cliff edge in column 25 with jumping soldiers
 $95AE DEFB $00,$1E  ; Land Space
 $95B0 DEFB $83,$03  ; A tree in column 3
 $95B2 DEFB $00,$05  ; Land Space
 $95B4 DEFB $83,$07  ; A tree in column 7
 $95B6 DEFB $00,$14  ; Land Space
 $95B8 DEFB $26,$1F  ; A cliff edge in column 31
 $95BA DEFB $82,$80  ; A mirrored cliff in column 0
 $95BC DEFB $82,$06  ; A cliff in column 6
 $95BE DEFB $26,$EC  ; A double cliff mirrored cliff edge in column 12 with
                     ; jumping soldiers
 $95C0 DEFB $00,$3C  ; Land Space
 $95C2 DEFB $0F,$09  ; A single grenade in column 9
 $95C4 DEFB $83,$0C  ; A tree in column 12
 $95C6 DEFB $00,$08  ; Land Space
 $95C8 DEFB $83,$0A  ; A tree in column 10
 $95CA DEFB $00,$28  ; Land Space
 $95CC DEFB $82,$8A  ; A mirrored cliff in column 10
 $95CE DEFB $82,$10  ; A cliff in column 16
 $95D0 DEFB $26,$09  ; A cliff edge in column 9
 $95D2 DEFB $26,$96  ; A mirrored cliff edge in column 22
 $95D4 DEFB $00,$3C  ; Land Space
 $95D6 DEFB $82,$1A  ; A cliff in column 26
 $95D8 DEFB $82,$94  ; A mirrored cliff in column 20
 $95DA DEFB $26,$73  ; A double cliff cliff edge in column 19 with jumping
                     ; soldiers
 $95DC DEFB $00,$06  ; Land Space
 $95DE DEFB $82,$00  ; A cliff in column 0
 $95E0 DEFB $26,$C6  ; A mirrored cliff edge in column 6 with jumping soldiers
 $95E2 DEFB $00,$32  ; Land Space
 $95E4 DEFB $22,$00  ; Spawn Point
 $95E6 DEFB $00,$05  ; Land Space
 $95E8 DEFB $83,$0A  ; A tree in column 10
 $95EA DEFB $83,$0E  ; A tree in column 14
 $95EC DEFB $00,$08  ; Land Space
 $95EE DEFB $83,$0C  ; A tree in column 12
 $95F0 DEFB $00,$28  ; Land Space
 $95F2 DEFB $83,$14  ; A tree in column 20
 $95F4 DEFB $00,$03  ; Land Space
 $95F6 DEFB $83,$18  ; A tree in column 24
 $95F8 DEFB $00,$07  ; Land Space
 $95FA DEFB $83,$1B  ; A tree in column 27
 $95FC DEFB $00,$0A  ; Land Space
 $95FE DEFB $82,$80  ; A mirrored cliff in column 0
 $9600 DEFB $82,$06  ; A cliff in column 6
 $9602 DEFB $26,$EC  ; A double cliff mirrored cliff edge in column 12 with
                     ; jumping soldiers
 $9604 DEFB $00,$0F  ; Land Space
 $9606 DEFB $82,$1A  ; A cliff in column 26
 $9608 DEFB $82,$94  ; A mirrored cliff in column 20
 $960A DEFB $26,$73  ; A double cliff cliff edge in column 19 with jumping
                     ; soldiers
 $960C DEFB $00,$3C  ; Land Space
 $960E DEFB $11,$09  ; A quintuple grenade in column 9
 $9610 DEFB $00,$0E  ; Land Space
 $9612 DEFB $09,$0B  ; A wall in column 11
 $9614 DEFB $09,$1F  ; A wall in column 31
 $9616 DEFB $96,$0C  ; A tunnel in column 12
 $9618 DEFB $00,$17  ; Land Space
 $961A DEFB $17,$1F  ; Draw Road on bridge
 $961C DEFB $00,$01  ; Land Space
 $961E DEFB $1B,$3C  ; Motorbike
 $9620 DEFB $00,$0B  ; Land Space
 $9622 DEFB $08,$1F  ; A bridge section
 $9624 DEFB $00,$28  ; Land Space
 $9626 DEFB $87,$0E  ; A boulder in column 14
 $9628 DEFB $00,$1E  ; Land Space
 $962A DEFB $87,$04  ; A boulder in column 4
 $962C DEFB $00,$28  ; Land Space
 $962E DEFB $22,$00  ; Spawn Point
 $9630 DEFB $00,$05  ; Land Space
 $9632 DEFB $8A,$18  ; Sandbags LHS in column 24
 $9634 DEFB $8B,$1A  ; Sandbags MIDDLE in column 26
 $9636 DEFB $8B,$1D  ; Sandbags MIDDLE in column 29
 $9638 DEFB $00,$05  ; Land Space
 $963A DEFB $87,$06  ; A boulder in column 6
 $963C DEFB $00,$14  ; Land Space
 $963E DEFB $87,$19  ; A boulder in column 25
 $9640 DEFB $00,$0F  ; Land Space
 $9642 DEFB $87,$10  ; A boulder in column 16
 $9644 DEFB $00,$1E  ; Land Space
 $9646 DEFB $87,$16  ; A boulder in column 22
 $9648 DEFB $8B,$00  ; Sandbags MIDDLE in column 0
 $964A DEFB $8C,$03  ; Sandbags RHS in column 3
 $964C DEFB $00,$22  ; Land Space
 $964E DEFB $87,$02  ; A boulder in column 2
 $9650 DEFB $00,$18  ; Land Space
 $9652 DEFB $87,$0B  ; A boulder in column 11
 $9654 DEFB $00,$14  ; Land Space
 $9656 DEFB $87,$12  ; A boulder in column 18
 $9658 DEFB $00,$08  ; Land Space
 $965A DEFB $82,$80  ; A mirrored cliff in column 0
 $965C DEFB $82,$06  ; A cliff in column 6
 $965E DEFB $26,$EC  ; A double cliff mirrored cliff edge in column 12 with
                     ; jumping soldiers
 $9660 DEFB $00,$14  ; Land Space
 $9662 DEFB $87,$19  ; A boulder in column 25
 $9664 DEFB $00,$1E  ; Land Space
 $9666 DEFB $8A,$0F  ; Sandbags LHS in column 15
 $9668 DEFB $8B,$11  ; Sandbags MIDDLE in column 17
 $966A DEFB $8C,$14  ; Sandbags RHS in column 20
 $966C DEFB $00,$3C  ; Land Space
 $966E DEFB $28,$1E  ; Start of NME with rocket launchers. Ferocity:30
 $9670 DEFB $23,$0A  ; A trench LHS in column 10
 $9672 DEFB $24,$0C  ; A trench MIDDLE in column 12
 $9674 DEFB $24,$10  ; A trench MIDDLE in column 16
 $9676 DEFB $25,$14  ; A trench RIGHT in column 20
 $9678 DEFB $00,$14  ; Land Space
 $967A DEFB $25,$0A  ; A trench RIGHT in column 10
 $967C DEFB $24,$06  ; A trench MIDDLE in column 6
 $967E DEFB $23,$04  ; A trench LHS in column 4
 $9680 DEFB $23,$14  ; A trench LHS in column 20
 $9682 DEFB $24,$16  ; A trench MIDDLE in column 22
 $9684 DEFB $25,$1A  ; A trench RIGHT in column 26
 $9686 DEFB $00,$0F  ; Land Space
 $9688 DEFB $28,$00  ; End of NME with rocket launchers
 $968A DEFB $09,$0B  ; A wall in column 11
 $968C DEFB $09,$1F  ; A wall in column 31
 $968E DEFB $21,$14  ; Fortress gates
 $9690 DEFB $00,$16  ; Land Space
 $9692 DEFB $22,$01  ; Spawn Point

; Level 6
b$9694 DEFB $00,$28  ; Land Space
 $9696 DEFB $81,$00  ; A bunker in column 0
 $9698 DEFB $00,$32  ; Land Space
 $969A DEFB $81,$1A  ; A bunker in column 26
 $969C DEFB $00,$32  ; Land Space
 $969E DEFB $81,$00  ; A bunker in column 0
 $96A0 DEFB $00,$28  ; Land Space
 $96A2 DEFB $81,$1A  ; A bunker in column 26
 $96A4 DEFB $00,$32  ; Land Space
 $96A6 DEFB $1F,$1A  ; A cave bottom edge in column 26
 $96A8 DEFB $1F,$00  ; A cave bottom edge in column 0
 $96AA DEFB $00,$03  ; Land Space
 $96AC DEFB $1E,$1A  ; A cave main in column 26
 $96AE DEFB $1E,$00  ; A cave main in column 0
 $96B0 DEFB $00,$13  ; Land Space
 $96B2 DEFB $11,$07  ; A quintuple grenade in column 7
 $96B4 DEFB $1E,$1A  ; A cave main in column 26
 $96B6 DEFB $1E,$00  ; A cave main in column 0
 $96B8 DEFB $00,$13  ; Land Space
 $96BA DEFB $1E,$1A  ; A cave main in column 26
 $96BC DEFB $1E,$00  ; A cave main in column 0
 $96BE DEFB $00,$13  ; Land Space
 $96C0 DEFB $10,$16  ; A triple grenade in column 22
 $96C2 DEFB $1E,$1A  ; A cave main in column 26
 $96C4 DEFB $1E,$00  ; A cave main in column 0
 $96C6 DEFB $00,$13  ; Land Space
 $96C8 DEFB $1E,$1A  ; A cave main in column 26
 $96CA DEFB $1E,$00  ; A cave main in column 0
 $96CC DEFB $00,$13  ; Land Space
 $96CE DEFB $1E,$1A  ; A cave main in column 26
 $96D0 DEFB $1E,$00  ; A cave main in column 0
 $96D2 DEFB $00,$13  ; Land Space
 $96D4 DEFB $1D,$00  ; A cave top edge in column 0
 $96D6 DEFB $1D,$1A  ; A cave top edge in column 26
 $96D8 DEFB $00,$23  ; Land Space
 $96DA DEFB $09,$0B  ; A wall in column 11
 $96DC DEFB $09,$1F  ; A wall in column 31
 $96DE DEFB $96,$0C  ; A tunnel in column 12
 $96E0 DEFB $00,$17  ; Land Space
 $96E2 DEFB $17,$1F  ; Draw Road on bridge
 $96E4 DEFB $00,$0C  ; Land Space
 $96E6 DEFB $08,$1F  ; A bridge section
 $96E8 DEFB $00,$3C  ; Land Space
 $96EA DEFB $25,$00  ; A trench RIGHT in column 0
 $96EC DEFB $00,$1E  ; Land Space
 $96EE DEFB $22,$00  ; Spawn Point
 $96F0 DEFB $00,$05  ; Land Space
 $96F2 DEFB $24,$1C  ; A trench MIDDLE in column 28
 $96F4 DEFB $23,$1A  ; A trench LHS in column 26
 $96F6 DEFB $00,$21  ; Land Space
 $96F8 DEFB $24,$00  ; A trench MIDDLE in column 0
 $96FA DEFB $24,$04  ; A trench MIDDLE in column 4
 $96FC DEFB $25,$08  ; A trench RIGHT in column 8
 $96FE DEFB $00,$19  ; Land Space
 $9700 DEFB $23,$10  ; A trench LHS in column 16
 $9702 DEFB $24,$12  ; A trench MIDDLE in column 18
 $9704 DEFB $24,$16  ; A trench MIDDLE in column 22
 $9706 DEFB $28,$14  ; Start of NME with rocket launchers. Ferocity:20
 $9708 DEFB $24,$1A  ; A trench MIDDLE in column 26
 $970A DEFB $25,$1E  ; A trench RIGHT in column 30
 $970C DEFB $00,$0A  ; Land Space
 $970E DEFB $11,$04  ; A quintuple grenade in column 4
 $9710 DEFB $00,$0E  ; Land Space
 $9712 DEFB $98,$10  ; A log crossing in column 16
 $9714 DEFB $00,$02  ; Land Space
 $9716 DEFB $0D,$08  ; Water
 $9718 DEFB $00,$19  ; Land Space
 $971A DEFB $19,$08  ; Water Strip 1
 $971C DEFB $00,$05  ; Land Space
 $971E DEFB $0E,$08  ; Water Strip 2
 $9720 DEFB $00,$14  ; Land Space
 $9722 DEFB $28,$00  ; End of NME with rocket launchers
 $9724 DEFB $23,$0A  ; A trench LHS in column 10
 $9726 DEFB $24,$0C  ; A trench MIDDLE in column 12
 $9728 DEFB $24,$10  ; A trench MIDDLE in column 16
 $972A DEFB $24,$14  ; A trench MIDDLE in column 20
 $972C DEFB $25,$18  ; A trench RIGHT in column 24
 $972E DEFB $00,$28  ; Land Space
 $9730 DEFB $24,$00  ; A trench MIDDLE in column 0
 $9732 DEFB $24,$04  ; A trench MIDDLE in column 4
 $9734 DEFB $24,$08  ; A trench MIDDLE in column 8
 $9736 DEFB $25,$0C  ; A trench RIGHT in column 12
 $9738 DEFB $00,$1E  ; Land Space
 $973A DEFB $23,$12  ; A trench LHS in column 18
 $973C DEFB $24,$14  ; A trench MIDDLE in column 20
 $973E DEFB $25,$18  ; A trench RIGHT in column 24
 $9740 DEFB $00,$05  ; Land Space
 $9742 DEFB $22,$00  ; Spawn Point
 $9744 DEFB $00,$32  ; Land Space
 $9746 DEFB $23,$14  ; A trench LHS in column 20
 $9748 DEFB $24,$16  ; A trench MIDDLE in column 22
 $974A DEFB $25,$1A  ; A trench RIGHT in column 26
 $974C DEFB $00,$0E  ; Land Space
 $974E DEFB $10,$16  ; A triple grenade in column 22
 $9750 DEFB $28,$19  ; Start of NME with rocket launchers. Ferocity:25
 $9752 DEFB $00,$1E  ; Land Space
 $9754 DEFB $98,$08  ; A log crossing in column 8
 $9756 DEFB $00,$02  ; Land Space
 $9758 DEFB $0D,$10  ; Water
 $975A DEFB $00,$19  ; Land Space
 $975C DEFB $19,$10  ; Water Strip 1
 $975E DEFB $00,$05  ; Land Space
 $9760 DEFB $0E,$10  ; Water Strip 2
 $9762 DEFB $00,$19  ; Land Space
 $9764 DEFB $23,$06  ; A trench LHS in column 6
 $9766 DEFB $24,$08  ; A trench MIDDLE in column 8
 $9768 DEFB $24,$0C  ; A trench MIDDLE in column 12
 $976A DEFB $25,$10  ; A trench RIGHT in column 16
 $976C DEFB $00,$14  ; Land Space
 $976E DEFB $23,$10  ; A trench LHS in column 16
 $9770 DEFB $24,$12  ; A trench MIDDLE in column 18
 $9772 DEFB $28,$00  ; End of NME with rocket launchers
 $9774 DEFB $24,$16  ; A trench MIDDLE in column 22
 $9776 DEFB $25,$1A  ; A trench RIGHT in column 26
 $9778 DEFB $00,$0F  ; Land Space
 $977A DEFB $24,$00  ; A trench MIDDLE in column 0
 $977C DEFB $24,$04  ; A trench MIDDLE in column 4
 $977E DEFB $24,$08  ; A trench MIDDLE in column 8
 $9780 DEFB $25,$0C  ; A trench RIGHT in column 12
 $9782 DEFB $00,$0F  ; Land Space
 $9784 DEFB $09,$0B  ; A wall in column 11
 $9786 DEFB $09,$1F  ; A wall in column 31
 $9788 DEFB $21,$14  ; Fortress gates
 $978A DEFB $00,$16  ; Land Space
 $978C DEFB $22,$01  ; Spawn Point

; Level 7
b$978E DEFB $00,$1E  ; Land Space
 $9790 DEFB $94,$00  ; A small hut in column 0
 $9792 DEFB $94,$14  ; A small hut in column 20
 $9794 DEFB $94,$1A  ; A small hut in column 26
 $9796 DEFB $00,$32  ; Land Space
 $9798 DEFB $94,$00  ; A small hut in column 0
 $979A DEFB $94,$06  ; A small hut in column 6
 $979C DEFB $94,$0C  ; A small hut in column 12
 $979E DEFB $00,$1E  ; Land Space
 $97A0 DEFB $94,$00  ; A small hut in column 0
 $97A2 DEFB $94,$14  ; A small hut in column 20
 $97A4 DEFB $94,$1A  ; A small hut in column 26
 $97A6 DEFB $00,$28  ; Land Space
 $97A8 DEFB $94,$00  ; A small hut in column 0
 $97AA DEFB $94,$06  ; A small hut in column 6
 $97AC DEFB $94,$0C  ; A small hut in column 12
 $97AE DEFB $00,$3C  ; Land Space
 $97B0 DEFB $94,$00  ; A small hut in column 0
 $97B2 DEFB $94,$06  ; A small hut in column 6
 $97B4 DEFB $94,$12  ; A small hut in column 18
 $97B6 DEFB $00,$28  ; Land Space
 $97B8 DEFB $94,$0A  ; A small hut in column 10
 $97BA DEFB $94,$10  ; A small hut in column 16
 $97BC DEFB $00,$05  ; Land Space
 $97BE DEFB $22,$00  ; Spawn Point
 $97C0 DEFB $00,$32  ; Land Space
 $97C2 DEFB $94,$00  ; A small hut in column 0
 $97C4 DEFB $94,$1A  ; A small hut in column 26
 $97C6 DEFB $00,$1E  ; Land Space
 $97C8 DEFB $94,$0D  ; A small hut in column 13
 $97CA DEFB $00,$3C  ; Land Space
 $97CC DEFB $12,$03  ; A left mortar in column 3
 $97CE DEFB $00,$02  ; Land Space
 $97D0 DEFB $11,$1A  ; A quintuple grenade in column 26
 $97D2 DEFB $00,$0F  ; Land Space
 $97D4 DEFB $09,$0B  ; A wall in column 11
 $97D6 DEFB $09,$1F  ; A wall in column 31
 $97D8 DEFB $96,$0C  ; A tunnel in column 12
 $97DA DEFB $00,$17  ; Land Space
 $97DC DEFB $17,$1F  ; Draw Road on bridge
 $97DE DEFB $00,$0C  ; Land Space
 $97E0 DEFB $08,$1F  ; A bridge section
 $97E2 DEFB $00,$3C  ; Land Space
 $97E4 DEFB $1A,$00  ; Truck
 $97E6 DEFB $00,$28  ; Land Space
 $97E8 DEFB $22,$00  ; Spawn Point
 $97EA DEFB $00,$3C  ; Land Space
 $97EC DEFB $28,$28  ; Start of NME with rocket launchers. Ferocity:40
 $97EE DEFB $11,$04  ; A quintuple grenade in column 4
 $97F0 DEFB $00,$1E  ; Land Space
 $97F2 DEFB $1C,$00  ; Jeep
 $97F4 DEFB $00,$50  ; Land Space
 $97F6 DEFB $28,$0C  ; Start of NME with rocket launchers. Ferocity:12
 $97F8 DEFB $00,$32  ; Land Space
 $97FA DEFB $11,$03  ; A quintuple grenade in column 3
 $97FC DEFB $00,$64  ; Land Space
 $97FE DEFB $0F,$19  ; A single grenade in column 25
 $9800 DEFB $00,$05  ; Land Space
 $9802 DEFB $22,$00  ; Spawn Point
 $9804 DEFB $00,$05  ; Land Space
 $9806 DEFB $28,$0C  ; Start of NME with rocket launchers. Ferocity:12
 $9808 DEFB $00,$78  ; Land Space
 $980A DEFB $28,$00  ; End of NME with rocket launchers
 $980C DEFB $00,$1E  ; Land Space
 $980E DEFB $09,$0B  ; A wall in column 11
 $9810 DEFB $09,$1F  ; A wall in column 31
 $9812 DEFB $21,$14  ; Fortress gates
 $9814 DEFB $00,$16  ; Land Space
 $9816 DEFB $22,$01  ; Spawn Point

; Level 8
b$9818 DEFB $00,$3C  ; Land Space
 $981A DEFB $8A,$07  ; Sandbags LHS in column 7
 $981C DEFB $8B,$09  ; Sandbags MIDDLE in column 9
 $981E DEFB $8B,$0C  ; Sandbags MIDDLE in column 12
 $9820 DEFB $8C,$0F  ; Sandbags RHS in column 15
 $9822 DEFB $00,$28  ; Land Space
 $9824 DEFB $98,$08  ; A log crossing in column 8
 $9826 DEFB $00,$02  ; Land Space
 $9828 DEFB $0D,$10  ; Water
 $982A DEFB $00,$19  ; Land Space
 $982C DEFB $19,$10  ; Water Strip 1
 $982E DEFB $00,$05  ; Land Space
 $9830 DEFB $0E,$10  ; Water Strip 2
 $9832 DEFB $00,$0F  ; Land Space
 $9834 DEFB $98,$10  ; A log crossing in column 16
 $9836 DEFB $00,$02  ; Land Space
 $9838 DEFB $0D,$08  ; Water
 $983A DEFB $00,$19  ; Land Space
 $983C DEFB $19,$08  ; Water Strip 1
 $983E DEFB $00,$05  ; Land Space
 $9840 DEFB $0E,$08  ; Water Strip 2
 $9842 DEFB $00,$1E  ; Land Space
 $9844 DEFB $8B,$00  ; Sandbags MIDDLE in column 0
 $9846 DEFB $8B,$03  ; Sandbags MIDDLE in column 3
 $9848 DEFB $8C,$06  ; Sandbags RHS in column 6
 $984A DEFB $8B,$1D  ; Sandbags MIDDLE in column 29
 $984C DEFB $8A,$1B  ; Sandbags LHS in column 27
 $984E DEFB $00,$28  ; Land Space
 $9850 DEFB $95,$00  ; A barracks in column 0
 $9852 DEFB $00,$28  ; Land Space
 $9854 DEFB $1B,$FF  ; Motorbike
 $9856 DEFB $00,$0A  ; Land Space
 $9858 DEFB $10,$14  ; A triple grenade in column 20
 $985A DEFB $00,$14  ; Land Space
 $985C DEFB $1B,$FF  ; Motorbike
 $985E DEFB $00,$05  ; Land Space
 $9860 DEFB $22,$00  ; Spawn Point
 $9862 DEFB $00,$1E  ; Land Space
 $9864 DEFB $11,$15  ; A quintuple grenade in column 21
 $9866 DEFB $00,$05  ; Land Space
 $9868 DEFB $83,$02  ; A tree in column 2
 $986A DEFB $00,$23  ; Land Space
 $986C DEFB $83,$14  ; A tree in column 20
 $986E DEFB $00,$23  ; Land Space
 $9870 DEFB $05,$10  ; A road bottom edging in column 16
 $9872 DEFB $00,$13  ; Land Space
 $9874 DEFB $27,$01  ; Turn the alarm ON
 $9876 DEFB $8B,$00  ; Sandbags MIDDLE in column 0
 $9878 DEFB $8B,$03  ; Sandbags MIDDLE in column 3
 $987A DEFB $8C,$06  ; Sandbags RHS in column 6
 $987C DEFB $00,$0A  ; Land Space
 $987E DEFB $12,$02  ; A left mortar in column 2
 $9880 DEFB $00,$13  ; Land Space
 $9882 DEFB $04,$1B  ; A road marking in column 27
 $9884 DEFB $28,$14  ; Start of NME with rocket launchers. Ferocity:20
 $9886 DEFB $00,$0C  ; Land Space
 $9888 DEFB $05,$00  ; A road bottom edging in column 0
 $988A DEFB $00,$0C  ; Land Space
 $988C DEFB $04,$15  ; A road marking in column 21
 $988E DEFB $00,$06  ; Land Space
 $9890 DEFB $06,$10  ; A road top edging in column 16
 $9892 DEFB $00,$12  ; Land Space
 $9894 DEFB $04,$0F  ; A road marking in column 15
 $9896 DEFB $00,$18  ; Land Space
 $9898 DEFB $04,$09  ; A road marking in column 9
 $989A DEFB $00,$13  ; Land Space
 $989C DEFB $06,$00  ; A road top edging in column 0
 $989E DEFB $00,$05  ; Land Space
 $98A0 DEFB $04,$03  ; A road marking in column 3
 $98A2 DEFB $11,$19  ; A quintuple grenade in column 25
 $98A4 DEFB $00,$28  ; Land Space
 $98A6 DEFB $10,$06  ; A triple grenade in column 6
 $98A8 DEFB $00,$14  ; Land Space
 $98AA DEFB $95,$00  ; A barracks in column 0
 $98AC DEFB $00,$3C  ; Land Space
 $98AE DEFB $0F,$0A  ; A single grenade in column 10
 $98B0 DEFB $00,$05  ; Land Space
 $98B2 DEFB $22,$00  ; Spawn Point
 $98B4 DEFB $00,$05  ; Land Space
 $98B6 DEFB $27,$01  ; Turn the alarm ON
 $98B8 DEFB $28,$14  ; Start of NME with rocket launchers. Ferocity:20
 $98BA DEFB $00,$82  ; Land Space
 $98BC DEFB $10,$04  ; A triple grenade in column 4
 $98BE DEFB $28,$00  ; End of NME with rocket launchers
 $98C0 DEFB $27,$00  ; Turn the alarm OFF
 $98C2 DEFB $00,$32  ; Land Space
 $98C4 DEFB $09,$0B  ; A wall in column 11
 $98C6 DEFB $09,$1F  ; A wall in column 31
 $98C8 DEFB $21,$14  ; Fortress gates
 $98CA DEFB $00,$1E  ; Land Space
 $98CC DEFB $22,$01  ; Spawn Point
 $98CE DEFB $FF      ; End of levels marker
 $98CF DEFB $07

; -> $9922
;
; Used by the routines at #R$6CAE, #R$806B, #R$DD8D and #R$F5DD.
c$98D0 JP $9922      ;

; -> $98EA - HL = HL + A
;
; Used by the routines at #R$6E7B, #R$6ECD, #R$6FF5, #R$7547, #R$7637, #R$87F1
; and #R$90AC.
c$98D3 JP $98EA      ;

; -> $98F0 - (HL) -> HL
;
; Used by the routines at #R$6A1E, #R$7547 and #R$7637.
c$98D6 JP $98F0      ;

; -> $98F5
;
; Used by the routines at #R$6896, #R$6B4C, #R$6F79, #R$70BD, #R$7637, #R$DD8D,
; #R$F582 and #R$F5A0.
c$98D9 JP $98F5      ;

; -> $9904 - DOWN HL
;
; Used by the routines at #R$68CA, #R$6AE1, #R$6B4C, #R$70BD, #R$7637 and
; #R$7A45.
c$98DC JP $9904      ;

; Routine at 98DF
c$98DF JP $9913      ;

; Offsets in $A000 sprites block, lo byte
b$98E2 DEFB $00,$1E,$40,$5E,$80,$9E,$C0,$DE

; HL = HL + A
;
; Used by the routine at #R$98D3.
c$98EA ADD A,L       ;
 $98EB LD L,A        ;
 $98EC ADC A,H       ;
 $98ED SUB L         ;
 $98EE LD H,A        ;
 $98EF RET           ;

; (HL) -> HL
;
; Used by the routine at #R$98D6.
c$98F0 LD A,(HL)     ;
 $98F1 INC HL        ;
 $98F2 LD H,(HL)     ;
 $98F3 LD L,A        ;
 $98F4 RET           ;

; Routine at 98F5
;
; Used by the routine at #R$98D9.
c$98F5 LD A,L        ;
 $98F6 SRL A         ;
 $98F8 SRL A         ;
 $98FA LD L,H        ;
 $98FB SLA L         ;
 $98FD LD H,$FE      ; $FE00 - table of even screen lines addresses
 $98FF ADD A,(HL)    ;
 $9900 INC L         ;
 $9901 LD H,(HL)     ;
 $9902 LD L,A        ;
 $9903 RET           ;

; DOWN HL - move HL to the next screen line
;
; Used by the routine at #R$98DC.
c$9904 INC H         ;
 $9905 LD A,H        ;
 $9906 AND $07       ;
 $9908 RET NZ        ;
 $9909 LD A,L        ;
 $990A ADD A,$20     ;
 $990C LD L,A        ;
 $990D RET C         ;
 $990E LD A,H        ;
 $990F SUB $08       ;
 $9911 LD H,A        ;
 $9912 RET           ;

; Data block at 9913
;
; Used by the routine at #R$98DF.
b$9913 DEFB $7C,$25,$E6,$07,$C0,$7D,$D6,$20
 $991B DEFB $6F,$D8,$7C,$C6,$08,$67,$C9

; Routine at 9922
;
; Used by the routine at #R$98D0.
c$9922 SET 5,(IX+$0B) ;
 $9926 LD D,(IX+$04)  ;
 $9929 LD E,(IX+$00)  ;
 $992C LD (IX+$00),D  ;
 $992F LD A,D         ;
 $9930 ADD A,$02      ;
 $9932 CP $22         ;
 $9934 JR C,$993E     ;
 $9936 LD A,E         ;
 $9937 ADD A,$02      ;
 $9939 CP $22         ;
 $993B JP NC,$9FDE    ;
*$993E LD B,(IX+$05)  ;
 $9941 LD C,(IX+$01)  ;
 $9944 LD A,(IX+$08)  ;
 $9947 SUB (IX+$0A)   ;
 $994A CP B           ;
 $994B JP M,$9952     ;
 $994E CP C           ;
 $994F JP P,$9FE2     ;
*$9952 LD A,(IX+$09)  ;
 $9955 CP B           ;
 $9956 JP P,$995D     ;
 $9959 CP C           ;
 $995A JP M,$9FDE     ;
*$995D EXX            ;
 $995E LD A,(IX+$02)  ;
 $9961 ADD A,A        ;
 $9962 ADD A,$E2      ; lo byte of $98E2
 $9964 BIT 2,(IX+$0B) ;
 $9968 JR Z,$996B     ;
 $996A INC A          ;
*$996B LD L,A         ;
 $996C LD H,$98       ;
 $996E LD L,(HL)      ;
 $996F LD A,(IX+$03)  ;
 $9972 ADD A,$A0      ;
 $9974 LD H,A         ;
 $9975 EXX            ;
 $9976 LD A,(IX+$06)  ;
 $9979 LD (IX+$02),A  ;
 $997C ADD A,A        ;
 $997D ADD A,$E2      ;
 $997F BIT 2,(IX+$0B) ;
 $9983 JR Z,$9986     ;
 $9985 INC A          ;
*$9986 LD L,A         ;
 $9987 LD H,$98       ;
 $9989 LD L,(HL)      ;
 $998A LD A,(IX+$07)  ;
 $998D LD (IX+$03),A  ;
 $9990 ADD A,$A0      ;
 $9992 LD H,A         ;
 $9993 LD A,D         ;
 $9994 CP $1E         ;
 $9996 JP NC,$9B61    ;
 $9999 LD A,E         ;
 $999A CP $1E         ;
 $999C JP NC,$9B61    ;
 $999F LD A,(IX+$08)  ;
 $99A2 DEC A          ;
 $99A3 CP B           ;
 $99A4 JP P,$9F1D     ;
 $99A7 CP C           ;
 $99A8 JP P,$9F1D     ;
 $99AB PUSH HL        ;
 $99AC LD H,(IX+$01)  ;
 $99AF LD A,(IX+$05)  ;
 $99B2 CP H           ;
 $99B3 JR NC,$99B6    ;
 $99B5 LD H,A         ;
*$99B6 LD A,(IX+$09)  ;
 $99B9 SUB H          ;
 $99BA INC A          ;
 $99BB EX AF,AF'      ;
 $99BC LD A,D         ;
 $99BD LD L,H         ;
 $99BE SLA L          ;
 $99C0 LD H,$FE       ; $FE00 - table of even screen lines addresses
 $99C2 ADD A,(HL)     ;
 $99C3 INC L          ;
 $99C4 LD H,(HL)      ;
 $99C5 LD L,A         ;
 $99C6 LD A,D         ;
 $99C7 SUB E          ;
 $99C8 EX DE,HL       ;
 $99C9 POP HL         ;
 $99CA EXX            ;
 $99CB EX AF,AF'      ;
 $99CC LD E,A         ;
 $99CD OR A           ;
 $99CE EX AF,AF'      ;
 $99CF LD ($FD82),SP  ;
 $99D3 LD SP,HL       ;
 $99D4 LD A,(IX+$01)  ;
 $99D7 LD C,$00       ;
 $99D9 JP C,$9AE6     ;
 $99DC JP NZ,$9A6E    ;
 $99DF SUB (IX+$05)   ;
 $99E2 JR Z,$99F3     ;
 $99E4 LD HL,$99F3    ;
 $99E7 LD B,A         ;
 $99E8 LD C,A         ;
 $99E9 JP NC,$9EDF    ;
 $99EC NEG            ;
 $99EE LD B,A         ;
 $99EF LD C,A         ;
 $99F0 JP $9E98       ;
*$99F3 LD A,(IX+$0A)  ;
 $99F6 SUB C          ;
 $99F7 LD B,A         ;
 $99F8 LD HL,$9A46    ;
*$99FB EXX            ;
 $99FC POP BC         ;
 $99FD LD A,(DE)      ;
 $99FE CPL            ;
 $99FF OR C           ;
 $9A00 CPL            ;
 $9A01 OR (HL)        ;
 $9A02 LD (DE),A      ;
 $9A03 INC L          ;
 $9A04 INC E          ;
 $9A05 LD A,(DE)      ;
 $9A06 CPL            ;
 $9A07 OR B           ;
 $9A08 CPL            ;
 $9A09 OR (HL)        ;
 $9A0A LD (DE),A      ;
 $9A0B INC L          ;
 $9A0C INC E          ;
 $9A0D POP BC         ;
 $9A0E LD A,(DE)      ;
 $9A0F CPL            ;
 $9A10 OR C           ;
 $9A11 CPL            ;
 $9A12 OR (HL)        ;
 $9A13 LD (DE),A      ;
 $9A14 INC L          ;
 $9A15 INC D          ;
 $9A16 LD A,(DE)      ;
 $9A17 CPL            ;
 $9A18 OR B           ;
 $9A19 CPL            ;
 $9A1A OR (HL)        ;
 $9A1B LD (DE),A      ;
 $9A1C INC L          ;
 $9A1D DEC E          ;
 $9A1E POP BC         ;
 $9A1F LD A,(DE)      ;
 $9A20 CPL            ;
 $9A21 OR C           ;
 $9A22 CPL            ;
 $9A23 OR (HL)        ;
 $9A24 LD (DE),A      ;
 $9A25 INC L          ;
 $9A26 DEC E          ;
 $9A27 LD A,(DE)      ;
 $9A28 CPL            ;
 $9A29 OR B           ;
 $9A2A CPL            ;
 $9A2B OR (HL)        ;
 $9A2C LD (DE),A      ;
 $9A2D INC L          ;
 $9A2E INC D          ;
 $9A2F LD A,D         ;
 $9A30 AND $07        ;
 $9A32 JR NZ,$9A3E    ;
 $9A34 LD A,E         ;
 $9A35 ADD A,$20      ;
 $9A37 LD E,A         ;
 $9A38 JR C,$9A3E     ;
 $9A3A LD A,D         ;
 $9A3B SUB $08        ;
 $9A3D LD D,A         ;
*$9A3E EXX            ;
 $9A3F DEC E          ;
 $9A40 JP Z,$9FF5     ;
 $9A43 DJNZ $99FB     ;
 $9A45 JP (HL)        ;

; Routine at 9A46
c$9A46 EXX           ;
 $9A47 EX AF,AF'     ;
 $9A48 LD A,E        ;
 $9A49 ADC A,$00     ;
 $9A4B LD E,A        ;
 $9A4C EXX           ;
 $9A4D LD A,(IX+$05) ;
 $9A50 LD L,(IX+$01) ;
 $9A53 SUB L         ;
 $9A54 JR Z,$9A63    ;
 $9A56 LD HL,$9A63   ;
 $9A59 LD B,A        ;
 $9A5A JP NC,$9EDF   ;
 $9A5D NEG           ;
 $9A5F LD B,A        ;
 $9A60 JP $9E98      ;
; This entry point is used by the routines at #R$9E98 and #R$9EDF.
*$9A63 LD A,(IX+$05) ;
 $9A66 LD (IX+$01),A ;
 $9A69 LD SP,($FD82) ;
 $9A6D RET           ;

; Routine at 9A6E
;
; Used by the routine at #R$9922.
c$9A6E SUB (IX+$05)  ;
 $9A71 JR Z,$9A8A    ;
 $9A73 LD HL,$9A8A   ;
 $9A76 LD B,A        ;
 $9A77 LD C,A        ;
 $9A78 JP NC,$9EDF   ;
 $9A7B EXX           ;
 $9A7C DEC E         ;
 $9A7D EXX           ;
 $9A7E LD HL,$9A8D   ;
 $9A81 NEG           ;
 $9A83 LD B,A        ;
 $9A84 LD C,A        ;
 $9A85 SCF           ;
 $9A86 EX AF,AF'     ;
 $9A87 JP $9E98      ;
*$9A8A EXX           ;
 $9A8B DEC E         ;
 $9A8C EXX           ;
 $9A8D LD A,(IX+$0A) ;
 $9A90 SUB C         ;
 $9A91 LD B,A        ;
 $9A92 LD HL,$9A46   ;
*$9A95 EXX           ;
 $9A96 POP BC        ;
 $9A97 LD A,(DE)     ;
 $9A98 CPL           ;
 $9A99 OR C          ;
 $9A9A CPL           ;
 $9A9B LD (DE),A     ;
 $9A9C INC E         ;
 $9A9D LD A,(DE)     ;
 $9A9E CPL           ;
 $9A9F OR B          ;
 $9AA0 CPL           ;
 $9AA1 OR (HL)       ;
 $9AA2 LD (DE),A     ;
 $9AA3 INC L         ;
 $9AA4 INC E         ;
 $9AA5 POP BC        ;
 $9AA6 LD A,(DE)     ;
 $9AA7 CPL           ;
 $9AA8 OR C          ;
 $9AA9 CPL           ;
 $9AAA OR (HL)       ;
 $9AAB LD (DE),A     ;
 $9AAC INC L         ;
 $9AAD INC E         ;
 $9AAE LD A,(DE)     ;
 $9AAF OR (HL)       ;
 $9AB0 LD (DE),A     ;
 $9AB1 INC L         ;
 $9AB2 INC D         ;
 $9AB3 LD A,(DE)     ;
 $9AB4 OR (HL)       ;
 $9AB5 LD (DE),A     ;
 $9AB6 INC L         ;
 $9AB7 DEC E         ;
 $9AB8 LD A,(DE)     ;
 $9AB9 CPL           ;
 $9ABA OR B          ;
 $9ABB CPL           ;
 $9ABC OR (HL)       ;
 $9ABD LD (DE),A     ;
 $9ABE INC L         ;
 $9ABF DEC E         ;
 $9AC0 POP BC        ;
 $9AC1 LD A,(DE)     ;
 $9AC2 CPL           ;
 $9AC3 OR C          ;
 $9AC4 CPL           ;
 $9AC5 OR (HL)       ;
 $9AC6 LD (DE),A     ;
 $9AC7 INC L         ;
 $9AC8 DEC E         ;
 $9AC9 LD A,(DE)     ;
 $9ACA CPL           ;
 $9ACB OR B          ;
 $9ACC CPL           ;
 $9ACD LD (DE),A     ;
 $9ACE INC D         ;
 $9ACF LD A,D        ;
 $9AD0 AND $07       ;
 $9AD2 JR NZ,$9ADE   ;
 $9AD4 LD A,E        ;
 $9AD5 ADD A,$20     ;
 $9AD7 LD E,A        ;
 $9AD8 JR C,$9ADE    ;
 $9ADA LD A,D        ;
 $9ADB SUB $08       ;
 $9ADD LD D,A        ;
*$9ADE EXX           ;
 $9ADF DEC E         ;
 $9AE0 JP Z,$9FF5    ;
 $9AE3 DJNZ $9A95    ;
 $9AE5 JP (HL)       ;

; Routine at 9AE6
;
; Used by the routine at #R$9922.
c$9AE6 SUB (IX+$05)  ;
 $9AE9 JR Z,$9B08    ;
 $9AEB LD HL,$9B08   ;
 $9AEE LD B,A        ;
 $9AEF LD C,A        ;
 $9AF0 EX AF,AF'     ;
 $9AF1 SCF           ;
 $9AF2 EX AF,AF'     ;
 $9AF3 JP NC,$9EDF   ;
 $9AF6 NEG           ;
 $9AF8 LD B,A        ;
 $9AF9 LD C,A        ;
 $9AFA EXX           ;
 $9AFB INC E         ;
 $9AFC EXX           ;
 $9AFD OR A          ;
 $9AFE EX AF,AF'     ;
 $9AFF LD HL,$9B05   ;
 $9B02 JP $9E98      ;

; Routine at 9B05
c$9B05 EXX           ;
 $9B06 DEC E         ;
 $9B07 EXX           ;
; This entry point is used by the routine at #R$9AE6.
*$9B08 LD A,(IX+$0A) ;
 $9B0B SUB C         ;
 $9B0C LD B,A        ;
 $9B0D LD HL,$9A46   ;
*$9B10 EXX           ;
 $9B11 POP BC        ;
 $9B12 LD A,(DE)     ;
 $9B13 OR (HL)       ;
 $9B14 LD (DE),A     ;
 $9B15 INC L         ;
 $9B16 INC E         ;
 $9B17 LD A,(DE)     ;
 $9B18 CPL           ;
 $9B19 OR C          ;
 $9B1A CPL           ;
 $9B1B OR (HL)       ;
 $9B1C LD (DE),A     ;
 $9B1D INC L         ;
 $9B1E INC E         ;
 $9B1F LD A,(DE)     ;
 $9B20 CPL           ;
 $9B21 OR B          ;
 $9B22 CPL           ;
 $9B23 OR (HL)       ;
 $9B24 LD (DE),A     ;
 $9B25 INC L         ;
 $9B26 INC E         ;
 $9B27 POP BC        ;
 $9B28 LD A,(DE)     ;
 $9B29 CPL           ;
 $9B2A OR C          ;
 $9B2B CPL           ;
 $9B2C LD (DE),A     ;
 $9B2D INC D         ;
 $9B2E LD A,(DE)     ;
 $9B2F CPL           ;
 $9B30 OR B          ;
 $9B31 CPL           ;
 $9B32 LD (DE),A     ;
 $9B33 DEC E         ;
 $9B34 POP BC        ;
 $9B35 LD A,(DE)     ;
 $9B36 CPL           ;
 $9B37 OR C          ;
 $9B38 CPL           ;
 $9B39 OR (HL)       ;
 $9B3A LD (DE),A     ;
 $9B3B INC L         ;
 $9B3C DEC E         ;
 $9B3D LD A,(DE)     ;
 $9B3E CPL           ;
 $9B3F OR B          ;
 $9B40 CPL           ;
 $9B41 OR (HL)       ;
 $9B42 LD (DE),A     ;
 $9B43 INC L         ;
 $9B44 DEC E         ;
 $9B45 LD A,(DE)     ;
 $9B46 OR (HL)       ;
 $9B47 LD (DE),A     ;
 $9B48 INC D         ;
 $9B49 INC L         ;
 $9B4A LD A,D        ;
 $9B4B AND $07       ;
 $9B4D JR NZ,$9B59   ;
 $9B4F LD A,E        ;
 $9B50 ADD A,$20     ;
 $9B52 LD E,A        ;
 $9B53 JR C,$9B59    ;
 $9B55 LD A,D        ;
 $9B56 SUB $08       ;
 $9B58 LD D,A        ;
*$9B59 EXX           ;
 $9B5A DEC E         ;
 $9B5B JP Z,$9FF5    ;
 $9B5E DJNZ $9B10    ;
 $9B60 JP (HL)       ;

; Routine at 9B61
;
; Used by the routine at #R$9922.
c$9B61 PUSH DE        ;
 $9B62 PUSH HL        ;
 $9B63 OR A           ;
 $9B64 JP P,$9BCB     ;
 $9B67 LD HL,$9B97    ;
 $9B6A PUSH HL        ;
 $9B6B LD A,C         ;
 $9B6C LD C,B         ;
 $9B6D DEC A          ;
 $9B6E CP (IX+$09)    ;
 $9B71 RET P          ;
 $9B72 ADD A,(IX+$0A) ;
 $9B75 CP (IX+$08)    ;
 $9B78 RET M          ;
 $9B79 SUB (IX+$0A)   ;
 $9B7C INC A          ;
 $9B7D LD B,$00       ;
 $9B7F CALL $9C23     ;
 $9B82 LD A,E         ;
 $9B83 CP $02         ;
 $9B85 JR C,$9B90     ;
 $9B87 INC A          ;
 $9B88 JP Z,$9CB1     ;
 $9B8B INC A          ;
 $9B8C RET NZ         ;
 $9B8D JP $9CED       ;
*$9B90 EXX            ;
 $9B91 ADD A,E        ;
 $9B92 LD E,A         ;
 $9B93 EXX            ;
 $9B94 JP $9C6B       ;

; Routine at 9B97
c$9B97 EXX            ;
 $9B98 POP HL         ;
 $9B99 EXX            ;
 $9B9A POP DE         ;
 $9B9B LD HL,$9FEE    ;
 $9B9E PUSH HL        ;
 $9B9F LD A,C         ;
 $9BA0 DEC A          ;
 $9BA1 CP (IX+$09)    ;
 $9BA4 RET P          ;
 $9BA5 ADD A,(IX+$0A) ;
 $9BA8 CP (IX+$08)    ;
 $9BAB RET M          ;
 $9BAC SUB (IX+$0A)   ;
 $9BAF INC A          ;
 $9BB0 LD B,$00       ;
 $9BB2 CALL $9C23     ;
 $9BB5 LD E,D         ;
 $9BB6 LD A,E         ;
 $9BB7 CP $02         ;
 $9BB9 JR C,$9BC4     ;
 $9BBB INC A          ;
 $9BBC JP Z,$9DCC     ;
 $9BBF INC A          ;
 $9BC0 RET NZ         ;
 $9BC1 JP $9E03       ;
*$9BC4 EXX            ;
 $9BC5 ADD A,E        ;
 $9BC6 LD E,A         ;
 $9BC7 EXX            ;
 $9BC8 JP $9D8D       ;

; Routine at 9BCB
;
; Used by the routine at #R$9B61.
c$9BCB LD HL,$9BF5    ;
 $9BCE PUSH HL        ;
 $9BCF LD A,C         ;
 $9BD0 LD C,B         ;
 $9BD1 DEC A          ;
 $9BD2 CP (IX+$09)    ;
 $9BD5 RET P          ;
 $9BD6 ADD A,(IX+$0A) ;
 $9BD9 CP (IX+$08)    ;
 $9BDC RET M          ;
 $9BDD SUB (IX+$0A)   ;
 $9BE0 INC A          ;
 $9BE1 LD B,E         ;
 $9BE2 CALL $9C23     ;
 $9BE5 LD A,E         ;
 $9BE6 CP $20         ;
 $9BE8 RET NC         ;
 $9BE9 SUB $1F        ;
 $9BEB JP Z,$9D5B     ;
 $9BEE INC A          ;
 $9BEF JP Z,$9D1F     ;
 $9BF2 JP $9C6B       ;

; Routine at 9BF5
c$9BF5 EXX            ;
 $9BF6 POP HL         ;
 $9BF7 EXX            ;
 $9BF8 POP DE         ;
 $9BF9 LD HL,$9FEE    ;
 $9BFC PUSH HL        ;
 $9BFD LD E,D         ;
 $9BFE LD A,C         ;
 $9BFF DEC A          ;
 $9C00 CP (IX+$09)    ;
 $9C03 RET P          ;
 $9C04 ADD A,(IX+$0A) ;
 $9C07 CP (IX+$08)    ;
 $9C0A RET M          ;
 $9C0B SUB (IX+$0A)   ;
 $9C0E INC A          ;
 $9C0F LD B,E         ;
 $9C10 CALL $9C23     ;
 $9C13 LD A,E         ;
 $9C14 CP $20         ;
 $9C16 RET NC         ;
 $9C17 SUB $1F        ;
 $9C19 JP Z,$9E69     ;
 $9C1C INC A          ;
 $9C1D JP Z,$9E32     ;
 $9C20 JP $9D8D       ;

; Routine at 9C23
;
; Used by the routines at #R$9B61, #R$9B97, #R$9BCB and #R$9BF5.
c$9C23 CP (IX+$08)    ;
 $9C26 JP M,$9C47     ;
 $9C29 LD L,A         ;
 $9C2A EX AF,AF'      ;
 $9C2B SLA L          ;
 $9C2D LD H,$FE       ; $FE00 - table of even screen lines addresses
 $9C2F LD A,(HL)      ;
 $9C30 ADD A,B        ;
 $9C31 INC L          ;
 $9C32 LD H,(HL)      ;
 $9C33 LD L,A         ;
 $9C34 PUSH HL        ;
 $9C35 EXX            ;
 $9C36 POP DE         ;
 $9C37 EX AF,AF'      ;
 $9C38 LD B,(IX+$0A)  ;
 $9C3B SUB (IX+$09)   ;
 $9C3E NEG            ;
 $9C40 CP B           ;
 $9C41 JR NC,$9C45    ;
 $9C43 INC A          ;
 $9C44 LD B,A         ;
*$9C45 EXX            ;
 $9C46 RET            ;
*$9C47 ADD A,(IX+$0A) ;
 $9C4A SUB (IX+$08)   ;
 $9C4D EXX            ;
 $9C4E LD B,A         ;
 $9C4F LD A,(IX+$0A)  ;
 $9C52 SUB B          ;
 $9C53 LD E,A         ;
 $9C54 ADD A,A        ;
 $9C55 ADD A,E        ;
 $9C56 ADD A,A        ;
 $9C57 ADD A,L        ;
 $9C58 LD L,A         ;
 $9C59 EX DE,HL       ;
 $9C5A LD L,(IX+$08)  ;
 $9C5D SLA L          ;
 $9C5F LD H,$FE       ; $FE00 - table of even screen lines addresses
 $9C61 LD A,(HL)      ;
 $9C62 INC L          ;
 $9C63 EXX            ;
 $9C64 ADD A,B        ;
 $9C65 EXX            ;
 $9C66 LD H,(HL)      ;
 $9C67 LD L,A         ;
 $9C68 EX DE,HL       ;
 $9C69 EXX            ;
 $9C6A RET            ;

; Routine at 9C6B
;
; Used by the routines at #R$9B61 and #R$9BCB.
c$9C6B LD ($FD82),SP ;
 $9C6F EXX           ;
 $9C70 LD SP,HL      ;
 $9C71 EX DE,HL      ;
*$9C72 POP DE        ;
 $9C73 LD A,E        ;
 $9C74 CPL           ;
 $9C75 AND (HL)      ;
 $9C76 LD (HL),A     ;
 $9C77 INC L         ;
 $9C78 LD A,D        ;
 $9C79 CPL           ;
 $9C7A AND (HL)      ;
 $9C7B LD (HL),A     ;
 $9C7C INC L         ;
 $9C7D POP DE        ;
 $9C7E LD A,E        ;
 $9C7F CPL           ;
 $9C80 AND (HL)      ;
 $9C81 LD (HL),A     ;
 $9C82 INC H         ;
 $9C83 LD A,D        ;
 $9C84 CPL           ;
 $9C85 AND (HL)      ;
 $9C86 LD (HL),A     ;
 $9C87 DEC L         ;
 $9C88 POP DE        ;
 $9C89 LD A,E        ;
 $9C8A CPL           ;
 $9C8B AND (HL)      ;
 $9C8C LD (HL),A     ;
 $9C8D DEC L         ;
 $9C8E LD A,D        ;
 $9C8F CPL           ;
 $9C90 AND (HL)      ;
 $9C91 LD (HL),A     ;
 $9C92 INC H         ;
 $9C93 LD A,H        ;
 $9C94 AND $07       ;
 $9C96 JR NZ,$9CA2   ;
 $9C98 LD A,L        ;
 $9C99 ADD A,$20     ;
 $9C9B LD L,A        ;
 $9C9C LD A,H        ;
 $9C9D JR C,$9CAA    ;
 $9C9F SUB $08       ;
 $9CA1 LD H,A        ;
*$9CA2 DJNZ $9C72    ;
*$9CA4 EXX           ;
 $9CA5 LD SP,($FD82) ;
 $9CA9 RET           ;
*$9CAA AND $18       ;
 $9CAC JP PO,$9CA2   ;
 $9CAF JR $9CA4      ;

; Routine at 9CB1
;
; Used by the routine at #R$9B61.
c$9CB1 LD ($FD82),SP ;
 $9CB5 EXX           ;
 $9CB6 LD SP,HL      ;
 $9CB7 EX DE,HL      ;
*$9CB8 POP DE        ;
 $9CB9 LD A,D        ;
 $9CBA CPL           ;
 $9CBB AND (HL)      ;
 $9CBC LD (HL),A     ;
 $9CBD INC L         ;
 $9CBE POP DE        ;
 $9CBF LD A,E        ;
 $9CC0 CPL           ;
 $9CC1 AND (HL)      ;
 $9CC2 LD (HL),A     ;
 $9CC3 INC H         ;
 $9CC4 LD A,D        ;
 $9CC5 CPL           ;
 $9CC6 AND (HL)      ;
 $9CC7 LD (HL),A     ;
 $9CC8 DEC L         ;
 $9CC9 POP DE        ;
 $9CCA LD A,E        ;
 $9CCB CPL           ;
 $9CCC AND (HL)      ;
 $9CCD LD (HL),A     ;
 $9CCE INC H         ;
 $9CCF LD A,H        ;
 $9CD0 AND $07       ;
 $9CD2 JR NZ,$9CDE   ;
 $9CD4 LD A,L        ;
 $9CD5 ADD A,$20     ;
 $9CD7 LD L,A        ;
 $9CD8 LD A,H        ;
 $9CD9 JR C,$9CE6    ;
 $9CDB SUB $08       ;
 $9CDD LD H,A        ;
*$9CDE DJNZ $9CB8    ;
*$9CE0 EXX           ;
 $9CE1 LD SP,($FD82) ;
 $9CE5 RET           ;
*$9CE6 AND $18       ;
 $9CE8 JP PO,$9CDE   ;
 $9CEB JR $9CE0      ;

; Routine at 9CED
;
; Used by the routine at #R$9B61.
c$9CED LD ($FD82),SP ;
 $9CF1 EXX           ;
 $9CF2 LD SP,HL      ;
 $9CF3 EX DE,HL      ;
*$9CF4 POP DE        ;
 $9CF5 POP DE        ;
 $9CF6 LD A,E        ;
 $9CF7 CPL           ;
 $9CF8 AND (HL)      ;
 $9CF9 LD (HL),A     ;
 $9CFA INC H         ;
 $9CFB LD A,D        ;
 $9CFC CPL           ;
 $9CFD AND (HL)      ;
 $9CFE LD (HL),A     ;
 $9CFF POP DE        ;
 $9D00 INC H         ;
 $9D01 LD A,H        ;
 $9D02 AND $07       ;
 $9D04 JR NZ,$9D10   ;
 $9D06 LD A,L        ;
 $9D07 ADD A,$20     ;
 $9D09 LD L,A        ;
 $9D0A LD A,H        ;
 $9D0B JR C,$9D18    ;
 $9D0D SUB $08       ;
 $9D0F LD H,A        ;
*$9D10 DJNZ $9CF4    ;
*$9D12 EXX           ;
 $9D13 LD SP,($FD82) ;
 $9D17 RET           ;
*$9D18 AND $18       ;
 $9D1A JP PO,$9D10   ;
 $9D1D JR $9D12      ;

; Routine at 9D1F
;
; Used by the routine at #R$9BCB.
c$9D1F LD ($FD82),SP ;
 $9D23 EXX           ;
 $9D24 LD SP,HL      ;
 $9D25 EX DE,HL      ;
*$9D26 POP DE        ;
 $9D27 LD A,E        ;
 $9D28 CPL           ;
 $9D29 AND (HL)      ;
 $9D2A LD (HL),A     ;
 $9D2B INC L         ;
 $9D2C LD A,D        ;
 $9D2D CPL           ;
 $9D2E AND (HL)      ;
 $9D2F LD (HL),A     ;
 $9D30 POP DE        ;
 $9D31 INC H         ;
 $9D32 POP DE        ;
 $9D33 LD A,E        ;
 $9D34 CPL           ;
 $9D35 AND (HL)      ;
 $9D36 LD (HL),A     ;
 $9D37 DEC L         ;
 $9D38 LD A,D        ;
 $9D39 CPL           ;
 $9D3A AND (HL)      ;
 $9D3B LD (HL),A     ;
 $9D3C INC H         ;
 $9D3D LD A,H        ;
 $9D3E AND $07       ;
 $9D40 JR NZ,$9D4C   ;
 $9D42 LD A,L        ;
 $9D43 ADD A,$20     ;
 $9D45 LD L,A        ;
 $9D46 LD A,H        ;
 $9D47 JR C,$9D54    ;
 $9D49 SUB $08       ;
 $9D4B LD H,A        ;
*$9D4C DJNZ $9D26    ;
*$9D4E EXX           ;
 $9D4F LD SP,($FD82) ;
 $9D53 RET           ;
*$9D54 AND $18       ;
 $9D56 JP PO,$9D4C   ;
 $9D59 JR $9D4E      ;

; Routine at 9D5B
;
; Used by the routine at #R$9BCB.
c$9D5B LD ($FD82),SP ;
 $9D5F EXX           ;
 $9D60 LD SP,HL      ;
 $9D61 EX DE,HL      ;
*$9D62 POP DE        ;
 $9D63 LD A,E        ;
 $9D64 CPL           ;
 $9D65 AND (HL)      ;
 $9D66 LD (HL),A     ;
 $9D67 POP DE        ;
 $9D68 INC H         ;
 $9D69 POP DE        ;
 $9D6A LD A,D        ;
 $9D6B CPL           ;
 $9D6C AND (HL)      ;
 $9D6D LD (HL),A     ;
 $9D6E INC H         ;
 $9D6F LD A,H        ;
 $9D70 AND $07       ;
 $9D72 JR NZ,$9D7E   ;
 $9D74 LD A,L        ;
 $9D75 ADD A,$20     ;
 $9D77 LD L,A        ;
 $9D78 LD A,H        ;
 $9D79 JR C,$9D86    ;
 $9D7B SUB $08       ;
 $9D7D LD H,A        ;
*$9D7E DJNZ $9D62    ;
*$9D80 EXX           ;
 $9D81 LD SP,($FD82) ;
 $9D85 RET           ;
*$9D86 AND $18       ;
 $9D88 JP PO,$9D7E   ;
 $9D8B JR $9D80      ;

; Routine at 9D8D
;
; Used by the routines at #R$9B97 and #R$9BF5.
c$9D8D LD ($FD82),SP ;
 $9D91 EXX           ;
 $9D92 LD SP,HL      ;
*$9D93 POP HL        ;
 $9D94 LD A,(DE)     ;
 $9D95 OR L          ;
 $9D96 LD (DE),A     ;
 $9D97 INC E         ;
 $9D98 LD A,(DE)     ;
 $9D99 OR H          ;
 $9D9A LD (DE),A     ;
 $9D9B INC E         ;
 $9D9C POP HL        ;
 $9D9D LD A,(DE)     ;
 $9D9E OR L          ;
 $9D9F LD (DE),A     ;
 $9DA0 INC D         ;
 $9DA1 LD A,(DE)     ;
 $9DA2 OR H          ;
 $9DA3 LD (DE),A     ;
 $9DA4 DEC E         ;
 $9DA5 POP HL        ;
 $9DA6 LD A,(DE)     ;
 $9DA7 OR L          ;
 $9DA8 LD (DE),A     ;
 $9DA9 DEC E         ;
 $9DAA LD A,(DE)     ;
 $9DAB OR H          ;
 $9DAC LD (DE),A     ;
 $9DAD INC D         ;
 $9DAE LD A,D        ;
 $9DAF AND $07       ;
 $9DB1 JR NZ,$9DBD   ;
 $9DB3 LD A,E        ;
 $9DB4 ADD A,$20     ;
 $9DB6 LD E,A        ;
 $9DB7 LD A,D        ;
 $9DB8 JR C,$9DC5    ;
 $9DBA SUB $08       ;
 $9DBC LD D,A        ;
*$9DBD DJNZ $9D93    ;
*$9DBF EXX           ;
 $9DC0 LD SP,($FD82) ;
 $9DC4 RET           ;
*$9DC5 AND $18       ;
 $9DC7 JP PO,$9DBD   ;
 $9DCA JR $9DBF      ;

; Routine at 9DCC
;
; Used by the routine at #R$9B97.
c$9DCC LD ($FD82),SP ;
 $9DD0 EXX           ;
 $9DD1 LD SP,HL      ;
*$9DD2 POP HL        ;
 $9DD3 LD A,(DE)     ;
 $9DD4 OR H          ;
 $9DD5 LD (DE),A     ;
 $9DD6 INC E         ;
 $9DD7 POP HL        ;
 $9DD8 LD A,(DE)     ;
 $9DD9 OR L          ;
 $9DDA LD (DE),A     ;
 $9DDB INC D         ;
 $9DDC LD A,(DE)     ;
 $9DDD OR H          ;
 $9DDE LD (DE),A     ;
 $9DDF DEC E         ;
 $9DE0 POP HL        ;
 $9DE1 LD A,(DE)     ;
 $9DE2 OR L          ;
 $9DE3 LD (DE),A     ;
 $9DE4 INC D         ;
 $9DE5 LD A,D        ;
 $9DE6 AND $07       ;
 $9DE8 JR NZ,$9DF4   ;
 $9DEA LD A,E        ;
 $9DEB ADD A,$20     ;
 $9DED LD E,A        ;
 $9DEE LD A,D        ;
 $9DEF JR C,$9DFC    ;
 $9DF1 SUB $08       ;
 $9DF3 LD D,A        ;
*$9DF4 DJNZ $9DD2    ;
*$9DF6 EXX           ;
 $9DF7 LD SP,($FD82) ;
 $9DFB RET           ;
*$9DFC AND $18       ;
 $9DFE JP PO,$9DF4   ;
 $9E01 JR $9DF6      ;

; Routine at 9E03
;
; Used by the routine at #R$9B97.
c$9E03 LD ($FD82),SP ;
 $9E07 EXX           ;
 $9E08 LD SP,HL      ;
*$9E09 POP HL        ;
 $9E0A POP HL        ;
 $9E0B LD A,(DE)     ;
 $9E0C OR L          ;
 $9E0D LD (DE),A     ;
 $9E0E INC D         ;
 $9E0F LD A,(DE)     ;
 $9E10 OR H          ;
 $9E11 LD (DE),A     ;
 $9E12 POP HL        ;
 $9E13 INC D         ;
 $9E14 LD A,D        ;
 $9E15 AND $07       ;
 $9E17 JR NZ,$9E23   ;
 $9E19 LD A,E        ;
 $9E1A ADD A,$20     ;
 $9E1C LD E,A        ;
 $9E1D LD A,D        ;
 $9E1E JR C,$9E2B    ;
 $9E20 SUB $08       ;
 $9E22 LD D,A        ;
*$9E23 DJNZ $9E09    ;
*$9E25 EXX           ;
 $9E26 LD SP,($FD82) ;
 $9E2A RET           ;
*$9E2B AND $18       ;
 $9E2D JP PO,$9E23   ;
 $9E30 JR $9E25      ;

; Routine at 9E32
;
; Used by the routine at #R$9BF5.
c$9E32 LD ($FD82),SP ;
 $9E36 EXX           ;
 $9E37 LD SP,HL      ;
*$9E38 POP HL        ;
 $9E39 LD A,(DE)     ;
 $9E3A OR L          ;
 $9E3B LD (DE),A     ;
 $9E3C INC E         ;
 $9E3D LD A,(DE)     ;
 $9E3E OR H          ;
 $9E3F LD (DE),A     ;
 $9E40 POP HL        ;
 $9E41 INC D         ;
 $9E42 POP HL        ;
 $9E43 LD A,(DE)     ;
 $9E44 OR L          ;
 $9E45 LD (DE),A     ;
 $9E46 DEC E         ;
 $9E47 LD A,(DE)     ;
 $9E48 OR H          ;
 $9E49 LD (DE),A     ;
 $9E4A INC D         ;
 $9E4B LD A,D        ;
 $9E4C AND $07       ;
 $9E4E JR NZ,$9E5A   ;
 $9E50 LD A,E        ;
 $9E51 ADD A,$20     ;
 $9E53 LD E,A        ;
 $9E54 LD A,D        ;
 $9E55 JR C,$9E62    ;
 $9E57 SUB $08       ;
 $9E59 LD D,A        ;
*$9E5A DJNZ $9E38    ;
*$9E5C EXX           ;
 $9E5D LD SP,($FD82) ;
 $9E61 RET           ;
*$9E62 AND $18       ;
 $9E64 JP PO,$9E5A   ;
 $9E67 JR $9E5C      ;

; Routine at 9E69
;
; Used by the routine at #R$9BF5.
c$9E69 LD ($FD82),SP ;
 $9E6D EXX           ;
 $9E6E LD SP,HL      ;
*$9E6F POP HL        ;
 $9E70 LD A,(DE)     ;
 $9E71 OR L          ;
 $9E72 LD (DE),A     ;
 $9E73 POP HL        ;
 $9E74 INC D         ;
 $9E75 POP HL        ;
 $9E76 LD A,(DE)     ;
 $9E77 OR H          ;
 $9E78 LD (DE),A     ;
 $9E79 INC D         ;
 $9E7A LD A,D        ;
 $9E7B AND $07       ;
 $9E7D JR NZ,$9E89   ;
 $9E7F LD A,E        ;
 $9E80 ADD A,$20     ;
 $9E82 LD E,A        ;
 $9E83 LD A,D        ;
 $9E84 JR C,$9E91    ;
 $9E86 SUB $08       ;
 $9E88 LD D,A        ;
*$9E89 DJNZ $9E6F    ;
*$9E8B EXX           ;
 $9E8C LD SP,($FD82) ;
 $9E90 RET           ;
*$9E91 AND $18       ;
 $9E93 JP PO,$9E89   ;
 $9E96 JR $9E8B      ;

; Routine at 9E98
;
; Used by the routines at #R$9922, #R$9A46, #R$9A6E, #R$9AE6 and #R$9F1D.
c$9E98 EXX           ;
 $9E99 POP BC        ;
 $9E9A LD A,(DE)     ;
 $9E9B CPL           ;
 $9E9C OR C          ;
 $9E9D CPL           ;
 $9E9E LD (DE),A     ;
 $9E9F INC E         ;
 $9EA0 LD A,(DE)     ;
 $9EA1 CPL           ;
 $9EA2 OR B          ;
 $9EA3 CPL           ;
 $9EA4 LD (DE),A     ;
 $9EA5 INC E         ;
 $9EA6 POP BC        ;
 $9EA7 LD A,(DE)     ;
 $9EA8 CPL           ;
 $9EA9 OR C          ;
 $9EAA CPL           ;
 $9EAB LD (DE),A     ;
 $9EAC INC D         ;
 $9EAD LD A,(DE)     ;
 $9EAE CPL           ;
 $9EAF OR B          ;
 $9EB0 CPL           ;
 $9EB1 LD (DE),A     ;
 $9EB2 DEC E         ;
 $9EB3 POP BC        ;
 $9EB4 LD A,(DE)     ;
 $9EB5 CPL           ;
 $9EB6 OR C          ;
 $9EB7 CPL           ;
 $9EB8 LD (DE),A     ;
 $9EB9 DEC E         ;
 $9EBA LD A,(DE)     ;
 $9EBB CPL           ;
 $9EBC OR B          ;
 $9EBD CPL           ;
 $9EBE LD (DE),A     ;
 $9EBF INC D         ;
 $9EC0 LD A,D        ;
 $9EC1 AND $07       ;
 $9EC3 JR NZ,$9ECF   ;
 $9EC5 LD A,E        ;
 $9EC6 ADD A,$20     ;
 $9EC8 LD E,A        ;
 $9EC9 LD A,D        ;
 $9ECA JR C,$9ED7    ;
 $9ECC SUB $08       ;
 $9ECE LD D,A        ;
*$9ECF EXX           ;
 $9ED0 DEC E         ;
 $9ED1 JP Z,$9FF5    ;
 $9ED4 DJNZ $9E98    ;
 $9ED6 JP (HL)       ;
*$9ED7 AND $18       ;
 $9ED9 JP PO,$9ECF   ;
 $9EDC JP $9A63      ;

; Routine at 9EDF
;
; Used by the routines at #R$9922, #R$9A46, #R$9A6E, #R$9AE6 and #R$9F1D.
c$9EDF EXX           ;
 $9EE0 LD A,(DE)     ;
 $9EE1 OR (HL)       ;
 $9EE2 LD (DE),A     ;
 $9EE3 INC L         ;
 $9EE4 INC E         ;
 $9EE5 LD A,(DE)     ;
 $9EE6 OR (HL)       ;
 $9EE7 LD (DE),A     ;
 $9EE8 INC L         ;
 $9EE9 INC E         ;
 $9EEA LD A,(DE)     ;
 $9EEB OR (HL)       ;
 $9EEC LD (DE),A     ;
 $9EED INC L         ;
 $9EEE INC D         ;
 $9EEF LD A,(DE)     ;
 $9EF0 OR (HL)       ;
 $9EF1 LD (DE),A     ;
 $9EF2 INC L         ;
 $9EF3 DEC E         ;
 $9EF4 LD A,(DE)     ;
 $9EF5 OR (HL)       ;
 $9EF6 LD (DE),A     ;
 $9EF7 INC L         ;
 $9EF8 DEC E         ;
 $9EF9 LD A,(DE)     ;
 $9EFA OR (HL)       ;
 $9EFB LD (DE),A     ;
 $9EFC INC L         ;
 $9EFD INC D         ;
 $9EFE LD A,D        ;
 $9EFF AND $07       ;
 $9F01 JR NZ,$9F0D   ;
 $9F03 LD A,E        ;
 $9F04 ADD A,$20     ;
 $9F06 LD E,A        ;
 $9F07 LD A,D        ;
 $9F08 JR C,$9F15    ;
 $9F0A SUB $08       ;
 $9F0C LD D,A        ;
*$9F0D EXX           ;
 $9F0E DEC E         ;
 $9F0F JP Z,$9FF5    ;
 $9F12 DJNZ $9EDF    ;
 $9F14 JP (HL)       ;
*$9F15 AND $18       ;
 $9F17 JP PO,$9F0D   ;
 $9F1A JP $9A63      ;

; Routine at 9F1D
;
; Used by the routine at #R$9922.
c$9F1D PUSH HL        ;
 $9F1E LD ($FD82),SP  ;
 $9F22 SUB C          ;
 $9F23 EXX            ;
 $9F24 INC A          ;
 $9F25 JP M,$9F2E     ;
 $9F28 LD C,A         ;
 $9F29 ADD A,A        ;
 $9F2A ADD A,C        ;
 $9F2B ADD A,A        ;
 $9F2C ADD A,L        ;
 $9F2D LD L,A         ;
*$9F2E LD SP,HL       ;
 $9F2F EXX            ;
 $9F30 LD A,E         ;
 $9F31 EX AF,AF'      ;
 $9F32 LD A,C         ;
 $9F33 EXX            ;
 $9F34 CP (IX+$08)    ;
 $9F37 JP P,$9F3D     ;
 $9F3A LD A,(IX+$08)  ;
*$9F3D LD C,A         ;
 $9F3E ADD A,A        ;
 $9F3F LD L,A         ;
 $9F40 LD H,$FE       ; $FE00 - table of even screen lines addresses
 $9F42 EX AF,AF'      ;
 $9F43 ADD A,(HL)     ;
 $9F44 INC L          ;
 $9F45 LD D,(HL)      ;
 $9F46 LD E,A         ;
 $9F47 EXX            ;
 $9F48 LD A,C         ;
 $9F49 SUB (IX+$08)   ;
 $9F4C ADD A,(IX+$0A) ;
 $9F4F DEC A          ;
 $9F50 JP M,$9F74     ;
 $9F53 CP (IX+$0A)    ;
 $9F56 INC A          ;
 $9F57 JR C,$9F5C     ;
 $9F59 LD A,(IX+$0A)  ;
*$9F5C LD B,A         ;
 $9F5D EXX            ;
 $9F5E ADD A,C        ;
 $9F5F EXX            ;
 $9F60 DEC A          ;
 $9F61 SUB (IX+$09)   ;
 $9F64 JR C,$9F6C     ;
 $9F66 JR Z,$9F6C     ;
 $9F68 NEG            ;
 $9F6A ADD A,B        ;
 $9F6B LD B,A         ;
*$9F6C LD E,$00       ;
 $9F6E LD HL,$9F74    ;
 $9F71 JP $9E98       ;
*$9F74 LD A,(IX+$08)  ;
 $9F77 LD C,(IX+$05)  ;
 $9F7A SUB C          ;
 $9F7B EXX            ;
 $9F7C LD C,A         ;
 $9F7D LD A,$00       ;
 $9F7F JP M,$9F86     ;
 $9F82 LD A,C         ;
 $9F83 ADD A,A        ;
 $9F84 ADD A,C        ;
 $9F85 ADD A,A        ;
*$9F86 LD SP,($FD82)  ;
 $9F8A POP HL         ;
 $9F8B LD ($FD82),SP  ;
 $9F8F ADD A,L        ;
 $9F90 LD L,A         ;
 $9F91 EXX            ;
 $9F92 LD A,D         ;
 $9F93 EX AF,AF'      ;
 $9F94 LD A,C         ;
 $9F95 EXX            ;
 $9F96 CP (IX+$08)    ;
 $9F99 JP P,$9F9F     ;
 $9F9C LD A,(IX+$08)  ;
*$9F9F LD C,A         ;
 $9FA0 ADD A,A        ;
 $9FA1 EX DE,HL       ;
 $9FA2 LD L,A         ;
 $9FA3 LD H,$FE       ; $FE00 - table of even screen lines addresses
 $9FA5 EX AF,AF'      ;
 $9FA6 ADD A,(HL)     ;
 $9FA7 INC L          ;
 $9FA8 LD H,(HL)      ;
 $9FA9 LD L,A         ;
 $9FAA EX DE,HL       ;
 $9FAB EXX            ;
 $9FAC LD A,C         ;
 $9FAD SUB (IX+$08)   ;
 $9FB0 ADD A,(IX+$0A) ;
 $9FB3 DEC A          ;
 $9FB4 JP M,$9FD8     ;
 $9FB7 CP (IX+$0A)    ;
 $9FBA INC A          ;
 $9FBB JR C,$9FC0     ;
 $9FBD LD A,(IX+$0A)  ;
*$9FC0 LD B,A         ;
 $9FC1 EXX            ;
 $9FC2 ADD A,C        ;
 $9FC3 EXX            ;
 $9FC4 DEC A          ;
 $9FC5 SUB (IX+$09)   ;
 $9FC8 JR C,$9FD0     ;
 $9FCA JR Z,$9FD0     ;
 $9FCC NEG            ;
 $9FCE ADD A,B        ;
 $9FCF LD B,A         ;
*$9FD0 LD E,$00       ;
 $9FD2 LD HL,$9FD8    ;
 $9FD5 JP $9EDF       ;
*$9FD8 LD SP,($FD82)  ;
 $9FDC JR $9FE8       ;

; Routine at 9FDE
;
; Used by the routine at #R$9922.
c$9FDE RES 5,(IX+$0B) ;
; This entry point is used by the routine at #R$9922.
*$9FE2 LD A,(IX+$06)  ;
 $9FE5 LD (IX+$02),A  ;
; This entry point is used by the routine at #R$9F1D.
*$9FE8 LD A,(IX+$07)  ;
 $9FEB LD (IX+$07),A  ;
 $9FEE LD A,(IX+$05)  ;
 $9FF1 LD (IX+$01),A  ;
 $9FF4 RET            ;

; Routine at 9FF5
;
; Used by the routines at #R$9922, #R$9A6E, #R$9B05, #R$9E98 and #R$9EDF.
c$9FF5 LD A,(IX+$05) ;
 $9FF8 LD (IX+$01),A ;
 $9FFB LD SP,($FD82) ;
 $9FFF RET           ;

; Sprites of Player and troopers; width 3 height 21
;
; The sprites have no mask; even row bytes go left to right, odd row bytes
; right to left.
b$A000 DEFB $03,$D0,$00,$00,$70,$06,$0D,$F0,$00,$00,$F0,$0F,$0F,$F0,$00,$00 ; {#HTML[<img
 $A010 DEFB $D8,$17,$3C,$38,$00,$00,$CC,$3F,$1F,$9C,$00,$00,$3C,$1F,$0C,$EC ; src="images/spriteA000.png"
 $A020 DEFB $00,$00,$38,$09,$0E,$F0,$00,$00,$F0,$0F,$0F,$E0,$00,$00,$50,$1E ; />]
 $A030 DEFB $2E,$A8,$00,$00,$50,$1F,$2E,$A8,$00,$00,$40,$11,$00,$00,$00,$00 ; }
 $A040 DEFB $00,$F4,$00,$00,$9C,$01,$03,$7C,$00,$00,$FC,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $A050 DEFB $F6,$05,$0F,$0E,$00,$00,$F3,$0F,$07,$E7,$00,$00,$CF,$07,$03,$3B ; src="images/spriteA040.png"
 $A060 DEFB $00,$00,$4E,$02,$03,$BC,$00,$00,$FC,$03,$03,$F8,$00,$00,$94,$07 ; />]
 $A070 DEFB $0B,$AA,$00,$00,$D4,$07,$0B,$AA,$00,$00,$50,$04,$00,$00,$00,$00 ; }
 $A080 DEFB $00,$3D,$00,$00,$67,$00,$00,$DF,$00,$00,$FF,$00,$00,$FF,$00,$80 ; {#HTML[<img
 $A090 DEFB $7D,$01,$03,$C3,$80,$C0,$FC,$03,$01,$F9,$C0,$C0,$F3,$01,$00,$CE ; src="images/spriteA080.png"
 $A0A0 DEFB $C0,$80,$93,$00,$00,$EF,$00,$00,$FF,$00,$00,$FE,$00,$00,$E5,$01 ; />]
 $A0B0 DEFB $02,$EA,$80,$00,$F5,$01,$02,$EA,$80,$00,$14,$01,$00,$00,$00,$00 ; }
 $A0C0 DEFB $00,$0F,$40,$C0,$19,$00,$00,$37,$C0,$C0,$3F,$00,$00,$3F,$C0,$60 ; {#HTML[<img
 $A0D0 DEFB $5F,$00,$00,$F0,$E0,$30,$FF,$00,$00,$7E,$70,$F0,$7C,$00,$00,$33 ; src="images/spriteA0C0.png"
 $A0E0 DEFB $B0,$E0,$24,$00,$00,$3B,$C0,$C0,$3F,$00,$00,$3F,$80,$40,$79,$00 ; />]
 $A0F0 DEFB $00,$BA,$A0,$40,$7D,$00,$00,$BA,$A0,$00,$45,$00,$00,$00,$00,$00 ; }
 $A100 DEFB $00,$00,$00,$00,$C0,$03,$06,$60,$00,$00,$F0,$0D,$0F,$F0,$00,$00 ; {#HTML[<img
 $A110 DEFB $F0,$0F,$17,$D8,$00,$00,$28,$3C,$3F,$DC,$00,$00,$9C,$3F,$17,$3C ; src="images/spriteA100.png"
 $A120 DEFB $00,$00,$68,$0C,$09,$70,$00,$00,$F0,$0F,$0F,$E0,$00,$00,$E4,$5C ; />]
 $A130 DEFB $2A,$E8,$00,$00,$F4,$55,$2A,$E8,$00,$00,$10,$15,$00,$00,$00,$00 ; }
 $A140 DEFB $00,$00,$00,$00,$F0,$00,$01,$98,$00,$00,$7C,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $A150 DEFB $FC,$03,$05,$F6,$00,$00,$0A,$0F,$0F,$F7,$00,$00,$E7,$0F,$05,$CF ; src="images/spriteA140.png"
 $A160 DEFB $00,$00,$1A,$03,$02,$5C,$00,$00,$FC,$03,$03,$F8,$00,$00,$39,$17 ; />]
 $A170 DEFB $0A,$BA,$00,$00,$7D,$15,$0A,$BA,$00,$00,$44,$05,$00,$00,$00,$00 ; }
 $A180 DEFB $00,$00,$00,$00,$3C,$00,$00,$66,$00,$00,$DF,$00,$00,$FF,$00,$00 ; {#HTML[<img
 $A190 DEFB $FF,$00,$01,$7D,$80,$80,$C2,$03,$03,$FD,$C0,$C0,$F9,$03,$01,$73 ; src="images/spriteA180.png"
 $A1A0 DEFB $C0,$80,$C6,$00,$00,$97,$00,$00,$FF,$00,$00,$FE,$00,$40,$CE,$05 ; />]
 $A1B0 DEFB $02,$AE,$80,$40,$5F,$05,$02,$AE,$80,$00,$51,$01,$00,$00,$00,$00 ; }
 $A1C0 DEFB $00,$00,$00,$00,$0F,$00,$00,$19,$80,$C0,$37,$00,$00,$3F,$C0,$C0 ; {#HTML[<img
 $A1D0 DEFB $3F,$00,$00,$5F,$60,$A0,$F0,$00,$00,$FF,$70,$70,$FE,$00,$00,$5C ; src="images/spriteA1C0.png"
 $A1E0 DEFB $F0,$A0,$31,$00,$00,$25,$C0,$C0,$3F,$00,$00,$3F,$80,$90,$73,$01 ; />]
 $A1F0 DEFB $00,$AB,$A0,$D0,$57,$01,$00,$AB,$A0,$40,$54,$00,$00,$00,$00,$00 ; }
 $A200 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F1,$07,$07,$E3,$00,$00 ; {#HTML[<img
 $A210 DEFB $B6,$0B,$1E,$EC,$00,$00,$DA,$19,$13,$FC,$00,$00,$D0,$16,$17,$90 ; src="images/spriteA200.png"
 $A220 DEFB $00,$00,$70,$0F,$0F,$E4,$00,$00,$FC,$07,$03,$FD,$00,$00,$AA,$07 ; />]
 $A230 DEFB $0F,$54,$00,$00,$AA,$0E,$07,$50,$00,$00,$80,$00,$00,$00,$00,$00 ; }
 $A240 DEFB $00,$70,$00,$00,$98,$00,$01,$7C,$00,$40,$FC,$01,$01,$F8,$C0,$80 ; {#HTML[<img
 $A250 DEFB $ED,$02,$07,$BB,$00,$80,$76,$06,$04,$FF,$00,$00,$B4,$05,$05,$E4 ; src="images/spriteA240.png"
 $A260 DEFB $00,$00,$DC,$03,$03,$F9,$00,$00,$FF,$01,$00,$FF,$40,$80,$EA,$01 ; />]
 $A270 DEFB $03,$D5,$00,$80,$AA,$03,$01,$D4,$00,$00,$20,$00,$00,$00,$00,$00 ; }
 $A280 DEFB $00,$1C,$00,$00,$26,$00,$00,$5F,$00,$10,$7F,$00,$00,$7E,$30,$60 ; {#HTML[<img
 $A290 DEFB $BB,$00,$01,$EE,$C0,$A0,$9D,$01,$01,$3F,$C0,$00,$6D,$01,$01,$79 ; src="images/spriteA280.png"
 $A2A0 DEFB $00,$00,$F7,$00,$00,$FE,$40,$C0,$7F,$00,$00,$3F,$D0,$A0,$7A,$00 ; />]
 $A2B0 DEFB $00,$F5,$40,$A0,$EA,$00,$00,$75,$00,$00,$08,$00,$00,$00,$00,$00 ; }
 $A2C0 DEFB $00,$07,$00,$80,$09,$00,$00,$17,$C0,$C4,$1F,$00,$00,$1F,$8C,$D8 ; {#HTML[<img
 $A2D0 DEFB $2E,$00,$00,$7B,$B0,$68,$67,$00,$00,$4F,$F0,$40,$5B,$00,$00,$5E ; src="images/spriteA2C0.png"
 $A2E0 DEFB $40,$C0,$3D,$00,$00,$3F,$90,$F0,$1F,$00,$00,$0F,$F4,$A8,$1E,$00 ; />]
 $A2F0 DEFB $00,$3D,$50,$A8,$3A,$00,$00,$1D,$40,$00,$02,$00,$00,$00,$00,$00 ; }
 $A300 DEFB $00,$E0,$00,$00,$30,$01,$02,$F8,$00,$00,$F8,$03,$07,$F2,$00,$00 ; {#HTML[<img
 $A310 DEFB $D6,$0B,$0E,$EC,$00,$00,$D8,$1D,$19,$B4,$00,$00,$F8,$1A,$17,$B0 ; src="images/spriteA300.png"
 $A320 DEFB $00,$00,$30,$0E,$0F,$E0,$00,$00,$C0,$07,$03,$E0,$00,$00,$EA,$01 ; />]
 $A330 DEFB $05,$F4,$00,$00,$EA,$0A,$05,$F8,$00,$00,$F0,$00,$00,$00,$00,$00 ; }
 $A340 DEFB $00,$38,$00,$00,$4C,$00,$00,$BE,$00,$00,$FE,$00,$01,$FC,$80,$80 ; {#HTML[<img
 $A350 DEFB $F5,$02,$03,$BB,$00,$00,$76,$07,$06,$6D,$00,$00,$BE,$06,$05,$EC ; src="images/spriteA340.png"
 $A360 DEFB $00,$00,$8C,$03,$03,$F8,$00,$00,$F0,$01,$00,$F8,$00,$80,$7A,$00 ; />]
 $A370 DEFB $01,$7D,$00,$80,$BA,$02,$01,$7E,$00,$00,$3C,$00,$00,$00,$00,$00 ; }
 $A380 DEFB $00,$0E,$00,$00,$13,$00,$00,$2F,$80,$80,$3F,$00,$00,$7F,$20,$60 ; {#HTML[<img
 $A390 DEFB $BD,$00,$00,$EE,$C0,$80,$DD,$01,$01,$9B,$40,$80,$AF,$01,$01,$7B ; src="images/spriteA380.png"
 $A3A0 DEFB $00,$00,$E3,$00,$00,$FE,$00,$00,$7C,$00,$00,$3E,$00,$A0,$1E,$00 ; />]
 $A3B0 DEFB $00,$5F,$40,$A0,$AE,$00,$00,$5F,$80,$00,$0F,$00,$00,$00,$00,$00 ; }
 $A3C0 DEFB $00,$03,$80,$C0,$04,$00,$00,$0B,$E0,$E0,$0F,$00,$00,$1F,$C8,$58 ; {#HTML[<img
 $A3D0 DEFB $2F,$00,$00,$3B,$B0,$60,$77,$00,$00,$66,$D0,$E0,$6B,$00,$00,$5E ; src="images/spriteA3C0.png"
 $A3E0 DEFB $C0,$C0,$38,$00,$00,$3F,$80,$00,$1F,$00,$00,$0F,$80,$A8,$07,$00 ; />]
 $A3F0 DEFB $00,$17,$D0,$A8,$2B,$00,$00,$17,$E0,$C0,$03,$00,$00,$00,$00,$00 ; }
 $A400 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F0,$07,$0B,$D0,$00,$00 ; {#HTML[<img
 $A410 DEFB $18,$27,$73,$E8,$00,$00,$F8,$79,$F4,$D0,$00,$00,$FE,$BF,$FF,$D0 ; src="images/spriteA400.png"
 $A420 DEFB $00,$00,$B0,$7D,$13,$C0,$00,$00,$E0,$1F,$07,$F0,$00,$00,$60,$07 ; />]
 $A430 DEFB $2F,$E8,$00,$00,$D5,$5D,$2F,$28,$00,$00,$50,$17,$00,$00,$00,$00 ; }
 $A440 DEFB $00,$70,$00,$00,$98,$00,$01,$7C,$00,$00,$FC,$01,$02,$F4,$00,$00 ; {#HTML[<img
 $A450 DEFB $C6,$01,$0C,$FA,$00,$00,$3C,$1F,$1D,$9A,$00,$C0,$FF,$17,$1F,$7A ; src="images/spriteA440.png"
 $A460 DEFB $00,$00,$D2,$0F,$05,$3C,$00,$00,$FF,$07,$03,$FF,$00,$00,$CE,$07 ; />]
 $A470 DEFB $0F,$1C,$00,$40,$4F,$1E,$3A,$AA,$80,$00,$55,$1D,$00,$00,$00,$00 ; }
 $A480 DEFB $00,$38,$00,$00,$4C,$00,$00,$BE,$00,$00,$FE,$00,$01,$FA,$00,$00 ; {#HTML[<img
 $A490 DEFB $63,$02,$07,$3D,$00,$80,$9F,$07,$0F,$4D,$00,$E0,$FF,$0B,$0F,$DD ; src="images/spriteA480.png"
 $A4A0 DEFB $00,$00,$D9,$07,$01,$3F,$00,$00,$FE,$01,$00,$FF,$00,$00,$EF,$01 ; />]
 $A4B0 DEFB $07,$E7,$00,$40,$96,$07,$0C,$AF,$20,$80,$53,$05,$00,$00,$00,$00 ; }
 $A4C0 DEFB $00,$0E,$00,$00,$13,$00,$00,$2F,$80,$80,$3F,$00,$00,$3E,$80,$C0 ; {#HTML[<img
 $A4D0 DEFB $58,$00,$00,$CF,$40,$C0,$F3,$01,$01,$D9,$A0,$FC,$7F,$01,$00,$F7 ; src="images/spriteA4C0.png"
 $A4E0 DEFB $A0,$20,$FD,$00,$00,$53,$C0,$80,$7F,$00,$00,$3F,$80,$80,$3F,$00 ; />]
 $A4F0 DEFB $00,$3F,$00,$50,$7D,$00,$00,$9C,$A8,$50,$5E,$00,$00,$00,$00,$00 ; }
 $A500 DEFB $01,$C0,$00,$00,$20,$03,$07,$D0,$00,$00,$F0,$07,$0F,$90,$00,$00 ; {#HTML[<img
 $A510 DEFB $10,$1A,$25,$20,$00,$00,$A0,$3B,$3F,$D0,$00,$00,$E8,$1D,$2E,$B0 ; src="images/spriteA500.png"
 $A520 DEFB $00,$00,$D8,$37,$3D,$8C,$00,$00,$76,$3F,$1F,$80,$00,$00,$80,$2F ; />]
 $A530 DEFB $3B,$E8,$00,$00,$D4,$5D,$2A,$EA,$00,$00,$F4,$14,$00,$00,$00,$00 ; }
 $A540 DEFB $00,$70,$00,$00,$C8,$00,$01,$F4,$00,$00,$FC,$01,$03,$E4,$00,$00 ; {#HTML[<img
 $A550 DEFB $84,$06,$09,$48,$00,$00,$E8,$0E,$0F,$F4,$00,$00,$7A,$07,$0B,$AC ; src="images/spriteA540.png"
 $A560 DEFB $00,$00,$F6,$0D,$0F,$63,$00,$80,$DD,$0F,$07,$E0,$00,$00,$E0,$0B ; />]
 $A570 DEFB $0E,$FA,$00,$00,$75,$17,$0A,$BA,$80,$00,$3D,$05,$00,$00,$00,$00 ; }
 $A580 DEFB $00,$1C,$00,$00,$32,$00,$00,$7D,$00,$00,$7F,$00,$00,$F9,$00,$00 ; {#HTML[<img
 $A590 DEFB $A1,$01,$02,$52,$00,$00,$BA,$03,$03,$FD,$00,$80,$DE,$01,$02,$EB ; src="images/spriteA580.png"
 $A5A0 DEFB $00,$80,$7D,$03,$03,$D8,$C0,$60,$F7,$03,$01,$F8,$00,$00,$F8,$02 ; />]
 $A5B0 DEFB $03,$BE,$80,$40,$DD,$05,$02,$AE,$A0,$40,$4F,$01,$00,$00,$00,$00 ; }
 $A5C0 DEFB $00,$07,$00,$80,$0C,$00,$00,$1F,$40,$C0,$1F,$00,$00,$3E,$40,$40 ; {#HTML[<img
 $A5D0 DEFB $68,$00,$00,$94,$80,$80,$EE,$00,$00,$FF,$40,$A0,$77,$00,$00,$BA ; src="images/spriteA5C0.png"
 $A5E0 DEFB $C0,$60,$DF,$00,$00,$F6,$30,$D8,$FD,$00,$00,$7E,$00,$00,$BE,$00 ; />]
 $A5F0 DEFB $00,$EF,$A0,$50,$77,$01,$00,$AB,$A8,$D0,$53,$00,$00,$00,$00,$00 ; }
 $A600 DEFB $03,$80,$00,$00,$40,$06,$0F,$A0,$00,$00,$E0,$0F,$1F,$20,$00,$00 ; {#HTML[<img
 $A610 DEFB $20,$1C,$12,$40,$00,$00,$A0,$29,$3B,$D0,$00,$00,$E0,$3E,$1F,$B0 ; src="images/spriteA600.png"
 $A620 DEFB $00,$00,$98,$3F,$3E,$EC,$00,$00,$80,$1F,$1F,$80,$00,$00,$80,$0F ; />]
 $A630 DEFB $2E,$A8,$00,$00,$D4,$5F,$2E,$AA,$00,$00,$D4,$17,$00,$00,$00,$00 ; }
 $A640 DEFB $00,$E0,$00,$00,$90,$01,$03,$E8,$00,$00,$F8,$03,$07,$C8,$00,$00 ; {#HTML[<img
 $A650 DEFB $08,$07,$04,$90,$00,$00,$68,$0A,$0E,$F4,$00,$00,$B8,$0F,$07,$EC ; src="images/spriteA640.png"
 $A660 DEFB $00,$00,$E6,$0F,$0F,$BB,$00,$00,$E0,$07,$07,$E0,$00,$00,$E0,$03 ; />]
 $A670 DEFB $0B,$AA,$00,$00,$F5,$17,$0B,$AA,$80,$00,$F5,$05,$00,$00,$00,$00 ; }
 $A680 DEFB $00,$38,$00,$00,$64,$00,$00,$FA,$00,$00,$FE,$00,$01,$F2,$00,$00 ; {#HTML[<img
 $A690 DEFB $C2,$01,$01,$24,$00,$00,$9A,$02,$03,$BD,$00,$00,$EE,$03,$01,$FB ; src="images/spriteA680.png"
 $A6A0 DEFB $00,$80,$F9,$03,$03,$EE,$C0,$00,$F8,$01,$01,$F8,$00,$00,$F8,$00 ; />]
 $A6B0 DEFB $02,$EA,$80,$40,$FD,$05,$02,$EA,$A0,$40,$7D,$01,$00,$00,$00,$00 ; }
 $A6C0 DEFB $00,$0E,$00,$00,$19,$00,$00,$3E,$80,$80,$3F,$00,$00,$7C,$80,$80 ; {#HTML[<img
 $A6D0 DEFB $70,$00,$00,$49,$00,$80,$A6,$00,$00,$EF,$40,$80,$FB,$00,$00,$7E ; src="images/spriteA6C0.png"
 $A6E0 DEFB $C0,$60,$FE,$00,$00,$FB,$B0,$00,$7E,$00,$00,$7E,$00,$00,$3E,$00 ; />]
 $A6F0 DEFB $00,$BA,$A0,$50,$7F,$01,$00,$BA,$A8,$50,$5F,$00,$00,$00,$00,$00 ; }
 $A700 DEFB $00,$00,$00,$00,$C0,$03,$06,$60,$00,$00,$F0,$0D,$0F,$F0,$00,$00 ; {#HTML[<img
 $A710 DEFB $18,$18,$34,$2C,$00,$00,$FC,$7B,$6C,$7C,$00,$00,$F8,$3A,$2D,$C0 ; src="images/spriteA700.png"
 $A720 DEFB $00,$00,$30,$19,$1F,$F0,$00,$00,$F0,$0F,$0F,$F0,$00,$00,$E0,$0F ; />]
 $A730 DEFB $1E,$50,$00,$00,$A8,$2E,$1F,$50,$00,$00,$A8,$2E,$00,$00,$00,$00 ; }
 $A740 DEFB $00,$00,$00,$00,$F0,$00,$01,$98,$00,$00,$7C,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $A750 DEFB $06,$06,$0D,$0B,$00,$00,$FF,$1E,$1B,$1F,$00,$00,$BE,$0E,$0B,$70 ; src="images/spriteA740.png"
 $A760 DEFB $00,$00,$4C,$06,$07,$FC,$00,$00,$FC,$03,$03,$FC,$00,$00,$F8,$03 ; />]
 $A770 DEFB $07,$94,$00,$00,$AA,$0B,$07,$D4,$00,$00,$AA,$0B,$00,$00,$00,$00 ; }
 $A780 DEFB $00,$00,$00,$00,$3C,$00,$00,$66,$00,$00,$DF,$00,$00,$FF,$00,$80 ; {#HTML[<img
 $A790 DEFB $81,$01,$03,$42,$C0,$C0,$BF,$07,$06,$C7,$C0,$80,$AF,$03,$02,$DC ; src="images/spriteA780.png"
 $A7A0 DEFB $00,$00,$93,$01,$01,$FF,$00,$00,$FF,$00,$00,$FF,$00,$00,$FE,$00 ; />]
 $A7B0 DEFB $01,$E5,$00,$80,$EA,$02,$01,$F5,$00,$80,$EA,$02,$00,$00,$00,$00 ; }
 $A7C0 DEFB $00,$00,$00,$00,$0F,$00,$00,$19,$80,$C0,$37,$00,$00,$3F,$C0,$60 ; {#HTML[<img
 $A7D0 DEFB $60,$00,$00,$D0,$B0,$F0,$EF,$01,$01,$B1,$F0,$E0,$EB,$00,$00,$B7 ; src="images/spriteA7C0.png"
 $A7E0 DEFB $00,$C0,$64,$00,$00,$7F,$C0,$C0,$3F,$00,$00,$3F,$C0,$80,$3F,$00 ; />]
 $A7F0 DEFB $00,$79,$40,$A0,$BA,$00,$00,$7D,$40,$A0,$BA,$00,$00,$00,$00,$00 ; }
 $A800 DEFB $00,$00,$00,$00,$C0,$03,$06,$60,$00,$00,$F0,$0D,$0F,$F0,$00,$00 ; {#HTML[<img
 $A810 DEFB $18,$28,$74,$3C,$00,$00,$DC,$7B,$6C,$F8,$00,$00,$70,$3B,$2D,$C0 ; src="images/spriteA800.png"
 $A820 DEFB $00,$00,$B0,$19,$1F,$F0,$00,$00,$F0,$1B,$2B,$F8,$00,$00,$E4,$5C ; />]
 $A830 DEFB $2A,$E8,$00,$00,$F4,$55,$2A,$E8,$00,$00,$10,$15,$00,$00,$00,$00 ; }
 $A840 DEFB $00,$00,$00,$00,$F0,$00,$01,$98,$00,$00,$7C,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $A850 DEFB $06,$0A,$1D,$0F,$00,$00,$F7,$1E,$1B,$3E,$00,$00,$DC,$0E,$0B,$70 ; src="images/spriteA840.png"
 $A860 DEFB $00,$00,$6C,$06,$07,$FC,$00,$00,$FC,$06,$0A,$FE,$00,$00,$39,$17 ; />]
 $A870 DEFB $0A,$BA,$00,$00,$7D,$15,$0A,$BA,$00,$00,$44,$05,$00,$00,$00,$00 ; }
 $A880 DEFB $00,$00,$00,$00,$3C,$00,$00,$66,$00,$00,$DF,$00,$00,$FF,$00,$80 ; {#HTML[<img
 $A890 DEFB $81,$02,$07,$43,$C0,$C0,$BD,$07,$06,$CF,$80,$00,$B7,$03,$02,$DC ; src="images/spriteA880.png"
 $A8A0 DEFB $00,$00,$9B,$01,$01,$FF,$00,$00,$BF,$01,$02,$BF,$80,$40,$CE,$05 ; />]
 $A8B0 DEFB $02,$AE,$80,$40,$5F,$05,$02,$AE,$80,$00,$51,$01,$00,$00,$00,$00 ; }
 $A8C0 DEFB $00,$00,$00,$00,$0F,$00,$00,$19,$80,$C0,$37,$00,$00,$3F,$C0,$60 ; {#HTML[<img
 $A8D0 DEFB $A0,$00,$01,$D0,$F0,$70,$EF,$01,$01,$B3,$E0,$C0,$ED,$00,$00,$B7 ; src="images/spriteA8C0.png"
 $A8E0 DEFB $00,$C0,$66,$00,$00,$7F,$C0,$C0,$6F,$00,$00,$AF,$E0,$90,$73,$01 ; />]
 $A8F0 DEFB $00,$AB,$A0,$D0,$57,$01,$00,$AB,$A0,$40,$54,$00,$00,$00,$00,$00 ; }
 $A900 DEFB $03,$80,$00,$00,$C0,$04,$0B,$E0,$00,$00,$E0,$0F,$09,$F0,$00,$00 ; {#HTML[<img
 $A910 DEFB $78,$08,$04,$FC,$00,$00,$DC,$05,$0A,$FC,$00,$00,$38,$16,$0D,$74 ; src="images/spriteA900.png"
 $A920 DEFB $00,$00,$EC,$1B,$31,$BC,$00,$00,$FC,$6E,$01,$F8,$00,$00,$F4,$01 ; />]
 $A930 DEFB $17,$DC,$00,$00,$BA,$2B,$57,$54,$00,$00,$28,$2F,$00,$00,$00,$00 ; }
 $A940 DEFB $00,$E0,$00,$00,$30,$01,$02,$F8,$00,$00,$F8,$03,$02,$7C,$00,$00 ; {#HTML[<img
 $A950 DEFB $1E,$02,$01,$3F,$00,$00,$77,$01,$02,$BF,$00,$00,$8E,$05,$03,$5D ; src="images/spriteA940.png"
 $A960 DEFB $00,$00,$FB,$06,$0C,$6F,$00,$00,$BF,$1B,$00,$7E,$00,$00,$7D,$00 ; />]
 $A970 DEFB $05,$F7,$00,$80,$EE,$0A,$15,$D5,$00,$00,$CA,$0B,$00,$00,$00,$00 ; }
 $A980 DEFB $00,$38,$00,$00,$4C,$00,$00,$BE,$00,$00,$FE,$00,$00,$9F,$00,$80 ; {#HTML[<img
 $A990 DEFB $87,$00,$00,$4F,$C0,$C0,$5D,$00,$00,$AF,$C0,$80,$63,$01,$00,$D7 ; src="images/spriteA980.png"
 $A9A0 DEFB $40,$C0,$BE,$01,$03,$1B,$C0,$C0,$EF,$06,$00,$1F,$80,$40,$1F,$00 ; />]
 $A9B0 DEFB $01,$7D,$C0,$A0,$BB,$02,$05,$75,$40,$80,$F2,$02,$00,$00,$00,$00 ; }
 $A9C0 DEFB $00,$0E,$00,$00,$13,$00,$00,$2F,$80,$80,$3F,$00,$00,$27,$C0,$E0 ; {#HTML[<img
 $A9D0 DEFB $21,$00,$00,$13,$F0,$70,$17,$00,$00,$2B,$F0,$E0,$58,$00,$00,$35 ; src="images/spriteA9C0.png"
 $A9E0 DEFB $D0,$B0,$6F,$00,$00,$C6,$F0,$F0,$BB,$01,$00,$07,$E0,$D0,$07,$00 ; />]
 $A9F0 DEFB $00,$5F,$70,$E8,$AE,$00,$01,$5D,$50,$A0,$BC,$00,$00,$00,$00,$00 ; }
 $AA00 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F0,$07,$04,$F8,$00,$00 ; {#HTML[<img
 $AA10 DEFB $38,$04,$02,$78,$00,$00,$FC,$05,$0A,$DC,$00,$00,$7C,$07,$0D,$F8 ; src="images/spriteAA00.png"
 $AA20 DEFB $00,$00,$FC,$19,$37,$7C,$00,$00,$F8,$01,$01,$F8,$00,$00,$F0,$01 ; />]
 $AA30 DEFB $15,$74,$00,$00,$FA,$2B,$55,$74,$00,$00,$E8,$2B,$00,$00,$00,$00 ; }
 $AA40 DEFB $00,$70,$00,$00,$98,$00,$01,$7C,$00,$00,$FC,$01,$01,$3E,$00,$00 ; {#HTML[<img
 $AA50 DEFB $0E,$01,$00,$9E,$00,$00,$7F,$01,$02,$B7,$00,$00,$DF,$01,$03,$7E ; src="images/spriteAA40.png"
 $AA60 DEFB $00,$00,$7F,$06,$0D,$DF,$00,$00,$7E,$00,$00,$7E,$00,$00,$7C,$00 ; />]
 $AA70 DEFB $05,$5D,$00,$80,$FE,$0A,$15,$5D,$00,$00,$FA,$0A,$00,$00,$00,$00 ; }
 $AA80 DEFB $00,$1C,$00,$00,$26,$00,$00,$5F,$00,$00,$7F,$00,$00,$4F,$80,$80 ; {#HTML[<img
 $AA90 DEFB $43,$00,$00,$27,$80,$C0,$5F,$00,$00,$AD,$C0,$C0,$77,$00,$00,$DF ; src="images/spriteAA80.png"
 $AAA0 DEFB $80,$C0,$9F,$01,$03,$77,$C0,$80,$1F,$00,$00,$1F,$80,$00,$1F,$00 ; />]
 $AAB0 DEFB $01,$57,$40,$A0,$BF,$02,$05,$57,$40,$80,$BE,$02,$00,$00,$00,$00 ; }
 $AAC0 DEFB $00,$07,$00,$80,$09,$00,$00,$17,$C0,$C0,$1F,$00,$00,$13,$E0,$E0 ; {#HTML[<img
 $AAD0 DEFB $10,$00,$00,$09,$E0,$F0,$17,$00,$00,$2B,$70,$F0,$1D,$00,$00,$37 ; src="images/spriteAAC0.png"
 $AAE0 DEFB $E0,$F0,$67,$00,$00,$DD,$F0,$E0,$07,$00,$00,$07,$E0,$C0,$07,$00 ; />]
 $AAF0 DEFB $00,$55,$D0,$E8,$AF,$00,$01,$55,$D0,$A0,$AF,$00,$00,$00,$00,$00 ; }
 $AB00 DEFB $03,$80,$00,$00,$C0,$04,$0B,$E0,$00,$00,$E0,$0F,$0B,$D0,$00,$00 ; {#HTML[<img
 $AB10 DEFB $FC,$18,$17,$FE,$00,$00,$DE,$1F,$03,$DF,$00,$00,$7D,$7C,$04,$FB ; src="images/spriteAB00.png"
 $AB20 DEFB $00,$00,$4E,$07,$03,$F8,$00,$00,$F8,$07,$0F,$E0,$00,$00,$E0,$06 ; />]
 $AB30 DEFB $07,$F0,$00,$00,$BA,$0B,$54,$F4,$00,$00,$EA,$0A,$00,$00,$00,$00 ; }
 $AB40 DEFB $00,$E0,$00,$00,$30,$01,$02,$F8,$00,$00,$F8,$03,$02,$FC,$00,$00 ; {#HTML[<img
 $AB50 DEFB $3C,$06,$05,$FF,$00,$80,$FF,$03,$05,$F7,$80,$80,$3F,$3E,$02,$79 ; src="images/spriteAB40.png"
 $AB60 DEFB $80,$00,$A7,$01,$03,$FE,$00,$00,$FE,$0F,$0F,$FC,$00,$00,$3E,$07 ; />]
 $AB70 DEFB $03,$8F,$00,$80,$27,$2F,$15,$51,$C0,$80,$AB,$0A,$00,$00,$00,$00 ; }
 $AB80 DEFB $00,$1C,$00,$00,$26,$00,$00,$5F,$00,$00,$7F,$00,$00,$5F,$80,$C0 ; {#HTML[<img
 $AB90 DEFB $C7,$00,$00,$BF,$E0,$E0,$FD,$01,$00,$BD,$F0,$F0,$C7,$07,$00,$4F ; src="images/spriteAB80.png"
 $ABA0 DEFB $B0,$E0,$74,$00,$00,$7F,$80,$80,$7F,$00,$00,$FF,$00,$80,$F7,$00 ; />]
 $ABB0 DEFB $00,$E7,$E0,$E0,$69,$01,$04,$F5,$20,$A0,$CA,$01,$00,$00,$00,$00 ; }
 $ABC0 DEFB $00,$07,$00,$80,$09,$00,$00,$17,$C0,$C0,$1F,$00,$00,$17,$C0,$E0 ; {#HTML[<img
 $ABD0 DEFB $31,$00,$00,$2F,$F0,$F8,$3F,$00,$00,$5E,$78,$F8,$E3,$03,$00,$27 ; src="images/spriteABC0.png"
 $ABE0 DEFB $D0,$70,$39,$00,$00,$1F,$E0,$E0,$1F,$00,$00,$1F,$C0,$C0,$1F,$00 ; />]
 $ABF0 DEFB $00,$0F,$C0,$E8,$AB,$00,$01,$53,$90,$A8,$A7,$00,$00,$00,$00,$00 ; }
 $AC00 DEFB $03,$80,$00,$00,$C0,$04,$0B,$E0,$00,$00,$E0,$8F,$C7,$E0,$00,$00 ; {#HTML[<img
 $AC10 DEFB $D0,$6D,$37,$68,$00,$00,$E8,$5B,$3F,$C8,$00,$00,$58,$0B,$09,$D8 ; src="images/spriteAC00.png"
 $AC20 DEFB $00,$00,$B0,$0E,$27,$F0,$00,$00,$E0,$3F,$BF,$C0,$00,$00,$E0,$55 ; />]
 $AC30 DEFB $2A,$F0,$00,$00,$70,$55,$0A,$E0,$00,$00,$00,$01,$00,$00,$00,$00 ; }
 $AC40 DEFB $00,$E0,$00,$00,$30,$01,$02,$F8,$00,$00,$F8,$23,$31,$F8,$00,$00 ; {#HTML[<img
 $AC50 DEFB $74,$1B,$0D,$DA,$00,$00,$FA,$16,$0F,$F2,$00,$00,$D6,$02,$02,$76 ; src="images/spriteAC40.png"
 $AC60 DEFB $00,$00,$AC,$03,$09,$FC,$00,$00,$F8,$0F,$2F,$F0,$00,$00,$78,$15 ; />]
 $AC70 DEFB $0A,$BC,$00,$00,$5C,$15,$02,$B8,$00,$00,$40,$00,$00,$00,$00,$00 ; }
 $AC80 DEFB $00,$38,$00,$00,$4C,$00,$00,$BE,$00,$00,$FE,$08,$0C,$7E,$00,$00 ; {#HTML[<img
 $AC90 DEFB $DD,$06,$03,$76,$80,$80,$BE,$05,$03,$FC,$80,$80,$B5,$00,$00,$9D ; src="images/spriteAC80.png"
 $ACA0 DEFB $80,$00,$EB,$00,$02,$7F,$00,$00,$FE,$03,$0B,$FC,$00,$00,$5E,$05 ; />]
 $ACB0 DEFB $02,$AF,$00,$00,$57,$05,$00,$AE,$00,$00,$10,$00,$00,$00,$00,$00 ; }
 $ACC0 DEFB $00,$0E,$00,$00,$13,$00,$00,$2F,$80,$80,$3F,$02,$03,$1F,$80,$40 ; {#HTML[<img
 $ACD0 DEFB $B7,$01,$00,$DD,$A0,$A0,$6F,$01,$00,$FF,$20,$60,$2D,$00,$00,$27 ; src="images/spriteACC0.png"
 $ACE0 DEFB $60,$C0,$3A,$00,$00,$9F,$C0,$80,$FF,$00,$02,$FF,$00,$80,$57,$01 ; />]
 $ACF0 DEFB $00,$AB,$C0,$C0,$55,$01,$00,$2B,$80,$00,$04,$00,$00,$00,$00,$00 ; }
 $AD00 DEFB $07,$00,$00,$00,$80,$09,$17,$C0,$00,$00,$C0,$1F,$4F,$E0,$00,$00 ; {#HTML[<img
 $AD10 DEFB $D0,$6B,$37,$50,$00,$00,$C8,$1B,$2D,$E8,$00,$00,$48,$1F,$0D,$D8 ; src="images/spriteAD00.png"
 $AD20 DEFB $00,$00,$70,$0C,$07,$F0,$00,$00,$E0,$03,$07,$C0,$00,$00,$80,$57 ; />]
 $AD30 DEFB $2F,$A0,$00,$00,$50,$57,$1F,$A0,$00,$00,$00,$0F,$00,$00,$00,$00 ; }
 $AD40 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F0,$07,$13,$F8,$00,$00 ; {#HTML[<img
 $AD50 DEFB $F4,$1A,$0D,$D4,$00,$00,$F2,$06,$0B,$7A,$00,$00,$D2,$07,$03,$76 ; src="images/spriteAD40.png"
 $AD60 DEFB $00,$00,$1C,$03,$01,$FC,$00,$00,$F8,$00,$01,$F0,$00,$00,$E0,$15 ; />]
 $AD70 DEFB $0B,$E8,$00,$00,$D4,$15,$07,$E8,$00,$00,$C0,$03,$00,$00,$00,$00 ; }
 $AD80 DEFB $00,$70,$00,$00,$98,$00,$01,$7C,$00,$00,$FC,$01,$04,$FE,$00,$00 ; {#HTML[<img
 $AD90 DEFB $BD,$06,$03,$75,$00,$80,$BC,$01,$02,$DE,$80,$80,$F4,$01,$00,$DD ; src="images/spriteAD80.png"
 $ADA0 DEFB $80,$00,$C7,$00,$00,$7F,$00,$00,$3E,$00,$00,$7C,$00,$00,$78,$05 ; />]
 $ADB0 DEFB $02,$FA,$00,$00,$75,$05,$01,$FA,$00,$00,$F0,$00,$00,$00,$00,$00 ; }
 $ADC0 DEFB $00,$1C,$00,$00,$26,$00,$00,$5F,$00,$00,$7F,$00,$01,$3F,$80,$40 ; {#HTML[<img
 $ADD0 DEFB $AF,$01,$00,$DD,$40,$20,$6F,$00,$00,$B7,$A0,$20,$7D,$00,$00,$37 ; src="images/spriteADC0.png"
 $ADE0 DEFB $60,$C0,$31,$00,$00,$1F,$C0,$80,$0F,$00,$00,$1F,$00,$00,$5E,$01 ; />]
 $ADF0 DEFB $00,$BE,$80,$40,$5D,$01,$00,$7E,$80,$00,$3C,$00,$00,$00,$00,$00 ; }
 $AE00 DEFB $07,$00,$00,$00,$80,$09,$D7,$C0,$00,$00,$E0,$DF,$F7,$F8,$00,$40 ; {#HTML[<img
 $AE10 DEFB $DC,$F1,$7F,$BE,$C0,$C0,$7F,$3F,$0F,$64,$80,$00,$E7,$0E,$04,$2C ; src="images/spriteAE00.png"
 $AE20 DEFB $00,$00,$F8,$0F,$0F,$F0,$00,$00,$E0,$1E,$1D,$C0,$00,$00,$F0,$1D ; />]
 $AE30 DEFB $0E,$E8,$00,$00,$70,$00,$00,$38,$00,$00,$70,$00,$00,$00,$00,$00 ; }
 $AE40 DEFB $01,$C0,$00,$00,$60,$02,$35,$F0,$00,$00,$F8,$37,$3D,$FE,$00,$10 ; {#HTML[<img
 $AE50 DEFB $77,$3C,$1F,$EF,$B0,$F0,$DF,$0F,$03,$D9,$20,$C0,$B9,$03,$01,$0B ; src="images/spriteAE40.png"
 $AE60 DEFB $00,$00,$FE,$03,$03,$FC,$00,$00,$B8,$07,$07,$70,$00,$00,$7C,$07 ; />]
 $AE70 DEFB $03,$BA,$00,$00,$1C,$00,$00,$0E,$00,$00,$1C,$00,$00,$00,$00,$00 ; }
 $AE80 DEFB $00,$70,$00,$00,$98,$00,$0D,$7C,$00,$00,$FE,$0D,$0F,$7F,$80,$C4 ; {#HTML[<img
 $AE90 DEFB $1D,$0F,$07,$FB,$EC,$FC,$F7,$03,$00,$F6,$48,$70,$EE,$00,$00,$42 ; src="images/spriteAE80.png"
 $AEA0 DEFB $C0,$80,$FF,$00,$00,$FF,$00,$00,$EE,$01,$01,$DC,$00,$00,$DF,$01 ; />]
 $AEB0 DEFB $00,$EE,$80,$00,$07,$00,$00,$03,$80,$00,$07,$00,$00,$00,$00,$00 ; }
 $AEC0 DEFB $00,$1C,$00,$00,$26,$00,$03,$5F,$00,$80,$7F,$03,$03,$DF,$E0,$71 ; {#HTML[<img
 $AED0 DEFB $C7,$03,$01,$FE,$FB,$FF,$FD,$00,$00,$3D,$92,$9C,$3B,$00,$00,$10 ; src="images/spriteAEC0.png"
 $AEE0 DEFB $B0,$E0,$3F,$00,$00,$3F,$C0,$80,$7B,$00,$00,$77,$00,$C0,$77,$00 ; />]
 $AEF0 DEFB $00,$3B,$A0,$C0,$01,$00,$00,$00,$E0,$C0,$01,$00,$00,$00,$00,$00 ; }
 $AF00 DEFB $00,$38,$00,$00,$64,$00,$00,$FA,$C0,$C0,$FE,$01,$07,$FB,$C0,$C0 ; {#HTML[<img
 $AF10 DEFB $E3,$8E,$DF,$7F,$80,$00,$BF,$FF,$49,$BC,$00,$00,$DC,$39,$0D,$08 ; src="images/spriteAF00.png"
 $AF20 DEFB $00,$00,$FC,$07,$03,$FC,$00,$00,$DE,$01,$00,$EE,$00,$00,$EE,$03 ; />]
 $AF30 DEFB $05,$DC,$00,$00,$80,$03,$07,$00,$00,$00,$80,$03,$00,$00,$00,$00 ; }
 $AF40 DEFB $00,$0E,$00,$00,$19,$00,$00,$3E,$B0,$B0,$7F,$00,$01,$FE,$F0,$F0 ; {#HTML[<img
 $AF50 DEFB $B8,$23,$37,$DF,$E0,$C0,$EF,$3F,$12,$6F,$00,$00,$77,$0E,$03,$42 ; src="images/spriteAF40.png"
 $AF60 DEFB $00,$00,$FF,$01,$00,$FF,$00,$80,$77,$00,$00,$3B,$80,$80,$FB,$00 ; />]
 $AF70 DEFB $01,$77,$00,$00,$E0,$00,$01,$C0,$00,$00,$E0,$00,$00,$00,$00,$00 ; }
 $AF80 DEFB $00,$03,$80,$40,$06,$00,$00,$0F,$AC,$EC,$1F,$00,$00,$7F,$BC,$3C ; {#HTML[<img
 $AF90 DEFB $EE,$08,$0D,$F7,$F8,$F0,$FB,$0F,$04,$9B,$C0,$C0,$9D,$03,$00,$D0 ; src="images/spriteAF80.png"
 $AFA0 DEFB $80,$C0,$7F,$00,$00,$3F,$C0,$E0,$1D,$00,$00,$0E,$E0,$E0,$3E,$00 ; />]
 $AFB0 DEFB $00,$5D,$C0,$00,$38,$00,$00,$70,$00,$00,$38,$00,$00,$00,$00,$00 ; }
 $AFC0 DEFB $00,$00,$E0,$90,$01,$00,$00,$03,$EB,$FB,$07,$00,$00,$1F,$EF,$8F ; {#HTML[<img
 $AFD0 DEFB $3B,$02,$03,$7D,$FE,$FC,$FE,$03,$01,$26,$F0,$70,$E7,$00,$00,$34 ; src="images/spriteAFC0.png"
 $AFE0 DEFB $20,$F0,$1F,$00,$00,$0F,$F0,$78,$07,$00,$00,$03,$B8,$B8,$0F,$00 ; />]
 $AFF0 DEFB $00,$17,$70,$00,$0E,$00,$00,$1C,$00,$00,$0E,$00,$00,$00,$00,$00 ; }
 $B000 DEFB $0F,$00,$00,$00,$80,$1F,$3F,$C0,$00,$00,$C0,$3F,$3F,$C0,$00,$00 ; {#HTML[<img
 $B010 DEFB $60,$5F,$F0,$E0,$00,$00,$F0,$FF,$7F,$F0,$00,$00,$B0,$77,$39,$70 ; src="images/spriteB000.png"
 $B020 DEFB $00,$00,$E0,$1E,$31,$00,$00,$00,$C0,$3F,$3F,$80,$00,$00,$40,$79 ; />]
 $B030 DEFB $BA,$A0,$00,$00,$40,$7D,$BA,$A0,$00,$00,$00,$45,$00,$00,$00,$00 ; }
 $B040 DEFB $00,$00,$00,$00,$C0,$03,$07,$E0,$00,$00,$F0,$0F,$0F,$F0,$00,$00 ; {#HTML[<img
 $B050 DEFB $F0,$0F,$17,$D8,$00,$00,$38,$3C,$3F,$FC,$00,$00,$CC,$3B,$1D,$3C ; src="images/spriteB040.png"
 $B060 DEFB $00,$00,$F8,$1E,$09,$20,$00,$00,$F0,$0F,$0F,$E0,$00,$00,$E4,$1E ; />]
 $B070 DEFB $2E,$E8,$00,$00,$54,$1F,$2E,$A8,$00,$00,$50,$15,$00,$00,$00,$00 ; }
 $B080 DEFB $00,$F0,$00,$00,$F8,$01,$03,$FC,$00,$00,$FC,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $B090 DEFB $F6,$05,$0F,$0E,$00,$00,$FF,$0F,$0F,$FF,$00,$00,$E7,$05,$06,$9E ; src="images/spriteB080.png"
 $B0A0 DEFB $00,$00,$7C,$02,$01,$90,$00,$00,$FC,$03,$03,$F8,$00,$00,$BC,$07 ; />]
 $B0B0 DEFB $0B,$BA,$00,$00,$7C,$05,$0A,$BA,$00,$00,$50,$05,$00,$00,$00,$00 ; }
 $B0C0 DEFB $00,$00,$00,$00,$3C,$00,$00,$7E,$00,$00,$FF,$00,$00,$FF,$00,$00 ; {#HTML[<img
 $B0D0 DEFB $FF,$00,$01,$7D,$80,$80,$C3,$03,$03,$FF,$C0,$C0,$7E,$03,$03,$99 ; src="images/spriteB0C0.png"
 $B0E0 DEFB $C0,$80,$EF,$01,$00,$94,$80,$00,$FF,$00,$00,$FE,$00,$40,$EE,$01 ; />]
 $B0F0 DEFB $02,$AE,$80,$40,$5F,$01,$02,$AE,$80,$00,$51,$01,$00,$00,$00,$00 ; }
 $B100 DEFB $00,$00,$00,$00,$00,$0F,$19,$80,$00,$00,$C0,$37,$3F,$C0,$00,$00 ; {#HTML[<img
 $B110 DEFB $A0,$7F,$D9,$A0,$00,$00,$A0,$FF,$7E,$B0,$00,$00,$B0,$3E,$3C,$B0 ; src="images/spriteB100.png"
 $B120 DEFB $00,$00,$90,$31,$25,$A0,$00,$00,$C0,$3F,$3F,$80,$00,$00,$80,$3B ; />]
 $B130 DEFB $3A,$80,$00,$00,$50,$7D,$BA,$A0,$00,$00,$40,$55,$00,$00,$00,$00 ; }
 $B140 DEFB $00,$00,$00,$00,$C0,$03,$06,$60,$00,$00,$F0,$0D,$0F,$F0,$00,$00 ; {#HTML[<img
 $B150 DEFB $E8,$0F,$16,$68,$00,$00,$E8,$3F,$3F,$AC,$00,$00,$AC,$3F,$1F,$2C ; src="images/spriteB140.png"
 $B160 DEFB $00,$00,$64,$0C,$09,$68,$00,$00,$F0,$0F,$0F,$E0,$00,$00,$E0,$0E ; />]
 $B170 DEFB $0E,$E0,$00,$00,$54,$1F,$2E,$A8,$00,$00,$50,$15,$00,$00,$00,$00 ; }
 $B180 DEFB $00,$00,$00,$00,$F0,$00,$01,$98,$00,$00,$7C,$03,$03,$FC,$00,$00 ; {#HTML[<img
 $B190 DEFB $FA,$03,$05,$9A,$00,$00,$FA,$0F,$0F,$EB,$00,$00,$EB,$0F,$0F,$CB ; src="images/spriteB180.png"
 $B1A0 DEFB $00,$00,$19,$0B,$06,$5A,$00,$00,$FC,$03,$03,$F8,$00,$00,$B8,$03 ; />]
 $B1B0 DEFB $02,$B8,$00,$00,$7D,$05,$0A,$BA,$00,$00,$54,$05,$00,$00,$00,$00 ; }
 $B1C0 DEFB $00,$00,$00,$00,$3C,$00,$00,$66,$00,$00,$DF,$00,$00,$FF,$00,$80 ; {#HTML[<img
 $B1D0 DEFB $FE,$00,$01,$66,$80,$80,$FE,$03,$03,$FA,$C0,$C0,$FA,$03,$01,$F2 ; src="images/spriteB1C0.png"
 $B1E0 DEFB $C0,$40,$C6,$00,$00,$96,$80,$00,$FF,$00,$00,$FE,$00,$00,$EE,$00 ; />]
 $B1F0 DEFB $00,$EE,$00,$40,$5F,$01,$02,$AE,$80,$00,$55,$01,$00,$00,$00,$00 ; }
 $B200 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[<img
 $B210 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB200.png"
 $B220 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; />]
 $B230 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B240 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[<img
 $B250 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB240.png"
 $B260 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; />]
 $B270 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B280 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[<img
 $B290 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB280.png"
 $B2A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; />]
 $B2B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B2C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[<img
 $B2D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB2C0.png"
 $B2E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; />]
 $B2F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B300 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F0,$0F,$05,$F0,$00,$00 ; {#HTML[<img
 $B310 DEFB $78,$04,$0B,$FC,$00,$00,$FE,$07,$07,$9E,$00,$00,$FE,$02,$01,$F4 ; src="images/spriteB300.png"
 $B320 DEFB $00,$00,$DC,$07,$0F,$F8,$00,$00,$F8,$1B,$07,$70,$00,$00,$F0,$06 ; />]
 $B330 DEFB $02,$F0,$00,$00,$FA,$2A,$54,$E4,$00,$00,$EA,$29,$00,$00,$00,$00 ; }
 $B340 DEFB $00,$00,$10,$80,$41,$30,$78,$00,$80,$00,$8E,$61,$07,$5E,$00,$80 ; {#HTML[<img
 $B350 DEFB $D9,$07,$1D,$FF,$80,$40,$DE,$2F,$1F,$6D,$C0,$C0,$F3,$13,$19,$BE ; src="images/spriteB340.png"
 $B360 DEFB $C0,$40,$EF,$1E,$0E,$FB,$80,$80,$FF,$5F,$1C,$D3,$80,$00,$BD,$05 ; />]
 $B370 DEFB $23,$7F,$00,$80,$6C,$08,$18,$71,$C0,$C0,$01,$00,$00,$00,$00,$00 ; }
 $B380 DEFB $63,$00,$00,$80,$C9,$47,$05,$C2,$C0,$C0,$CA,$07,$01,$83,$E0,$E0 ; {#HTML[<img
 $B390 DEFB $01,$30,$38,$30,$60,$10,$B8,$7C,$74,$3A,$00,$E0,$10,$2C,$3C,$00 ; src="images/spriteB380.png"
 $B3A0 DEFB $F0,$F0,$20,$19,$03,$24,$60,$60,$0C,$20,$20,$00,$00,$20,$00,$07 ; />]
 $B3B0 DEFB $47,$A7,$00,$80,$87,$07,$03,$17,$80,$10,$03,$00,$00,$00,$00,$00 ; }
 $B3C0 DEFB $03,$11,$00,$80,$81,$03,$18,$80,$00,$00,$02,$08,$40,$03,$00,$20 ; {#HTML[<img
 $B3D0 DEFB $20,$C4,$E0,$00,$00,$00,$00,$60,$62,$12,$30,$20,$18,$00,$00,$00 ; src="images/spriteB3C0.png"
 $B3E0 DEFB $00,$20,$00,$18,$00,$00,$10,$10,$08,$23,$01,$20,$80,$00,$30,$00 ; />]
 $B3F0 DEFB $02,$00,$00,$00,$00,$60,$70,$07,$00,$00,$26,$30,$00,$00,$00,$00 ; }
 $B400 DEFB $01,$C0,$00,$00,$60,$02,$05,$F0,$00,$00,$F0,$CF,$E4,$78,$00,$00 ; {#HTML[<img
 $B410 DEFB $3C,$7C,$3B,$FE,$00,$00,$FE,$1F,$07,$CF,$00,$00,$7F,$07,$02,$FB ; src="images/spriteB400.png"
 $B420 DEFB $00,$00,$EE,$03,$06,$F8,$00,$00,$F8,$0D,$07,$70,$00,$00,$F0,$06 ; />]
 $B430 DEFB $02,$F0,$00,$00,$FA,$2A,$54,$E4,$00,$00,$EA,$29,$00,$00,$00,$00 ; }
 $B440 DEFB $00,$00,$01,$18,$04,$03,$07,$80,$08,$E0,$18,$06,$00,$75,$E0,$98 ; {#HTML[<img
 $B450 DEFB $7D,$00,$01,$DF,$F8,$E4,$FD,$02,$01,$F6,$DC,$3C,$3F,$01,$01,$9B ; src="images/spriteB440.png"
 $B460 DEFB $EC,$F4,$EE,$01,$00,$EF,$B8,$F8,$FF,$05,$01,$CD,$38,$D0,$5B,$00 ; />]
 $B470 DEFB $02,$37,$F0,$C8,$86,$00,$01,$87,$1C,$1C,$00,$00,$00,$00,$00,$00 ; }
 $B480 DEFB $06,$30,$00,$98,$7C,$04,$00,$5C,$2C,$AC,$7C,$00,$00,$18,$3E,$1E ; {#HTML[<img
 $B490 DEFB $00,$03,$03,$83,$06,$81,$CB,$07,$07,$43,$A0,$0E,$C1,$02,$03,$C0 ; src="images/spriteB480.png"
 $B4A0 DEFB $0F,$0F,$92,$01,$00,$32,$46,$C6,$00,$02,$02,$00,$00,$02,$70,$00 ; />]
 $B4B0 DEFB $04,$7A,$70,$78,$78,$00,$00,$31,$78,$31,$00,$00,$00,$00,$00,$00 ; }
 $B4C0 DEFB $00,$31,$10,$18,$38,$00,$01,$88,$00,$20,$80,$00,$04,$00,$30,$02 ; {#HTML[<img
 $B4D0 DEFB $42,$0C,$0E,$00,$00,$00,$00,$06,$06,$21,$23,$82,$01,$00,$00,$00 ; src="images/spriteB4C0.png"
 $B4E0 DEFB $00,$02,$80,$01,$00,$00,$01,$81,$30,$02,$00,$12,$08,$00,$03,$00 ; />]
 $B4F0 DEFB $00,$20,$00,$00,$00,$06,$07,$00,$70,$60,$02,$03,$00,$00,$00,$00 ; }
 $B500 DEFB $31,$E0,$00,$00,$70,$32,$75,$FB,$00,$00,$FB,$77,$74,$0F,$00,$00 ; {#HTML[<img
 $B510 DEFB $9E,$7A,$3F,$3E,$00,$00,$F4,$3F,$17,$7C,$00,$00,$5C,$1D,$1E,$38 ; src="images/spriteB500.png"
 $B520 DEFB $00,$00,$8A,$68,$0E,$30,$00,$00,$50,$0D,$1F,$70,$00,$00,$F8,$36 ; />]
 $B530 DEFB $78,$3C,$00,$00,$9C,$38,$18,$8E,$00,$00,$07,$38,$00,$00,$00,$00 ; }
 $B540 DEFB $0C,$78,$00,$00,$9C,$0C,$1D,$7E,$C0,$C0,$FE,$1D,$1D,$03,$C0,$80 ; {#HTML[<img
 $B550 DEFB $A7,$1E,$0F,$CF,$80,$00,$FD,$0F,$05,$DF,$00,$00,$57,$07,$07,$8E ; src="images/spriteB540.png"
 $B560 DEFB $00,$80,$22,$1A,$03,$8C,$00,$00,$54,$03,$07,$DC,$00,$00,$BE,$0D ; />]
 $B570 DEFB $1E,$0F,$00,$00,$27,$0E,$06,$23,$80,$C0,$01,$0E,$00,$00,$00,$00 ; }
 $B580 DEFB $03,$1E,$00,$00,$27,$03,$07,$5F,$B0,$B0,$7F,$07,$07,$40,$F0,$E0 ; {#HTML[<img
 $B590 DEFB $A9,$07,$03,$F3,$E0,$40,$FF,$03,$01,$77,$C0,$C0,$D5,$01,$01,$E3 ; src="images/spriteB580.png"
 $B5A0 DEFB $80,$A0,$88,$06,$00,$E3,$00,$00,$D5,$00,$01,$F7,$00,$80,$6F,$03 ; />]
 $B5B0 DEFB $07,$83,$C0,$C0,$89,$03,$01,$88,$E0,$70,$80,$03,$00,$00,$00,$00 ; }
 $B5C0 DEFB $00,$C7,$80,$C0,$C9,$00,$01,$D7,$EC,$EC,$DF,$01,$01,$D0,$3C,$78 ; {#HTML[<img
 $B5D0 DEFB $EA,$01,$00,$FC,$F8,$D0,$FF,$00,$00,$5D,$F0,$70,$75,$00,$00,$78 ; src="images/spriteB5C0.png"
 $B5E0 DEFB $E0,$28,$A2,$01,$00,$38,$C0,$40,$35,$00,$00,$7D,$C0,$E0,$DB,$00 ; />]
 $B5F0 DEFB $01,$E0,$F0,$70,$E2,$00,$00,$62,$38,$1C,$E0,$00,$00,$00,$00,$00 ; }
 $B600 DEFB $07,$8C,$00,$00,$4C,$0E,$DF,$AE,$00,$00,$EE,$DF,$F0,$2E,$00,$00 ; {#HTML[<img
 $B610 DEFB $5E,$79,$7C,$FC,$00,$00,$FC,$2F,$3E,$E8,$00,$00,$B8,$3A,$1C,$78 ; src="images/spriteB600.png"
 $B620 DEFB $00,$00,$16,$51,$0C,$70,$00,$00,$B0,$0A,$0E,$F8,$00,$00,$6C,$1F ; />]
 $B630 DEFB $3C,$1E,$00,$00,$1C,$39,$71,$18,$00,$00,$1C,$E0,$00,$00,$00,$00 ; }
 $B640 DEFB $01,$E3,$00,$00,$93,$03,$37,$EB,$80,$80,$FB,$37,$3C,$0B,$80,$80 ; {#HTML[<img
 $B650 DEFB $57,$1E,$1F,$3F,$00,$00,$FF,$0B,$0F,$BA,$00,$00,$AE,$0E,$07,$1E ; src="images/spriteB640.png"
 $B660 DEFB $00,$80,$45,$14,$03,$1C,$00,$00,$AC,$02,$03,$BE,$00,$00,$DB,$07 ; />]
 $B670 DEFB $0F,$07,$80,$00,$47,$0E,$1C,$46,$00,$00,$07,$38,$00,$00,$00,$00 ; }
 $B680 DEFB $00,$78,$C0,$C0,$E4,$00,$0D,$FA,$E0,$E0,$FE,$0D,$0F,$02,$E0,$E0 ; {#HTML[<img
 $B690 DEFB $95,$07,$07,$CF,$C0,$C0,$FF,$02,$03,$EE,$80,$80,$AB,$03,$01,$C7 ; src="images/spriteB680.png"
 $B6A0 DEFB $80,$60,$11,$05,$00,$C7,$00,$00,$AB,$00,$00,$EF,$80,$C0,$F6,$01 ; />]
 $B6B0 DEFB $03,$C1,$E0,$C0,$91,$03,$07,$11,$80,$C0,$01,$0E,$00,$00,$00,$00 ; }
 $B6C0 DEFB $00,$1E,$30,$30,$39,$00,$03,$7E,$B8,$B8,$7F,$03,$03,$C0,$B8,$78 ; {#HTML[<img
 $B6D0 DEFB $E5,$01,$01,$F3,$F0,$F0,$BF,$00,$00,$FB,$A0,$E0,$EA,$00,$00,$71 ; src="images/spriteB6C0.png"
 $B6E0 DEFB $E0,$58,$44,$01,$00,$31,$C0,$C0,$2A,$00,$00,$3B,$E0,$B0,$7D,$00 ; />]
 $B6F0 DEFB $00,$F0,$78,$70,$E4,$00,$01,$C4,$60,$70,$80,$03,$00,$00,$00,$00 ; }
 $B700 DEFB $00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$01,$00,$00,$00 ; {#HTML[<img
 $B710 DEFB $20,$08,$01,$00,$00,$00,$80,$03,$57,$D4,$00,$00,$80,$03,$01,$00 ; src="images/spriteB700.png"
 $B720 DEFB $00,$00,$20,$08,$01,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00 ; />]
 $B730 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B740 DEFB $00,$00,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00,$00,$40,$00,$00 ; {#HTML[<img
 $B750 DEFB $08,$02,$00,$40,$00,$00,$E0,$00,$15,$F5,$00,$00,$E0,$00,$00,$40 ; src="images/spriteB740.png"
 $B760 DEFB $00,$00,$08,$02,$00,$40,$00,$00,$00,$00,$00,$40,$00,$00,$00,$00 ; />]
 $B770 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B780 DEFB $00,$00,$00,$00,$00,$00,$00,$10,$00,$00,$00,$00,$00,$10,$00,$00 ; {#HTML[<img
 $B790 DEFB $82,$00,$00,$10,$00,$00,$38,$00,$05,$7D,$40,$00,$38,$00,$00,$10 ; src="images/spriteB780.png"
 $B7A0 DEFB $00,$00,$82,$00,$00,$10,$00,$00,$00,$00,$00,$10,$00,$00,$00,$00 ; />]
 $B7B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B7C0 DEFB $00,$00,$00,$00,$00,$00,$00,$04,$00,$00,$00,$00,$00,$04,$00,$80 ; {#HTML[<img
 $B7D0 DEFB $20,$00,$00,$04,$00,$00,$0E,$00,$01,$5F,$50,$00,$0E,$00,$00,$04 ; src="images/spriteB7C0.png"
 $B7E0 DEFB $00,$80,$20,$00,$00,$04,$00,$00,$00,$00,$00,$04,$00,$00,$00,$00 ; />]
 $B7F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B800 DEFB $00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$08,$21,$01,$20,$00,$00 ; {#HTML[<img
 $B810 DEFB $60,$18,$0D,$C0,$00,$00,$80,$07,$B7,$DA,$00,$00,$C0,$03,$07,$60 ; src="images/spriteB800.png"
 $B820 DEFB $00,$00,$30,$0C,$09,$00,$00,$00,$08,$21,$00,$00,$00,$00,$00,$01 ; />]
 $B830 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B840 DEFB $00,$00,$00,$00,$40,$00,$00,$00,$00,$00,$42,$08,$00,$48,$00,$00 ; {#HTML[<img
 $B850 DEFB $18,$06,$03,$70,$00,$00,$E0,$01,$2D,$F6,$80,$00,$F0,$00,$01,$D8 ; src="images/spriteB840.png"
 $B860 DEFB $00,$00,$0C,$03,$02,$40,$00,$00,$42,$08,$00,$00,$00,$00,$40,$00 ; />]
 $B870 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B880 DEFB $00,$00,$00,$00,$10,$00,$00,$00,$00,$80,$10,$02,$00,$12,$00,$00 ; {#HTML[<img
 $B890 DEFB $86,$01,$00,$DC,$00,$00,$78,$00,$0B,$7D,$A0,$00,$3C,$00,$00,$76 ; src="images/spriteB880.png"
 $B8A0 DEFB $00,$00,$C3,$00,$00,$90,$00,$80,$10,$02,$00,$00,$00,$00,$10,$00 ; />]
 $B8B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B8C0 DEFB $00,$00,$00,$00,$04,$00,$00,$00,$00,$20,$84,$00,$00,$04,$80,$80 ; {#HTML[<img
 $B8D0 DEFB $61,$00,$00,$37,$00,$00,$1E,$00,$02,$DF,$68,$00,$0F,$00,$00,$1D ; src="images/spriteB8C0.png"
 $B8E0 DEFB $80,$C0,$30,$00,$00,$24,$00,$20,$84,$00,$00,$00,$00,$00,$04,$00 ; />]
 $B8F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B900 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$40,$07,$0B,$80,$00,$00 ; {#HTML[<img
 $B910 DEFB $80,$0B,$0D,$80,$00,$00,$00,$07,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB900.png"
 $B920 DEFB $00,$00,$00,$00,$03,$80,$00,$00,$C0,$04,$05,$C0,$00,$00,$C0,$07 ; />]
 $B930 DEFB $03,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B940 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$D0,$01,$02,$E0,$00,$00 ; {#HTML[<img
 $B950 DEFB $E0,$02,$03,$60,$00,$00,$C0,$01,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB940.png"
 $B960 DEFB $00,$00,$00,$00,$00,$E0,$00,$00,$30,$01,$01,$70,$00,$00,$F0,$01 ; />]
 $B970 DEFB $00,$E0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B980 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$74,$00,$00,$B8,$00,$00 ; {#HTML[<img
 $B990 DEFB $B8,$00,$00,$D8,$00,$00,$70,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB980.png"
 $B9A0 DEFB $00,$00,$00,$00,$00,$38,$00,$00,$4C,$00,$00,$5C,$00,$00,$7C,$00 ; />]
 $B9B0 DEFB $00,$38,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $B9C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$1D,$00,$00,$2E,$00,$00 ; {#HTML[<img
 $B9D0 DEFB $2E,$00,$00,$36,$00,$00,$1C,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteB9C0.png"
 $B9E0 DEFB $00,$00,$00,$00,$00,$0E,$00,$00,$13,$00,$00,$17,$00,$00,$1F,$00 ; />]
 $B9F0 DEFB $00,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BA00 DEFB $00,$00,$00,$00,$E0,$01,$06,$D0,$00,$00,$F0,$0D,$0B,$D0,$00,$00 ; {#HTML[<img
 $BA10 DEFB $C0,$0B,$0D,$C0,$00,$00,$80,$07,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBA00.png"
 $BA20 DEFB $00,$00,$C0,$03,$04,$E0,$00,$00,$E0,$05,$07,$E0,$00,$00,$E0,$07 ; />]
 $BA30 DEFB $03,$C0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BA40 DEFB $00,$00,$00,$00,$78,$00,$01,$B4,$00,$00,$7C,$03,$02,$F4,$00,$00 ; {#HTML[<img
 $BA50 DEFB $F0,$02,$03,$70,$00,$00,$E0,$01,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBA40.png"
 $BA60 DEFB $00,$00,$F0,$00,$01,$38,$00,$00,$78,$01,$01,$F8,$00,$00,$F8,$01 ; />]
 $BA70 DEFB $00,$F0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BA80 DEFB $00,$00,$00,$00,$1E,$00,$00,$6D,$00,$00,$DF,$00,$00,$BD,$00,$00 ; {#HTML[<img
 $BA90 DEFB $BC,$00,$00,$DC,$00,$00,$78,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBA80.png"
 $BAA0 DEFB $00,$00,$3C,$00,$00,$4E,$00,$00,$5E,$00,$00,$7E,$00,$00,$7E,$00 ; />]
 $BAB0 DEFB $00,$3C,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BAC0 DEFB $00,$00,$00,$80,$07,$00,$00,$1B,$40,$C0,$37,$00,$00,$2F,$40,$00 ; {#HTML[<img
 $BAD0 DEFB $2F,$00,$00,$37,$00,$00,$1E,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBAC0.png"
 $BAE0 DEFB $00,$00,$0F,$00,$00,$13,$80,$80,$17,$00,$00,$1F,$80,$80,$1F,$00 ; />]
 $BAF0 DEFB $00,$0F,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BB00 DEFB $00,$00,$00,$00,$E0,$03,$0D,$F0,$00,$00,$E8,$1B,$17,$F8,$00,$00 ; {#HTML[<img
 $BB10 DEFB $E8,$17,$17,$E0,$00,$00,$C0,$1B,$0F,$80,$00,$00,$00,$06,$01,$80 ; src="images/spriteBB00.png"
 $BB20 DEFB $00,$00,$E0,$07,$0C,$F0,$00,$00,$F0,$09,$19,$F8,$00,$00,$F8,$1B ; />]
 $BB30 DEFB $0F,$F0,$00,$00,$F0,$0F,$07,$E0,$00,$00,$80,$01,$00,$00,$00,$00 ; }
 $BB40 DEFB $00,$00,$00,$00,$F8,$00,$03,$7C,$00,$00,$FA,$06,$05,$FE,$00,$00 ; {#HTML[<img
 $BB50 DEFB $FA,$05,$05,$F8,$00,$00,$F0,$06,$03,$E0,$00,$00,$80,$01,$00,$60 ; src="images/spriteBB40.png"
 $BB60 DEFB $00,$00,$F8,$01,$03,$3C,$00,$00,$7C,$02,$06,$7E,$00,$00,$FE,$06 ; />]
 $BB70 DEFB $03,$FC,$00,$00,$FC,$03,$01,$F8,$00,$00,$60,$00,$00,$00,$00,$00 ; }
 $BB80 DEFB $00,$00,$00,$00,$3E,$00,$00,$DF,$00,$80,$BE,$01,$01,$7F,$80,$80 ; {#HTML[<img
 $BB90 DEFB $7E,$01,$01,$7E,$00,$00,$BC,$01,$00,$F8,$00,$00,$60,$00,$00,$18 ; src="images/spriteBB80.png"
 $BBA0 DEFB $00,$00,$7E,$00,$00,$CF,$00,$00,$9F,$00,$01,$9F,$80,$80,$BF,$01 ; />]
 $BBB0 DEFB $00,$FF,$00,$00,$FF,$00,$00,$7E,$00,$00,$18,$00,$00,$00,$00,$00 ; }
 $BBC0 DEFB $00,$00,$00,$80,$0F,$00,$00,$37,$C0,$A0,$6F,$00,$00,$5F,$E0,$A0 ; {#HTML[<img
 $BBD0 DEFB $5F,$00,$00,$5F,$80,$00,$6F,$00,$00,$3E,$00,$00,$18,$00,$00,$06 ; src="images/spriteBBC0.png"
 $BBE0 DEFB $00,$80,$1F,$00,$00,$33,$C0,$C0,$27,$00,$00,$67,$E0,$E0,$6F,$00 ; />]
 $BBF0 DEFB $00,$3F,$C0,$C0,$3F,$00,$00,$1F,$80,$00,$06,$00,$00,$00,$00,$00 ; }
 $BC00 DEFB $37,$80,$00,$00,$40,$48,$53,$20,$00,$00,$E0,$5F,$50,$30,$00,$00 ; {#HTML[<img
 $BC10 DEFB $58,$48,$EF,$F8,$00,$00,$B8,$CA,$7D,$78,$00,$00,$F0,$4B,$36,$70 ; src="images/spriteBC00.png"
 $BC20 DEFB $00,$00,$20,$3F,$1F,$E0,$00,$00,$E0,$1F,$1D,$C0,$00,$00,$E0,$29 ; />]
 $BC30 DEFB $55,$D0,$00,$00,$E0,$2B,$55,$D0,$00,$00,$20,$0A,$00,$00,$00,$00 ; }
 $BC40 DEFB $0D,$E0,$00,$00,$10,$12,$14,$C8,$00,$00,$F8,$17,$14,$0E,$00,$00 ; {#HTML[<img
 $BC50 DEFB $16,$12,$3B,$FE,$00,$00,$AE,$32,$1F,$56,$00,$00,$AC,$12,$0D,$5C ; src="images/spriteBC40.png"
 $BC60 DEFB $00,$00,$F4,$0F,$07,$F8,$00,$00,$F8,$07,$07,$70,$00,$00,$F8,$0F ; />]
 $BC70 DEFB $17,$74,$00,$00,$F8,$0A,$15,$74,$00,$00,$A0,$08,$00,$00,$00,$00 ; }
 $BC80 DEFB $00,$78,$00,$00,$84,$03,$05,$32,$00,$00,$FF,$05,$05,$03,$80,$80 ; {#HTML[<img
 $BC90 DEFB $85,$04,$04,$FF,$80,$80,$AB,$0E,$0C,$D5,$80,$00,$AB,$07,$04,$D7 ; src="images/spriteBC80.png"
 $BCA0 DEFB $00,$00,$FE,$03,$01,$FE,$00,$00,$FE,$01,$01,$DC,$00,$00,$FE,$03 ; />]
 $BCB0 DEFB $05,$DD,$00,$00,$EA,$03,$05,$D5,$00,$00,$2A,$02,$00,$00,$00,$00 ; }
 $BCC0 DEFB $00,$1E,$00,$00,$E1,$00,$01,$4C,$80,$80,$7F,$01,$01,$40,$E0,$60 ; {#HTML[<img
 $BCD0 DEFB $21,$01,$01,$3F,$E0,$E0,$AA,$03,$03,$35,$60,$C0,$EA,$01,$01,$35 ; src="images/spriteBCC0.png"
 $BCE0 DEFB $C0,$40,$FF,$00,$00,$7F,$80,$80,$7F,$00,$00,$77,$00,$80,$F2,$00 ; />]
 $BCF0 DEFB $01,$75,$40,$80,$F2,$00,$01,$75,$40,$80,$8A,$00,$00,$00,$00,$00 ; }
 $BD00 DEFB $02,$00,$00,$00,$00,$05,$06,$00,$00,$00,$00,$18,$38,$00,$00,$00 ; {#HTML[<img
 $BD10 DEFB $00,$78,$F0,$00,$00,$00,$00,$E0,$C0,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBD00.png"
 $BD20 DEFB $00,$00,$00,$70,$F8,$00,$00,$00,$00,$70,$00,$00,$00,$00,$00,$00 ; />]
 $BD30 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BD40 DEFB $00,$80,$00,$00,$40,$01,$01,$80,$00,$00,$00,$06,$0E,$00,$00,$00 ; {#HTML[<img
 $BD50 DEFB $00,$1E,$3C,$00,$00,$00,$00,$38,$30,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBD40.png"
 $BD60 DEFB $00,$00,$00,$1C,$3E,$00,$00,$00,$00,$1C,$00,$00,$00,$00,$00,$00 ; />]
 $BD70 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BD80 DEFB $00,$20,$00,$00,$50,$00,$00,$60,$00,$00,$80,$01,$03,$80,$00,$00 ; {#HTML[<img
 $BD90 DEFB $80,$07,$0F,$00,$00,$00,$00,$0E,$0C,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBD80.png"
 $BDA0 DEFB $00,$00,$00,$07,$0F,$80,$00,$00,$00,$07,$00,$00,$00,$00,$00,$00 ; />]
 $BDB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BDC0 DEFB $00,$08,$00,$00,$14,$00,$00,$18,$00,$00,$60,$00,$00,$E0,$00,$00 ; {#HTML[<img
 $BDD0 DEFB $E0,$01,$03,$C0,$00,$00,$80,$03,$03,$00,$00,$00,$00,$00,$00,$00 ; src="images/spriteBDC0.png"
 $BDE0 DEFB $00,$00,$C0,$01,$03,$E0,$00,$00,$C0,$01,$00,$00,$00,$00,$00,$00 ; />]
 $BDF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BE00 DEFB $A0,$00,$00,$00,$00,$A0,$40,$00,$00,$00,$00,$E0,$E0,$00,$00,$00 ; {#HTML[<img
 $BE10 DEFB $00,$E0,$E0,$00,$00,$00,$00,$E0,$E0,$00,$00,$00,$00,$40,$00,$00 ; src="images/spriteBE00.png"
 $BE20 DEFB $00,$00,$00,$7C,$FE,$00,$00,$00,$00,$7C,$00,$00,$00,$00,$00,$00 ; />]
 $BE30 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BE40 DEFB $28,$00,$00,$00,$00,$28,$10,$00,$00,$00,$00,$38,$38,$00,$00,$00 ; {#HTML[<img
 $BE50 DEFB $00,$38,$38,$00,$00,$00,$00,$38,$38,$00,$00,$00,$00,$10,$00,$00 ; src="images/spriteBE40.png"
 $BE60 DEFB $00,$00,$00,$1F,$3F,$80,$00,$00,$00,$1F,$00,$00,$00,$00,$00,$00 ; />]
 $BE70 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BE80 DEFB $0A,$00,$00,$00,$00,$0A,$04,$00,$00,$00,$00,$0E,$0E,$00,$00,$00 ; {#HTML[<img
 $BE90 DEFB $00,$0E,$0E,$00,$00,$00,$00,$0E,$0E,$00,$00,$00,$00,$04,$00,$00 ; src="images/spriteBE80.png"
 $BEA0 DEFB $00,$00,$C0,$07,$0F,$E0,$00,$00,$C0,$07,$00,$00,$00,$00,$00,$00 ; />]
 $BEB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BEC0 DEFB $02,$80,$00,$00,$80,$02,$01,$00,$00,$00,$80,$03,$03,$80,$00,$00 ; {#HTML[<img
 $BED0 DEFB $80,$03,$03,$80,$00,$00,$80,$03,$03,$80,$00,$00,$00,$01,$00,$00 ; src="images/spriteBEC0.png"
 $BEE0 DEFB $00,$00,$F0,$01,$03,$F8,$00,$00,$F0,$01,$00,$00,$00,$00,$00,$00 ; />]
 $BEF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BF00 DEFB $40,$00,$00,$00,$00,$A0,$60,$00,$00,$00,$00,$18,$1C,$00,$00,$00 ; {#HTML[<img
 $BF10 DEFB $00,$1E,$0F,$00,$00,$00,$00,$07,$03,$00,$00,$00,$00,$00,$3C,$00 ; src="images/spriteBF00.png"
 $BF20 DEFB $00,$00,$00,$FF,$FF,$00,$00,$00,$00,$FF,$3C,$00,$00,$00,$00,$00 ; />]
 $BF30 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BF40 DEFB $10,$00,$00,$00,$00,$28,$18,$00,$00,$00,$00,$06,$07,$00,$00,$00 ; {#HTML[<img
 $BF50 DEFB $80,$07,$03,$C0,$00,$00,$C0,$01,$00,$C0,$00,$00,$00,$00,$0F,$00 ; src="images/spriteBF40.png"
 $BF60 DEFB $00,$00,$C0,$3F,$3F,$C0,$00,$00,$C0,$3F,$0F,$00,$00,$00,$00,$00 ; />]
 $BF70 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BF80 DEFB $04,$00,$00,$00,$00,$0A,$06,$00,$00,$00,$80,$01,$01,$C0,$00,$00 ; {#HTML[<img
 $BF90 DEFB $E0,$01,$00,$F0,$00,$00,$70,$00,$00,$30,$00,$00,$00,$00,$03,$C0 ; src="images/spriteBF80.png"
 $BFA0 DEFB $00,$00,$F0,$0F,$0F,$F0,$00,$00,$F0,$0F,$03,$C0,$00,$00,$00,$00 ; />]
 $BFB0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $BFC0 DEFB $01,$00,$00,$00,$80,$02,$01,$80,$00,$00,$60,$00,$00,$70,$00,$00 ; {#HTML[<img
 $BFD0 DEFB $78,$00,$00,$3C,$00,$00,$1C,$00,$00,$0C,$00,$00,$00,$00,$00,$F0 ; src="images/spriteBFC0.png"
 $BFE0 DEFB $00,$00,$FC,$03,$03,$FC,$00,$00,$FC,$03,$00,$F0,$00,$00,$00,$00 ; />]
 $BFF0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }

; Sprite addresses
w$C000 DEFW $C350    ; Sprite addr Cliff edge right; width 2
 $C002 DEFW $C318    ; Sprite addr Cliff edge left; width 2
 $C004 DEFW $CB50    ; Sprite addr Wall; width 4
 $C006 DEFW $CC18    ; Sprite addr ???
 $C008 DEFW $CF38    ; Sprite addr ???
 $C00A DEFW $CF78    ; Sprite addr
 $C00C DEFW $CFFC    ; Sprite addr
 $C00E DEFW $D080    ; Sprite addr
 $C010 DEFW $D0C0    ; Sprite addr
 $C012 DEFW $D100    ; Sprite addr
 $C014 DEFW $D1A0    ; Sprite addr
 $C016 DEFW $D224    ; Sprite addr
 $C018 DEFW $D26C    ; Sprite addr
 $C01A DEFW $D2D8    ; Sprite addr
 $C01C DEFW $D320    ; Sprite addr
 $C01E DEFW $D614    ; Sprite addr
 $C020 DEFW $D380    ; Sprite addr
 $C022 DEFW $0000    ; ??
 $C024 DEFW $D644    ; Sprite addr
 $C026 DEFW $D944    ; Sprite addr
 $C028 DEFW $CA90    ; Sprite addr ???; width ?
 $C02A DEFW $CAC0    ; Sprite addr ???; width ?
 $C02C DEFW $CB20    ; Sprite addr ???; width ?
 $C02E DEFW $CA00    ; Sprite addr Motorbike; width 6
 $C030 DEFW $C890    ; Sprite addr Hut; width 6
 $C032 DEFW $C980    ; Sprite addr Jeep; width 4
 $C034 DEFW $C508    ; Sprite addr Cave, exit to the right; width 6
 $C036 DEFW $C5F8    ; Sprite addr Cave, exit to the left; width 6
 $C038 DEFW $C6E8    ; Sprite addr Cave top edge; width 6
 $C03A DEFW $C718    ; Sprite addr Cave bottom edge; width 6
 $C03C DEFW $C748    ; Sprite addr Truck; width 8
 $C03E DEFW $C848    ; Sprite addr ???; width 2?
 $C040 DEFW $C478    ; Sprite addr Cliff top right; width 6
 $C042 DEFW $C2C4    ; Sprite addr ???; width 2
 $C044 DEFW $C388    ; Sprite addr Cliff bottom right; width 6
 $C046 DEFW $C1E0    ; Sprite addr Cliff top left; width 6
 $C048 DEFW $C270    ; Sprite addr ???; width 2
 $C04A DEFW $C0F0    ; Sprite addr Cliff bottom left; width 6
 $C04C DEFW $C0A0    ; Sprite addr ???; width 2
 $C04E DEFW $C050    ; Sprite addr ???; width 2

; Sprite ???; width 2
b$C050 DEFB $00,$7F,$00,$7F,$80,$7F,$80,$3F
 $C058 DEFB $80,$3F,$C0,$1F,$C0,$5F,$E0,$AF
 $C060 DEFB $A0,$4F,$50,$27,$B0,$17,$D8,$8B
 $C068 DEFB $E8,$13,$74,$09,$EC,$55,$F6,$01
 $C070 DEFB $AA,$00,$FE,$FE,$FF,$7C,$01,$7E
 $C078 DEFB $83,$54,$81,$2A,$AB,$09,$D5,$C4
 $C080 DEFB $F6,$EE,$3B,$EC,$11,$EE,$13,$C4
 $C088 DEFB $11,$00,$3B,$FD,$FF,$7D,$02,$FD
 $C090 DEFB $82,$54,$05,$2A,$AB,$01,$D5,$FD
 $C098 DEFB $FE,$55,$02,$01,$AA,$FF,$FE,$FF

; Sprite ???; width 2
b$C0A0 DEFB $00,$FF,$00,$FE,$00,$FE,$01,$FE
 $C0A8 DEFB $01,$FD,$01,$FC,$02,$F9,$03,$FA
 $C0B0 DEFB $06,$F4,$05,$F2,$0B,$E5,$0D,$EA
 $C0B8 DEFB $1A,$D5,$15,$CA,$2A,$95,$35,$80
 $C0C0 DEFB $6A,$80,$7F,$80,$7F,$7E,$7F,$3F
 $C0C8 DEFB $81,$5F,$C0,$3B,$A0,$55,$C4,$2A
 $C0D0 DEFB $AA,$80,$D5,$3E,$7F,$7F,$C1,$3F
 $C0D8 DEFB $80,$5F,$C0,$2A,$A0,$90,$D5,$80
 $C0E0 DEFB $6F,$7E,$7F,$3F,$81,$57,$C0,$2A
 $C0E8 DEFB $A8,$00,$D5,$80,$FF,$FF,$7F,$FF

; Sprite Cliff bottom left; width 6
b$C0F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C0F0-$C1DF-1-48(cliffbotlt)]
 $C0FC DEFB $80,$30,$00,$00,$00,$00,$E8,$48,$00,$00,$04,$00 ;
 $C108 DEFB $F6,$30,$C0,$04,$40,$08,$ED,$83,$80,$00,$28,$04 ;
 $C114 DEFB $D7,$FF,$04,$00,$00,$00,$EF,$F3,$FE,$18,$01,$3F ;
 $C120 DEFB $F7,$EF,$FF,$1F,$FF,$3F,$FF,$EF,$FF,$BF,$FE,$FF ;
 $C12C DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C138 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C144 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C150 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C15C DEFB $FF,$FB,$FF,$BF,$FF,$FF,$FF,$FF,$FF,$DF,$FF,$DF ;
 $C168 DEFB $FF,$FF,$FF,$FF,$FF,$BF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C174 DEFB $FD,$FF,$FF,$FF,$FF,$FF,$FA,$FF,$FF,$FF,$FF,$FF ;
 $C180 DEFB $FD,$FF,$BF,$FF,$FF,$FF,$FB,$FF,$7F,$FF,$FF,$FF ;
 $C18C DEFB $FF,$FE,$DF,$FF,$F3,$FF,$FF,$FE,$DF,$FF,$EB,$FF ;
 $C198 DEFB $FF,$FF,$5F,$FF,$F6,$FF,$FF,$FF,$7F,$DF,$FF,$FF ;
 $C1A4 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$BF,$FE,$F7,$FF,$FF ;
 $C1B0 DEFB $FF,$7F,$FD,$F7,$FF,$FF,$FE,$FF,$FD,$F7,$FF,$F7 ;
 $C1BC DEFB $FC,$FF,$FD,$FB,$FF,$FB,$FD,$FF,$FD,$FB,$F7,$FB ;
 $C1C8 DEFB $F9,$FF,$F9,$FD,$FF,$FD,$01,$FF,$F8,$03,$FD,$FC ;
 $C1D4 DEFB $00,$3F,$80,$00,$FF,$FE,$00,$00,$00,$00,$1F,$FE ; }

; Sprite Cliff top left; width 6
b$C1E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C1E0-$C26F-1-48(clifftoplt)]
 $C1EC DEFB $00,$00,$00,$00,$00,$0F,$00,$00,$00,$70,$00,$FF ;
 $C1F8 DEFB $00,$00,$03,$FF,$07,$FF,$00,$00,$1F,$FF,$FF,$FF ;
 $C204 DEFB $00,$00,$7F,$FF,$FF,$8F,$00,$00,$FF,$FF,$FF,$DF ;
 $C210 DEFB $00,$01,$FF,$FF,$EF,$FF,$00,$00,$7F,$FF,$FB,$FF ;
 $C21C DEFB $00,$67,$BF,$FF,$FF,$FF,$01,$FF,$EF,$FF,$FF,$FF ;
 $C228 DEFB $03,$FF,$FF,$F5,$FF,$FF,$07,$FF,$FF,$FF,$FF,$DF ;
 $C234 DEFB $0F,$BF,$FF,$FF,$FF,$F7,$1E,$FF,$B7,$FF,$FF,$FF ;
 $C240 DEFB $7D,$FF,$FB,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C24C DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C258 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C264 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; }

; Sprite ???; width 2
b$C270 DEFB $00,$FE,$00,$FE,$01,$FE,$01,$FC
 $C278 DEFB $01,$F8,$03,$F8,$07,$F8,$07,$FC
 $C280 DEFB $07,$FC,$03,$FE,$03,$F8,$01,$F8
 $C288 DEFB $07,$F0,$07,$E0,$0F,$E0,$1F,$E4
 $C290 DEFB $1F,$E2,$1B,$E4,$1D,$C6,$1B,$C0
 $C298 DEFB $39,$E0,$3F,$E0,$1F,$E0,$1F,$F0
 $C2A0 DEFB $1F,$F0,$0F,$F0,$0F,$E0,$0F,$E0
 $C2A8 DEFB $1F,$C0,$1F,$C0,$3F,$80,$3F,$80
 $C2B0 DEFB $7F,$D0,$7F,$A8,$2F,$90,$57,$28
 $C2B8 DEFB $6F,$10,$D7,$86,$EF,$E0,$79,$F8
 $C2C0 DEFB $1F,$FF,$07,$FF

; Sprite ???; width 2
b$C2C4 DEFB $00,$7F,$00,$7F,$80,$7F,$80,$3F
 $C2CC DEFB $80,$1F,$C0,$1F,$E0,$1F,$E0,$3F
 $C2D4 DEFB $E0,$3F,$C0,$7F,$C0,$1F,$80,$1F
 $C2DC DEFB $E0,$0F,$E0,$07,$F0,$07,$F8,$17
 $C2E4 DEFB $F8,$47,$D8,$27,$B8,$63,$D8,$03
 $C2EC DEFB $9C,$07,$FC,$07,$F8,$07,$F8,$0F
 $C2F4 DEFB $F8,$0F,$F0,$0F,$F0,$07,$F0,$07
 $C2FC DEFB $F8,$03,$F8,$03,$FC,$01,$FC,$01
 $C304 DEFB $FE,$0B,$FE,$15,$F4,$09,$EA,$14
 $C30C DEFB $F6,$08,$EB,$61,$F7,$07,$9E,$1F
 $C314 DEFB $F8,$FF,$E0,$FF

; Sprite Cliff edge left; width 2
b$C318 DEFB $00,$00,$00,$00,$01,$00,$03,$00 ; {#HTML[#UDGARRAY2,,,2;$C318-$C34F-1-16(clifflt)]
 $C320 DEFB $03,$00,$03,$00,$03,$00,$07,$00 ;
 $C328 DEFB $05,$00,$07,$00,$07,$00,$07,$00 ;
 $C330 DEFB $07,$00,$07,$00,$0F,$00,$0F,$00 ;
 $C338 DEFB $0F,$00,$0F,$00,$1F,$00,$1F,$00 ;
 $C340 DEFB $3F,$00,$3B,$00,$35,$00,$7B,$00 ;
 $C348 DEFB $FF,$00,$3F,$00,$1F,$00,$07,$00 ; }

; Sprite Cliff edge right; width 2
b$C350 DEFB $00,$00,$00,$00,$80,$00,$C0,$00 ; {#HTML[#UDGARRAY2,,,2;$C350-$C387-1-16(cliffrt)]
 $C358 DEFB $C0,$00,$C0,$00,$C0,$00,$E0,$00 ;
 $C360 DEFB $A0,$00,$E0,$00,$E0,$00,$E0,$00 ;
 $C368 DEFB $E0,$00,$E0,$00,$F0,$00,$F0,$00 ;
 $C370 DEFB $F0,$00,$F0,$00,$F8,$00,$F8,$00 ;
 $C378 DEFB $FC,$00,$DC,$00,$AC,$00,$DE,$00 ;
 $C380 DEFB $FF,$00,$FC,$00,$F8,$00,$E0,$00 ; }

; Sprite Cliff bottom right; width 6
b$C388 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C388-$C477-1-48(cliffbotrt)]
 $C394 DEFB $00,$00,$00,$00,$0C,$01,$00,$20,$00,$00,$12,$17 ;
 $C3A0 DEFB $10,$02,$20,$03,$0C,$6F,$20,$14,$00,$01,$C1,$B7 ;
 $C3AC DEFB $00,$00,$00,$20,$FF,$EB,$FC,$80,$18,$7F,$CF,$F7 ;
 $C3B8 DEFB $FC,$FF,$F8,$FF,$F7,$EF,$FF,$7F,$FD,$FF,$F7,$FF ;
 $C3C4 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C3D0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C3DC DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C3E8 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C3F4 DEFB $FF,$FF,$FD,$FF,$DF,$FF,$FB,$FF,$FB,$FF,$FF,$FF ;
 $C400 DEFB $FD,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C40C DEFB $FF,$FF,$FF,$FF,$FF,$BF,$FF,$FF,$FF,$FF,$FF,$5F ;
 $C418 DEFB $FF,$FF,$FF,$FD,$FF,$BF,$FF,$FF,$FF,$FE,$FF,$DF ;
 $C424 DEFB $FF,$CF,$FF,$FB,$7F,$FF,$FF,$D7,$FF,$FB,$7F,$FF ;
 $C430 DEFB $FF,$6F,$FF,$FA,$FF,$FF,$FF,$FF,$FB,$FE,$FF,$FF ;
 $C43C DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$EF,$7F,$FD,$FF ;
 $C448 DEFB $FF,$FF,$EF,$BF,$FE,$FF,$EF,$FF,$EF,$BF,$FF,$7F ;
 $C454 DEFB $DF,$FF,$DF,$BF,$FF,$3F,$DF,$EF,$DF,$BF,$FF,$BF ;
 $C460 DEFB $BF,$FF,$BF,$9F,$FF,$9F,$3F,$BF,$C0,$1F,$FF,$80 ;
 $C46C DEFB $7F,$FF,$00,$01,$FC,$00,$7F,$F8,$00,$00,$00,$00 ; }

; Sprite Cliff top right; width 6
b$C478 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C478-$C507-1-48(clifftoprt)]
 $C484 DEFB $F0,$00,$00,$00,$00,$00,$FF,$00,$0E,$00,$00,$00 ;
 $C490 DEFB $FF,$E0,$FF,$C0,$00,$00,$FF,$FF,$FF,$F8,$00,$00 ;
 $C49C DEFB $F1,$FF,$FF,$FE,$00,$00,$FB,$FF,$FF,$FF,$00,$00 ;
 $C4A8 DEFB $FF,$F7,$FF,$FF,$80,$00,$FF,$DF,$FF,$FE,$00,$00 ;
 $C4B4 DEFB $FF,$FF,$FF,$FD,$E6,$00,$FF,$FF,$FF,$F7,$FF,$80 ;
 $C4C0 DEFB $FF,$FF,$AF,$FF,$FF,$C0,$FB,$FF,$FF,$FF,$FF,$E0 ;
 $C4CC DEFB $EF,$FF,$FF,$FF,$FD,$F0,$FF,$FF,$FF,$ED,$FF,$78 ;
 $C4D8 DEFB $FF,$FF,$FF,$DF,$FF,$BE,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C4E4 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C4F0 DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C4FC DEFB $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF ; }

; Sprite Cave, exit to the right; width 6
b$C508 DEFB $55,$00,$BD,$A8,$41,$EC,$6A,$81,$46,$D0,$20,$7A ; {#HTML[#UDGARRAY6,,,6;$C508-$C5F7-1-48(cavert)]
 $C514 DEFB $55,$02,$81,$E9,$B2,$36,$2A,$01,$83,$B0,$12,$1A ;
 $C520 DEFB $35,$02,$87,$0C,$01,$04,$2A,$05,$6B,$03,$3C,$04 ;
 $C52C DEFB $35,$02,$9E,$00,$FF,$02,$28,$06,$0B,$80,$7F,$82 ;
 $C538 DEFB $54,$0A,$15,$D0,$FF,$C6,$68,$04,$0B,$68,$FF,$CE ;
 $C544 DEFB $54,$0E,$06,$1D,$FF,$F4,$68,$05,$85,$47,$FF,$F8 ;
 $C550 DEFB $50,$00,$66,$43,$FF,$E0,$A8,$01,$1D,$01,$FE,$80 ;
 $C55C DEFB $D0,$00,$06,$81,$F5,$00,$A0,$08,$05,$C1,$EA,$00 ;
 $C568 DEFB $D0,$1E,$02,$71,$D5,$00,$A0,$07,$06,$0D,$EA,$00 ;
 $C574 DEFB $D0,$02,$E4,$13,$D4,$00,$A8,$05,$08,$21,$AA,$00 ;
 $C580 DEFB $D0,$03,$0C,$00,$D4,$00,$A8,$04,$06,$20,$AA,$00 ;
 $C58C DEFB $D0,$02,$07,$20,$D4,$00,$A0,$07,$03,$98,$6A,$00 ;
 $C598 DEFB $D0,$00,$E7,$C1,$F5,$00,$A0,$00,$5E,$F7,$3A,$00 ;
 $C5A4 DEFB $50,$00,$0C,$3C,$0D,$00,$68,$00,$14,$06,$0E,$80 ;
 $C5B0 DEFB $54,$00,$0E,$03,$07,$00,$60,$00,$17,$03,$CD,$80 ;
 $C5BC DEFB $50,$00,$0B,$80,$60,$C0,$A8,$00,$05,$57,$38,$40 ;
 $C5C8 DEFB $D0,$02,$0A,$A2,$06,$20,$A0,$05,$55,$70,$01,$34 ;
 $C5D4 DEFB $50,$1E,$AB,$98,$A0,$DA,$68,$03,$D6,$2D,$98,$2C ;
 $C5E0 DEFB $D0,$44,$7D,$1F,$46,$06,$A8,$00,$92,$2F,$A1,$84 ;
 $C5EC DEFB $54,$00,$20,$15,$D4,$58,$68,$00,$00,$2A,$BA,$34 ; }

; Sprite Cave, exit to the left; width 6
b$C5F8 DEFB $37,$82,$15,$BD,$00,$AA,$5E,$04,$0B,$62,$81,$56 ; {#HTML[#UDGARRAY6,,,6;$C5F8-$C6E7-1-48(cavelt)]
 $C604 DEFB $6C,$4D,$97,$81,$40,$AA,$58,$48,$0D,$C1,$80,$54 ;
 $C610 DEFB $20,$80,$30,$E1,$40,$AC,$20,$3C,$C0,$D6,$A0,$54 ;
 $C61C DEFB $40,$FF,$00,$79,$40,$AC,$41,$FE,$01,$D0,$60,$14 ;
 $C628 DEFB $63,$FF,$0B,$A8,$50,$2A,$73,$FF,$16,$D0,$20,$16 ;
 $C634 DEFB $2F,$FF,$B8,$60,$70,$2A,$1F,$FF,$E2,$A1,$A0,$16 ;
 $C640 DEFB $07,$FF,$C2,$66,$00,$0A,$01,$7F,$80,$B8,$80,$15 ;
 $C64C DEFB $00,$AF,$81,$60,$00,$0B,$00,$57,$83,$A0,$10,$05 ;
 $C658 DEFB $00,$AB,$8E,$40,$78,$0B,$00,$57,$B0,$60,$E0,$05 ;
 $C664 DEFB $00,$2B,$C8,$27,$40,$0B,$00,$55,$84,$10,$A0,$15 ;
 $C670 DEFB $00,$2B,$00,$30,$C0,$0B,$00,$55,$04,$60,$20,$15 ;
 $C67C DEFB $00,$2B,$04,$E0,$40,$0B,$00,$56,$19,$C0,$E0,$05 ;
 $C688 DEFB $00,$AF,$83,$E7,$00,$0B,$00,$5C,$EF,$7A,$00,$05 ;
 $C694 DEFB $00,$B0,$3C,$30,$00,$0A,$01,$70,$60,$28,$00,$16 ;
 $C6A0 DEFB $00,$E0,$C0,$70,$00,$2A,$01,$B3,$C0,$E8,$00,$06 ;
 $C6AC DEFB $03,$06,$01,$D0,$00,$0A,$02,$1C,$EA,$A0,$00,$15 ;
 $C6B8 DEFB $04,$60,$45,$50,$40,$0B,$2C,$80,$0E,$AA,$A0,$05 ;
 $C6C4 DEFB $5B,$05,$19,$D5,$78,$0A,$34,$19,$B4,$6B,$C0,$16 ;
 $C6D0 DEFB $60,$62,$F8,$BE,$22,$0B,$21,$85,$F4,$49,$00,$15 ;
 $C6DC DEFB $1A,$2B,$A8,$04,$00,$2A,$2C,$5D,$54,$00,$00,$16 ; }

; Sprite Cave top edge; width 6
b$C6E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C6E8-$C717-1-48(cavetop)]
 $C6F4 DEFB $0F,$F8,$07,$FC,$0F,$F8,$3A,$AF,$FE,$AB,$FA,$AE ;
 $C700 DEFB $55,$55,$55,$05,$55,$55,$68,$00,$00,$00,$00,$01 ;
 $C70C DEFB $54,$00,$21,$54,$00,$0A,$6A,$64,$CA,$AB,$26,$56 ; }

; Sprite Cave bottom edge; width 6
b$C718 DEFB $30,$80,$00,$00,$00,$2A,$30,$00,$00,$00,$00,$15 ; {#HTML[#UDGARRAY6,,,6;$C718-$C747-1-48(cavebot)]
 $C724 DEFB $25,$00,$04,$00,$2A,$AB,$6A,$B5,$7A,$A0,$F5,$57 ;
 $C730 DEFB $77,$EB,$C7,$F3,$0E,$BA,$3C,$1E,$01,$9C,$03,$CC ;
 $C73C DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }

; Sprite Truck; width 8
b$C748 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C750 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $C758 DEFB $00,$00,$D0,$01,$40,$29,$10,$44
 $C760 DEFB $07,$00,$AF,$F9,$FA,$50,$A8,$8E
 $C768 DEFB $08,$00,$DE,$05,$75,$A9,$08,$47
 $C770 DEFB $18,$00,$AF,$07,$EA,$54,$88,$22
 $C778 DEFB $18,$00,$CE,$05,$75,$80,$14,$07
 $C780 DEFB $18,$00,$A5,$07,$E8,$04,$AC,$23
 $C788 DEFB $28,$00,$CE,$05,$74,$80,$14,$07
 $C790 DEFB $28,$00,$E5,$07,$38,$02,$AC,$23
 $C798 DEFB $28,$00,$CA,$05,$75,$80,$D2,$11
 $C7A0 DEFB $28,$00,$E5,$07,$2A,$42,$EA,$83
 $C7A8 DEFB $48,$00,$EA,$05,$55,$80,$52,$11
 $C7B0 DEFB $68,$00,$FC,$07,$80,$03,$02,$0E
 $C7B8 DEFB $D7,$00,$EF,$FF,$E0,$04,$84,$31
 $C7C0 DEFB $B0,$00,$DF,$07,$7F,$FC,$FE,$E3
 $C7C8 DEFB $D7,$00,$CF,$B5,$FF,$F8,$FE,$F1
 $C7D0 DEFB $AF,$00,$DF,$B7,$7F,$FC,$FE,$E3
 $C7D8 DEFB $EF,$00,$CF,$75,$FF,$F8,$FE,$F1
 $C7E0 DEFB $DF,$00,$D7,$72,$7F,$F4,$FE,$E3
 $C7E8 DEFB $C0,$00,$CF,$03,$FF,$F8,$FE,$D1
 $C7F0 DEFB $C0,$00,$D7,$02,$7F,$F4,$FE,$E3
 $C7F8 DEFB $C0,$00,$CF,$03,$FF,$F8,$FE,$D1
 $C800 DEFB $4A,$00,$D7,$AA,$7F,$FC,$FE,$E3
 $C808 DEFB $57,$00,$CF,$F5,$FF,$F8,$FE,$F1
 $C810 DEFB $78,$00,$DF,$0E,$7F,$FC,$FE,$EB
 $C818 DEFB $20,$00,$FF,$07,$FF,$FF,$FC,$FF
 $C820 DEFB $27,$00,$AA,$FA,$AA,$AA,$AA,$AA
 $C828 DEFB $2F,$00,$00,$FF,$00,$00,$02,$00
 $C830 DEFB $16,$00,$FF,$31,$FF,$FF,$FC,$FF
 $C838 DEFB $07,$00,$00,$70,$73,$E0,$E0,$9C
 $C840 DEFB $03,$00,$00,$E0,$3F,$00,$C0,$0F

; Sprite ???; width 2?
b$C848 DEFB $00,$E7,$00,$FF,$00,$FF,$00,$C3
 $C850 DEFB $18,$81,$00,$C3,$00,$FF,$3C,$00
 $C858 DEFB $7E,$00,$00,$7F,$00,$3F,$FF,$80
 $C860 DEFB $FF,$C0,$80,$1F,$C0,$0F,$7F,$E0
 $C868 DEFB $3F,$F0,$E0,$07,$F0,$03,$1F,$F8
 $C870 DEFB $0F,$FC,$F8,$01,$FC,$00,$07,$FE
 $C878 DEFB $03,$FF,$FE,$00,$FF,$81,$01,$FF
 $C880 DEFB $00,$FF,$FF,$C3,$7E,$E7,$00,$FF
 $C888 DEFB $00,$FF,$3C,$FF,$18,$FF,$00,$FF

; Sprite Hut; width 6
b$C890 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$C890-$C97F-1-48(hut)]
 $C89C DEFB $FF,$C0,$00,$00,$1F,$FF,$20,$3F,$FF,$FF,$F9,$D0 ;
 $C8A8 DEFB $34,$6A,$AA,$AA,$AB,$A0,$6A,$F9,$99,$99,$99,$40 ;
 $C8B4 DEFB $FF,$CA,$AA,$AA,$AB,$84,$FF,$F9,$99,$99,$99,$AA ;
 $C8C0 DEFB $8C,$0E,$AA,$AA,$AB,$D5,$06,$03,$99,$99,$99,$EB ;
 $C8CC DEFB $A3,$86,$AA,$AA,$AA,$7F,$D5,$45,$99,$99,$99,$01 ;
 $C8D8 DEFB $FF,$AE,$AA,$AA,$AA,$82,$FF,$59,$99,$99,$99,$D5 ;
 $C8E4 DEFB $AB,$BA,$AA,$AA,$AA,$EB,$54,$F5,$55,$55,$55,$7F ;
 $C8F0 DEFB $AA,$AA,$AA,$AA,$AA,$AA,$FF,$FF,$FF,$FF,$FF,$FF ;
 $C8FC DEFB $FF,$FF,$FF,$FF,$FF,$FF,$F7,$FF,$FF,$FF,$FC,$0F ;
 $C908 DEFB $E2,$FF,$80,$00,$F8,$03,$C2,$FF,$7F,$FF,$F8,$01 ;
 $C914 DEFB $6B,$7F,$7F,$FE,$F8,$AA,$D5,$7F,$7F,$FE,$FD,$55 ;
 $C920 DEFB $7F,$DF,$7F,$FE,$FF,$FF,$7F,$EF,$7F,$FE,$C1,$E0 ;
 $C92C DEFB $C0,$37,$7F,$FE,$80,$C0,$A0,$1F,$7F,$FE,$80,$62 ;
 $C938 DEFB $D4,$1F,$7F,$FE,$D5,$D5,$AA,$9F,$7F,$FE,$AB,$6A ;
 $C944 DEFB $D5,$5F,$7F,$FE,$D5,$FF,$EA,$BF,$7F,$FE,$FF,$C2 ;
 $C950 DEFB $7F,$FF,$7F,$FE,$F8,$15,$70,$5F,$7F,$FE,$F0,$AB ;
 $C95C DEFB $E0,$2F,$7F,$FE,$F1,$55,$D0,$2F,$7F,$FE,$F8,$AB ;
 $C968 DEFB $EA,$2F,$7F,$FE,$FF,$FE,$D5,$2F,$7F,$FE,$FC,$01 ;
 $C974 DEFB $EA,$DF,$7F,$FE,$FC,$02,$FF,$FF,$FF,$FF,$FF,$D5 ; }

; Sprite Jeep; width 4
b$C980 DEFB $7F,$FF,$FF,$FE,$43,$AA,$AA,$C2 ; {#HTML[#UDGARRAY4,,,4;$C980-$C9FF-1-32(jeep)]
 $C988 DEFB $47,$FF,$FF,$E2,$3F,$FF,$FF,$FC ;
 $C990 DEFB $6F,$F8,$00,$06,$4C,$9F,$FF,$F2 ;
 $C998 DEFB $59,$E5,$55,$7A,$5B,$F6,$BE,$BA ;
 $C9A0 DEFB $57,$3B,$FF,$DE,$66,$FB,$FF,$FA ;
 $C9A8 DEFB $63,$F3,$FF,$FE,$61,$E3,$FF,$FA ;
 $C9B0 DEFB $40,$03,$F9,$F6,$77,$F7,$B7,$D2 ;
 $C9B8 DEFB $5A,$AF,$3F,$CE,$5F,$FF,$10,$8A ;
 $C9C0 DEFB $98,$0F,$10,$85,$BC,$1F,$1D,$45 ;
 $C9C8 DEFB $BF,$FF,$1E,$25,$B0,$01,$8E,$45 ;
 $C9D0 DEFB $9F,$FF,$CF,$09,$C0,$00,$7E,$92 ;
 $C9D8 DEFB $D5,$55,$57,$75,$AA,$AA,$AE,$AB ;
 $C9E0 DEFB $D5,$55,$57,$56,$BF,$FF,$FF,$FD ;
 $C9E8 DEFB $C0,$00,$03,$03,$7F,$FF,$FF,$FE ;
 $C9F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ;
 $C9F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; }

; Sprite Motorbike; width 6
b$CA00 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY6,,,6;$CA00-$CA8F-1-48(motorbike)]
 $CA0C DEFB $00,$00,$38,$00,$00,$00,$00,$00,$44,$00,$00,$00 ;
 $CA18 DEFB $00,$00,$82,$00,$00,$00,$00,$00,$82,$00,$00,$00 ;
 $CA24 DEFB $00,$03,$BF,$00,$00,$00,$00,$05,$46,$80,$00,$00 ;
 $CA30 DEFB $00,$09,$3F,$C0,$00,$00,$00,$1A,$20,$A0,$00,$00 ;
 $CA3C DEFB $00,$2E,$19,$D1,$C0,$00,$00,$27,$87,$BA,$00,$00 ;
 $CA48 DEFB $01,$E1,$E2,$6B,$C0,$00,$07,$50,$5D,$FF,$F0,$00 ;
 $CA54 DEFB $0D,$F8,$3F,$DD,$D8,$00,$19,$06,$1F,$B6,$0C,$00 ;
 $CA60 DEFB $13,$FF,$1F,$A3,$E4,$00,$37,$56,$3F,$6F,$76,$00 ;
 $CA6C DEFB $2D,$AC,$7C,$59,$9E,$00,$1D,$FE,$60,$38,$9C,$00 ;
 $CA78 DEFB $1C,$0F,$80,$38,$1C,$00,$0F,$3D,$C0,$1E,$78,$00 ;
 $CA84 DEFB $07,$F8,$00,$0F,$F0,$00,$01,$E0,$00,$03,$C0,$00 ; }

; Sprite ???; width ?
b$CA90 DEFB $00,$FF,$00,$37,$00,$80,$00,$FC
 $CA98 DEFB $00,$C3,$C8,$07,$7F,$1F,$03,$F0
 $CAA0 DEFB $3C,$F0,$F8,$7F,$E0,$BF,$0F,$C8
 $CAA8 DEFB $0F,$10,$80,$55,$40,$00,$37,$88
 $CAB0 DEFB $EF,$E4,$AA,$00,$FF,$3C,$77,$F8
 $CAB8 DEFB $1B,$79,$FF,$79,$C3,$78,$07,$78

; Sprite ???; width ?
b$CAC0 DEFB $00,$7E,$00,$1E,$00,$7E,$00,$1E
 $CAC8 DEFB $00,$E1,$00,$71,$00,$E1,$00,$71
 $CAD0 DEFB $81,$8F,$E1,$FF,$81,$8F,$E1,$FF
 $CAD8 DEFB $1E,$FF,$8E,$FF,$1E,$FF,$8E,$FF
 $CAE0 DEFB $70,$FF,$00,$FF,$70,$FF,$00,$FF
 $CAE8 DEFB $00,$AA,$00,$AA,$00,$AA,$00,$AA
 $CAF0 DEFB $00,$50,$00,$05,$00,$50,$00,$05
 $CAF8 DEFB $55,$00,$55,$00,$55,$00,$55,$00
 $CB00 DEFB $AF,$03,$FA,$E0,$AF,$03,$FA,$E0
 $CB08 DEFB $FF,$FE,$FF,$7F,$FF,$FE,$FF,$7F
 $CB10 DEFB $FC,$FD,$1F,$7A,$FC,$19,$1F,$11
 $CB18 DEFB $01,$0E,$80,$9D,$01,$02,$80,$DF

; Sprite ???; width ?
b$CB20 DEFB $00,$EC,$00,$FF,$00,$3F,$00,$01
 $CB28 DEFB $13,$E0,$00,$C3,$C0,$0F,$FE,$F8
 $CB30 DEFB $1F,$FE,$3C,$0F,$F0,$13,$07,$FD
 $CB38 DEFB $01,$AA,$F0,$08,$EC,$11,$02,$00
 $CB40 DEFB $55,$00,$F7,$27,$EE,$1F,$FF,$3C
 $CB48 DEFB $FF,$02,$D8,$FA,$E0,$84,$C3,$D7

; Sprite Wall; width 4
b$CB50 DEFB $00,$00,$00,$00,$00,$00,$00,$00 ; {#HTML[#UDGARRAY4,,,4;$CB50-$CC17-1-32(wall)]
 $CB58 DEFB $7F,$FE,$7F,$FE,$FF,$FF,$FF,$FF ;
 $CB60 DEFB $FF,$FF,$FF,$FF,$7F,$FF,$7F,$FF ;
 $CB68 DEFB $FF,$FF,$FF,$FF,$AA,$AA,$AA,$AA ;
 $CB70 DEFB $7F,$FE,$7F,$FE,$6F,$FE,$6F,$FE ;
 $CB78 DEFB $57,$FE,$55,$FE,$EB,$FE,$EB,$FE ;
 $CB80 DEFB $D7,$FE,$D5,$FE,$AB,$FE,$AA,$FE ;
 $CB88 DEFB $D5,$7E,$D5,$7E,$6A,$AE,$6A,$AE ;
 $CB90 DEFB $75,$56,$F5,$56,$3F,$F9,$BF,$FB ;
 $CB98 DEFB $01,$80,$03,$80,$F7,$BF,$F7,$BF ;
 $CBA0 DEFB $FC,$EA,$FC,$EA,$FE,$D7,$FE,$D7 ;
 $CBA8 DEFB $FE,$AB,$FE,$AB,$FE,$D5,$FE,$D5 ;
 $CBB0 DEFB $BE,$AA,$BE,$AA,$56,$55,$56,$55 ;
 $CBB8 DEFB $AF,$6A,$AE,$EA,$FD,$B7,$FD,$B7 ;
 $CBC0 DEFB $00,$00,$00,$00,$7F,$F7,$7F,$F7 ;
 $CBC8 DEFB $AB,$FC,$AB,$FC,$57,$FD,$57,$FD ;
 $CBD0 DEFB $AA,$FD,$AA,$FD,$55,$5D,$55,$5D ;
 $CBD8 DEFB $AA,$B9,$AA,$B9,$FF,$F6,$FF,$F6 ;
 $CBE0 DEFB $00,$00,$00,$00,$FB,$7F,$FB,$7F ;
 $CBE8 DEFB $FC,$AF,$FC,$AF,$FD,$55,$FD,$55 ;
 $CBF0 DEFB $BD,$AA,$BD,$AA,$F9,$7F,$F9,$7F ;
 $CBF8 DEFB $00,$00,$00,$00,$7F,$FD,$7F,$FC ;
 $CC00 DEFB $55,$FE,$55,$FE,$AA,$AE,$AA,$AE ;
 $CC08 DEFB $7F,$FC,$7F,$FC,$00,$00,$00,$00 ;
 $CC10 DEFB $F8,$7F,$F8,$7F,$FE,$AA,$FE,$AA ; }

; ???
b$CC18 DEFB $00,$80,$00,$01,$00,$80,$00,$01
 $CC20 DEFB $00,$80,$00,$01,$00,$80,$00,$01
 $CC28 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CC30 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $CC38 DEFB $7F,$00,$FE,$00,$7F,$00,$FE,$00
 $CC40 DEFB $7F,$00,$FE,$00,$7F,$00,$FE,$00
 $CC48 DEFB $FF,$00,$FF,$80,$FF,$00,$FF,$80
 $CC50 DEFB $FF,$00,$FF,$80,$FF,$00,$FF,$80
 $CC58 DEFB $FF,$00,$FF,$00,$FF,$00,$FF,$00
 $CC60 DEFB $FF,$00,$FF,$00,$FF,$00,$FF,$00
 $CC68 DEFB $FF,$55,$7F,$55,$FF,$55,$7F,$55
 $CC70 DEFB $FF,$55,$7F,$55,$FF,$55,$7F,$55
 $CC78 DEFB $FF,$80,$FF,$01,$FF,$80,$FF,$01
 $CC80 DEFB $FF,$00,$FF,$01,$FF,$80,$FF,$01
 $CC88 DEFB $AA,$01,$AA,$90,$AA,$01,$AA,$50
 $CC90 DEFB $AA,$01,$AA,$90,$AA,$01,$AA,$90
 $CC98 DEFB $7F,$AA,$FE,$01,$7F,$AA,$FE,$01
 $CCA0 DEFB $FF,$AA,$FE,$01,$7F,$A8,$FE,$01
 $CCA8 DEFB $FE,$01,$6F,$14,$FE,$01,$AF,$FE
 $CCB0 DEFB $FE,$7F,$6F,$00,$FE,$01,$6F,$14
 $CCB8 DEFB $55,$2A,$FE,$00,$55,$7F,$FE,$80
 $CCC0 DEFB $55,$01,$FE,$FE,$57,$28,$FE,$01
 $CCC8 DEFB $FE,$01,$EB,$F4,$FE,$01,$01,$F8
 $CCD0 DEFB $80,$02,$FF,$80,$FE,$07,$EB,$55
 $CCD8 DEFB $D5,$2A,$FF,$98,$80,$17,$7F,$95
 $CCE0 DEFB $FE,$F1,$01,$50,$D7,$1A,$FE,$81
 $CCE8 DEFB $FE,$51,$0B,$C7,$FE,$BC,$07,$F2
 $CCF0 DEFB $FD,$EA,$7F,$0B,$F8,$63,$AA,$95
 $CCF8 DEFB $D5,$0A,$67,$8F,$E8,$97,$6A,$E5
 $CD00 DEFB $0E,$55,$AF,$7D,$E5,$F1,$7E,$A9
 $CD08 DEFB $AE,$86,$38,$F8,$43,$AC,$0D,$A2
 $CD10 DEFB $15,$C2,$F4,$AA,$9C,$17,$6A,$41
 $CD18 DEFB $F5,$FA,$70,$6B,$68

; Data block at CD1D
b$CD1D DEFB $95,$1A,$05,$AA,$41,$82,$51,$0E
 $CD25 DEFB $5E,$56,$5F,$79,$20,$07,$A8,$53
 $CD2D DEFB $00,$5D,$10,$3D,$08,$55,$00,$E8
 $CD35 DEFB $15,$BE,$04,$05,$09,$94,$AA,$6A
 $CD3D DEFB $01,$FA,$55,$BE,$55,$AE,$40,$A1
 $CD45 DEFB $55,$A0,$90,$DF,$D0,$57,$09,$FF
 $CD4D DEFB $A8,$EF,$AA,$F7,$AA,$FF,$2A,$EA
 $CD55 DEFB $90,$FB,$0B,$F6,$13,$55,$C1,$FE
 $CD5D DEFB $55,$AA,$55,$AA,$55,$BF,$55,$AA
 $CD65 DEFB $03,$6F,$C8,$2F,$F4,$F6,$84,$57
 $CD6D DEFB $AA,$55,$AA,$55,$AA,$D5,$AA,$6F
 $CD75 DEFB $E2,$F4,$25,$EC,$2A,$3E,$C1,$AA
 $CD7D DEFB $55,$AA,$55,$AA,$55,$AA,$55,$FC
 $CD85 DEFB $41,$37,$54

; Data block at CD88
b$CD88 DEFB $0B,$A2,$7B,$80,$55,$AA,$55,$AA
 $CD90 DEFB $55,$AA,$55,$AA,$1D,$02,$DA,$C5
 $CD98 DEFB $D5,$42,$3E,$81,$AA,$55,$AA,$55
 $CDA0 DEFB $AA,$55,$AA,$55,$BE,$41,$AB,$42
 $CDA8 DEFB $5D,$02,$7F,$A0,$55,$AA,$55,$AA
 $CDB0 DEFB $55,$AA,$55,$AA,$FD,$02,$3A,$B0
 $CDB8 DEFB $BD,$BC,$7E,$05,$AA,$55,$AA,$55
 $CDC0 DEFB $AA,$55,$AA,$55,$BE,$40,$BD,$19
 $CDC8 DEFB $FD,$15,$5F,$A0,$55,$AA,$55,$AA
 $CDD0 DEFB $55,$AA,$55,$AA,$FD,$02,$4F,$BE
 $CDD8 DEFB $43,$5C,$FA,$05,$AA,$55,$AA,$57
 $CDE0 DEFB $AA,$57,$AA,$55,$BF,$40,$E6,$2E
 $CDE8 DEFB $EA,$16,$5F,$A0,$55,$AA,$55,$AA
 $CDF0 DEFB $55,$AA,$55,$AA,$FD,$02,$41,$28
 $CDF8 DEFB $A3,$54,$FA,$05,$AA,$D5,$A8,$55
 $CE00 DEFB $A8,$55,$AA,$5D,$BF,$40,$D1,$2A
 $CE08 DEFB $E9,$14,$5F,$A0,$55,$AA,$55,$AA
 $CE10 DEFB $55,$AE,$55,$AE,$FD,$02,$D7,$28
 $CE18 DEFB $AB,$00,$FA,$05,$2A,$5D,$AA,$D5
 $CE20 DEFB $AA,$77,$A2,$55,$BF,$40,$D5,$00
 $CE28 DEFB $EB,$0C,$5F,$A0,$55,$BE,$55,$AA
 $CE30 DEFB $51,$BA,$51,$AA,$FD,$03,$D7,$30
 $CE38 DEFB $FF,$7C,$FA,$05,$A2,$D7,$2A,$D5
 $CE40 DEFB $88,$F5,$AA,$75,$BF,$50,$FF,$2E
 $CE48 DEFB $F3,$14,$5F,$A0,$41,$BA,$55,$AF
 $CE50 DEFB $45,$AF,$55,$EB,$FC,$0A,$CF,$28
 $CE58 DEFB $83,$94,$FA,$07,$28,$5D,$2A

; Data block at CE5F
b$CE5F DEFB $F5,$0A,$D7,$8A,$5F,$AF,$50,$D1
 $CE67 DEFB $29,$EB,$15,$5F,$E0,$45,$EF,$50
 $CE6F DEFB $AE,$50,$BE,$14,$EA,$F5,$0A,$D7
 $CE77 DEFB $A8,$6B,$90,$F8,$07,$A2,$55,$0A
 $CE7F DEFB $D7,$28,$FF,$A0,$5F,$AF,$50,$D6
 $CE87 DEFB $09,$EA,$21,$1F,$E0,$10,$EE,$51
 $CE8F DEFB $FE,$41,$FF,$15,$BE,$F5,$0B,$57
 $CE97 DEFB $86,$6F,$5C,$F8,$07,$AA,$5F,$28
 $CE9F DEFB $FF,$00,$FF,$A0,$FD,$AF,$70,$F6
 $CEA7 DEFB $32,$DE,$5A,$1F,$A0,$11,$FE,$01
 $CEAF DEFB $FF,$00,$FF,$41,$EF,$F4,$0A,$79
 $CEB7 DEFB $4A,$A3,$44,$F8,$17,$A0,$FF,$00
 $CEBF DEFB $FF,$00,$FF,$02,$FF,$8F,$D0,$CD
 $CEC7 DEFB $22,$A5,$14,$5F,$A8,$01,$FF,$00
 $CECF DEFB $FF,$00,$FF,$10,$FF,$F5,$0A,$B5
 $CED7 DEFB $28,$BB,$21,$E8,$1F,$00,$FF,$00
 $CEDF DEFB $FF,$00,$FF,$00,$FF,$2F,$F8,$DD
 $CEE7 DEFB $84,$EB,$4B,$57,$E9,$00,$FF,$00
 $CEEF DEFB $FF,$00,$FF,$00,$FF,$F5,$8F,$D7
 $CEF7 DEFB $D2,$DE,$15,$E0,$9F,$00,$FF,$00
 $CEFF DEFB $FF,$00,$FF,$00,$FF,$07,$F8,$7B
 $CF07 DEFB $A8,$B4,$10,$16,$FC,$00,$FF,$00
 $CF0F DEFB $FF,$00,$FF,$00,$FF,$70,$3F,$2D
 $CF17 DEFB $08,$EA,$FF,$60,$FF,$00,$FF,$00
 $CF1F DEFB $FE,$00,$F9,$00,$E7,$07,$9F,$57
 $CF27 DEFB $9F,$EF,$FF,$03,$F9,$00,$F2,$00
 $CF2F DEFB $E1,$00,$C2,$00,$81,$C0,$86,$F7
 $CF37 DEFB $8F

; Sprite ???
b$CF38 DEFB $00,$FF,$00,$9F,$00,$6F,$00,$FE
 $CF40 DEFB $00,$F9,$60,$F7,$90,$FB,$01,$E7
 $CF48 DEFB $06,$9F,$08,$F9,$04,$E1,$18,$9F
 $CF50 DEFB $60,$8F,$06,$95,$1E,$29,$60,$86
 $CF58 DEFB $70,$81,$6A,$51,$D6,$A7,$79,$C2
 $CF60 DEFB $7E,$E1,$AE,$1F,$58,$7F,$3D,$F2
 $CF68 DEFB $1E,$F9,$E0,$FF,$80,$FF,$0D,$FF
 $CF70 DEFB $06,$FF,$00,$FF,$00,$FF,$00,$FF
 $CF78 DEFB $00,$FF,$00,$F3,$00,$FF,$00,$CF
 $CF80 DEFB $00,$CD,$00,$FF,$00,$FF,$0C,$3E
 $CF88 DEFB $00,$B7,$30,$7B,$32,$FF,$00,$FC
 $CF90 DEFB $00,$F3,$C1,$FF,$48,$3D,$84,$3C
 $CF98 DEFB $00,$FC,$03,$F3,$0C,$F1,$00,$F2
 $CFA0 DEFB $C2,$B2,$C3,$04,$03,$C5,$0C,$F0
 $CFA8 DEFB $0E,$F0,$0D,$2A,$4D,$2A

; Data block at CFAE
b$CFAE DEFB $FB,$54,$3A,$54

; Data block at CFB2
b$CFB2 DEFB $0F,$C8,$0F,$3C,$D5,$20,$D5,$A3
 $CFBA DEFB $AB,$4F,$AB

; Message at CFBD
t$CFBD DEFM "D7>"

; Data block at CFC0
b$CFC0 DEFB $C3,$1F,$DF,$28,$5C,$3F,$B0,$FF
 $CFC8 DEFB $BB,$54,$C1,$0C,$E0,$02,$D7,$A3
 $CFD0 DEFB $C0,$FF,$00,$FF,$AB,$4F,$F3,$85
 $CFD8 DEFB $FD,$C2,$5C,$3F,$00,$FF,$00,$FF
 $CFE0 DEFB $B0,$FF,$7A,$E4,$3D,$F3,$C0,$FF
 $CFE8 DEFB $00,$FF,$00,$FF,$00,$FF,$1B,$FF
 $CFF0 DEFB $0C,$FF,$00,$FF,$00,$FF,$00,$F3
 $CFF8 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FC
 $D000 DEFB $00,$FF,$00,$7F,$00,$F3,$00,$FF
 $D008 DEFB $00,$FF,$03,$CF,$00,$8F,$80,$D7
 $D010 DEFB $0C,$3F,$00,$FF,$00,$FC,$30,$DF
 $D018 DEFB $70,$CB,$28,$0D,$C0,$EF,$00,$F3
 $D020 DEFB $03,$CF,$20,$F4,$34,$AC,$F2,$42
 $D028 DEFB $10,$F1,$0C,$CF,$30,$C7,$0B,$CA
 $D030 DEFB $53,$84,$BD,$2A,$0E,$11,$30,$C3
 $D038 DEFB $38,$C0,$35,$A8,$7B,$14,$D5,$A3
 $D040 DEFB $EE

; Message at D041
t$D041 DEFM "R<!?0W"

; Data block at D047
b$D047 DEFB $85,$EB,$0F,$5C,$3F,$AD,$2A,$DE
 $D04F DEFB $19,$CF,$0C,$7A,$44,$F0,$FF,$C0
 $D057 DEFB $FF,$D5,$A3,$E6,$02,$F3,$85,$BB
 $D05F DEFB $4F,$00,$FF,$00,$FF,$5C,$3F,$FD
 $D067 DEFB $C2,$7A,$E4,$B0,$FF,$00,$FF,$00
 $D06F DEFB $FF,$C0,$FF,$3D,$F3,$1B,$FF,$00
 $D077 DEFB $FF,$00,$FF,$00,$FF,$00,$FF,$0C
 $D07F DEFB $FF,$00,$FF,$00,$F3,$00,$ED,$00
 $D087 DEFB $FF,$00,$FF,$0C,$CE,$12,$A6,$00
 $D08F DEFB $FF,$00,$FF

; Message at D092
t$D092 DEFM "1FY"

; Data block at D095
b$D095 DEFB $81,$00,$FE,$00,$FD,$B9,$03,$7E
 $D09D DEFB $0F,$01,$FA,$02,$F4,$FC,$0F,$F0
 $D0A5 DEFB $57,$05,$E8,$0B,$D0,$F0,$B7,$A8
 $D0AD DEFB $BB,$17

; Message at D0AF
t$D0AF DEFM "C/%HqD?"

; Data block at D0B6
b$D0B6 DEFB $BC,$C2,$DA,$FF,$8E,$FF,$C0,$B7
 $D0BE DEFB $3D,$CF,$00,$CF,$00,$FF,$00,$FF
 $D0C6 DEFB $00,$B7,$30,$73,$00,$FF,$00,$FF
 $D0CE DEFB $48,$65,$8C,$62,$00,$FF,$00,$7F
 $D0D6 DEFB $9A,$81,$9D,$C0,$00,$BF,$80,$5F
 $D0DE DEFB $7E,$F0,$3F,$F0,$40,$2F,$A0,$17
 $D0E6 DEFB $0F,$EA,$0F,$ED,$D0,$0B,$E8,$C2
 $D0EE DEFB $15,$DD,$12,$8E,$F4,$A4

; Message at D0F4
t$D0F4 DEFM "=C\""

; Data block at D0F7
b$D0F7 DEFB $FC,$71,$FF,$5B,$FF,$BC,$FF,$03
 $D0FF DEFB $FF,$00,$83,$00,$79,$7C,$3D,$86
 $D107 DEFB $41,$C2,$41,$BE,$40,$BE,$82,$BF
 $D10F DEFB $6E,$7D,$39,$91,$31,$C6,$61,$CE
 $D117 DEFB $41,$9E,$41,$BE,$C5,$BE,$81,$3A
 $D11F DEFB $FD,$7E,$83,$02,$7D,$7C,$39,$82
 $D127 DEFB $41,$C6,$41,$BE,$41,$BE,$41,$BE
 $D12F DEFB $41,$BE,$61,$BE,$41,$9E,$61,$BE
 $D137 DEFB $41,$9E,$21,$BE,$A1,$DE,$81,$5E
 $D13F DEFB $3D,$7E,$83,$C2,$75,$7C,$39,$8A
 $D147 DEFB $41,$C6,$41,$BE,$40,$BE,$42,$BF
 $D14F DEFB $86,$BD,$ED,$79,$79,$12,$19,$86
 $D157 DEFB $4D,$E6,$4D,$B2,$46,$B2,$62,$B9
 $D15F DEFB $7D,$9D,$83,$82,$3D,$7C,$79,$C2
 $D167 DEFB $01,$86,$41,$FE,$40,$BE,$82,$BF
 $D16F DEFB $F6,$7D,$7D,$09,$0D,$82,$19,$F2
 $D177 DEFB $71,$E6,$C1,$8E,$83,$3E,$7D,$7C
 $D17F DEFB $39,$82,$41,$C6,$61,$BE,$41,$9E
 $D187 DEFB $61,$BE,$41,$9E,$61,$BE,$71,$9E
 $D18F DEFB $29,$8E,$3D,$D6,$C3,$C2,$FF,$3C
 $D197 DEFB $FF,$00,$FF,$00,$FF,$00,$C7,$00
 $D19F DEFB $E7,$00,$FF,$00,$81,$00,$FF,$00
 $D1A7 DEFB $7F,$00,$3C,$00,$FE,$00,$FE,$7E
 $D1AF DEFB $DD,$00,$3F,$80,$BF,$C3,$FA,$01
 $D1B7 DEFB $F8,$01,$F3,$22,$FD,$C0,$1F,$40
 $D1BF DEFB $9F,$05,$EA,$07,$F7,$0C,$E7,$02
 $D1C7 DEFB $75,$E0,$0F,$60,$07,$15,$EA,$08
 $D1CF DEFB $C7,$18,$DF,$8A,$D5,$F0,$17,$F8
 $D1D7 DEFB $07,$15,$AA,$38,$DF,$20,$95,$2A
 $D1DF DEFB $D4,$E8,$03,$F8,$03,$55,$A0,$20
 $D1E7 DEFB $BD

; Message at D1E8
t$D1E8 DEFM "j1+D"

; Data block at D1EC
b$D1EC DEFB $FC,$03,$FC,$21,$5F,$88,$42,$72
 $D1F4 DEFB $CE,$B5,$BB,$40,$FC,$01,$DE,$08
 $D1FC DEFB $77,$A0,$8D,$8A,$4A,$A1,$BF,$40
 $D204 DEFB $FE,$A0,$F7,$55,$5F,$1B,$75,$50
 $D20C DEFB $5E,$AA,$BF,$AE,$5F,$AB,$AA,$FF
 $D214 DEFB $E4,$7F,$AF,$F5,$55,$FF,$51,$FF
 $D21C DEFB $54,$FF,$00,$FE,$80,$FE,$0A,$FF
 $D224 DEFB $00,$FF,$00,$81,$00,$7E,$00,$FF
 $D22C DEFB $00,$FE,$7E,$EA,$81,$54,$00,$FE
 $D234 DEFB $01,$FE,$15,$A8,$AB,$00,$01,$FF
 $D23C DEFB $01,$F8,$57,$FB,$FF,$54,$00,$F1
 $D244 DEFB $07,$E8,$04,$A9,$AB,$02,$0E,$E4
 $D24C DEFB $17,$E9,$56,$50,$FD,$A9,$1B,$F2
 $D254 DEFB $16,$C4,$AF,$14,$56,$40,$0D,$A3
 $D25C DEFB $3B,$54,$EB,$91,$BF,$40,$5C,$80
 $D264 DEFB $AB,$FF,$6E,$FF,$BF,$00,$7F,$FF
 $D26C DEFB $00,$00,$00,$81,$00,$81,$00,$7C
 $D274 DEFB $00,$7E,$00,$FE,$FF,$6A,$7E,$3A
 $D27C DEFB $7E,$74,$83,$A8,$81,$54,$01,$54
 $D284 DEFB $95,$28,$C5,$28,$8B,$55,$57,$00
 $D28C DEFB $AB,$80,$AB,$00,$D7,$F4,$D7,$FE
 $D294 DEFB $AA,$FE,$FF,$2A,$7F,$B4,$FF,$A8
 $D29C DEFB $0B,$01,$01,$4A,$01,$54,$D5,$01
 $D2A4 DEFB $4B,$14,$57,$84,$FE,$A9,$B5,$41
 $D2AC DEFB $AB,$2B,$FE,$50,$EB,$2A,$7B,$50
 $D2B4 DEFB $56,$01,$BE,$14,$D4,$00,$AF,$09
 $D2BC DEFB $D5,$81,$AF,$6A,$FE,$81,$EB,$62
 $D2C4 DEFB $FF,$82,$F6,$0E,$7E,$84,$95,$03
 $D2CC DEFB $7E,$FF,$9D,$FF,$7D,$FF,$F1,$29
 $D2D4 DEFB $7B,$53,$FC,$0F,$00,$FF,$00,$FF
 $D2DC DEFB $00,$FF,$00,$0F,$00,$53,$00,$FF
 $D2E4 DEFB $00,$FF,$F0,$29,$AC,$15,$00,$7F
 $D2EC DEFB $00,$BF,$D6,$00,$EA,$DF,$80,$1F
 $D2F4 DEFB $40,$9F,$FF,$2A,$20,$95,$E0,$5F
 $D2FC DEFB $60,$2F,$D5,$40,$6A,$0A,$A0,$A7
 $D304 DEFB $D0,$57,$BF,$95,$F5

; Message at D309
t$D309 DEFM "(X'"

; Data block at D30C
b$D30C DEFB $A8,$C3,$6A,$02,$D7,$89,$D8,$27
 $D314 DEFB $3C,$0F,$FD,$28,$76,$FF,$D8,$FF
 $D31C DEFB $F0,$FF,$D7,$FF,$00,$FF,$00,$FF
 $D324 DEFB $00,$FF,$00,$1F,$00,$1F,$00,$FF
 $D32C DEFB $00,$FC,$00,$2C,$00,$07,$E0,$43
 $D334 DEFB $E0,$88,$00,$F1,$03,$C0,$D3,$44
 $D33C DEFB $F8,$99,$BC,$07,$77,$22,$0E,$84
 $D344 DEFB $3F,$22,$BB,$08,$66,$03,$F8,$B9
 $D34C DEFB $DD,$80,$7B,$D0,$DD,$80,$F7,$36
 $D354 DEFB $FC,$03,$46,$21,$7F,$20,$2F,$16
 $D35C DEFB $7F,$70,$C9,$20,$FC,$0D,$DE,$87
 $D364 DEFB $DF,$8A,$E9,$C0,$8F,$87,$DF,$21
 $D36C DEFB $F2,$E3,$78,$FB,$75,$00,$3F,$BF
 $D374 DEFB $78,$FF,$DE,$FF,$1C,$FF,$04,$3F
 $D37C DEFB $FF,$FF,$40,$FF,$00,$3F,$00,$FF
 $D384 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D38C DEFB $00,$FF,$00,$FF,$00,$FF,$00,$4F
 $D394 DEFB $C0,$A3,$00,$FF,$00,$FF,$00,$FF
 $D39C DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D3A4 DEFB $00,$FF,$B0,$54,$5C,$AA,$00,$3F
 $D3AC DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D3B4 DEFB $00,$FF,$00,$FF,$00,$4F,$AB

; Message at D3BB
t$D3BB DEFM "UU*"

; Data block at D3BE
b$D3BE DEFB $C0,$03,$00,$FF,$00,$FF,$00,$FF
 $D3C6 DEFB $00,$FF,$00,$FF,$00,$FF,$B0,$54
 $D3CE DEFB $AA,$11,$D5,$02,$FC,$AA,$00,$1F
 $D3D6 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D3DE DEFB $00,$47,$AB,$55,$EE,$25,$FD,$4A
 $D3E6 DEFB $55,$AA,$E0,$A1,$00,$FF,$00,$FF
 $D3EE DEFB $00,$FF,$00,$7F,$B8,$0A,$AA,$15
 $D3F6 DEFB $DA,$84,$B5,$80,$55,$02,$5E,$15
 $D3FE DEFB $00,$1F,$00,$FF,$00,$FF,$80,$A7
 $D406 DEFB $F5,$AA,$EA,$04,$7B,$00,$7F,$00
 $D40E DEFB $FD,$08,$EA,$15,$E0,$51,$00,$FF
 $D416 DEFB $00,$7F,$58,$A8,$55,$00,$FB,$10
 $D41E DEFB $FF,$00,$FF,$00,$F7,$10,$EA,$00
 $D426 DEFB $AE,$07,$00,$8F,$80,$F7,$57,$3F
 $D42E DEFB $FF,$00,$EF,$20,$FF,$00,$FF,$00
 $D436 DEFB $EF,$40,$FF,$00,$F8,$7F,$70,$FB
 $D43E DEFB $08,$FB,$C0,$FF,$FF,$01,$D6,$40
 $D446 DEFB $FF,$00,$FF,$00,$BF,$80,$FF,$03
 $D44E DEFB $80,$FF,$04,$FD,$04,$FD,$00,$FF
 $D456 DEFB $FE,$07,$BF,$80,$FF,$00,$FF,$00
 $D45E DEFB $7F,$80,$FC,$07,$00,$FF,$02,$FD
 $D466 DEFB $02,$FD,$00,$FF,$F8,$0F,$7F,$00
 $D46E DEFB $FF,$01,$FF,$01,$7F,$00,$F8,$1F
 $D476 DEFB $00,$FF,$02,$FD,$02,$FD,$00,$FF
 $D47E DEFB $F0,$1F,$FF,$00,$FE,$01,$FE,$01
 $D486 DEFB $FF,$00,$E0,$3F,$00,$FE,$02,$FD
 $D48E DEFB $02,$FD,$00,$FC,$E0,$3F,$FF,$00
 $D496 DEFB $FE,$02,$FE,$02,$FF,$00,$C0,$3F
 $D49E DEFB $01,$FA,$02,$FD,$02,$FD,$03,$F2
 $D4A6 DEFB $C0,$7F,$FF,$00,$FD,$02,$FD,$02
 $D4AE DEFB $FF,$00,$C0,$7F,$05,$E2,$02,$FD
 $D4B6 DEFB $02,$FD,$0D,$C2,$80,$7F,$FF,$00
 $D4BE DEFB $FD,$02,$FD,$02,$FF,$00,$80,$7F
 $D4C6 DEFB $1D,$82,$02,$FD,$02,$FD,$3D,$02
 $D4CE DEFB $80,$7F,$FF,$00,$FD,$02,$FD,$02
 $D4D6 DEFB $FF,$00,$80,$7F,$7D,$02,$02,$FD
 $D4DE DEFB $02,$FD,$FD,$02,$80,$FF,$FF,$00
 $D4E6 DEFB $FD,$82,$FD,$62,$FF,$00,$80,$FF
 $D4EE DEFB $FD,$02,$02,$FD,$02,$FD,$FD,$02
 $D4F6 DEFB $00,$FF,$FF,$00,$7D,$1A,$9D,$06
 $D4FE DEFB $FF,$00,$00,$FF,$FD,$02,$02,$FD
 $D506 DEFB $02,$FD,$FD,$02,$00,$FF,$FF,$00
 $D50E DEFB $E5,$02,$F9,$06,$FF,$00,$00,$FF
 $D516 DEFB $FD,$02,$02,$F9,$02,$F7,$FD,$02
 $D51E DEFB $00,$FF,$FF,$00,$FD,$02,$F9,$06
 $D526 DEFB $FF,$00,$00,$FF,$FD,$02,$06,$EF
 $D52E DEFB $08,$DD,$FD,$02,$00,$FF,$FF,$00
 $D536 DEFB $FD,$02,$F9,$06,$FF,$00,$00,$FF
 $D53E DEFB $FD,$02,$10,$AF,$22,$BF,$FD,$02
 $D546 DEFB $00,$FF,$FF,$00,$FD,$02,$F9,$86
 $D54E DEFB $FF,$00,$00,$FF,$FD,$02,$50,$77
 $D556 DEFB $40,$FF,$FD,$55,$00,$FF,$FF,$00
 $D55E DEFB $FD,$62,$79,$1A,$FF,$00,$00,$FF
 $D566 DEFB $FD,$2F,$88,$BF,$00,$FF,$AA,$57
 $D56E DEFB $00,$FF,$FF,$00,$9D,$06,$E5,$02
 $D576 DEFB $FF,$00,$00,$FF,$D0,$3F,$40,$EF
 $D57E DEFB $00,$FF,$A8,$5F,$00,$FF,$FF,$00
 $D586 DEFB $F9,$02,$FD,$02,$FF,$00,$00,$FF
 $D58E DEFB $C0,$3B,$10,$FF,$00,$FF,$A0,$7F
 $D596 DEFB $00,$FF,$FF,$00,$FD,$02,$FD,$02
 $D59E DEFB $FF,$00,$00,$FF,$C4,$6F,$00,$BF
 $D5A6 DEFB $00,$DF,$80,$FD,$00,$FE,$FF,$00
 $D5AE DEFB $FD,$02,$FD,$02,$FF,$00,$00,$FD
 $D5B6 DEFB $90,$FD,$40,$FF,$20,$FF,$02,$7F
 $D5BE DEFB $01,$FD,$FF,$00,$FD,$C2,$FD,$F2
 $D5C6 DEFB $FF,$00,$02,$FB,$02,$EF,$00,$EF
 $D5CE DEFB $00,$FF,$80,$7F,$02,$F7,$FF,$00
 $D5D6 DEFB $3D,$CC,$0D,$FF,$FF,$80,$04,$EF
 $D5DE DEFB $10,$5F,$10,$FF,$00,$FF,$80,$7F
 $D5E6 DEFB $08,$DF,$FF,$E0,$33,$FB,$00,$FF
 $D5EE DEFB $7F,$F8,$10,$B7,$A0,$F7,$00,$FF
 $D5F6 DEFB $00,$FF,$80,$FF,$20,$7F,$1F,$DE
 $D5FE DEFB $04,$DE,$00,$FF,$07,$FF,$48,$FF
 $D606 DEFB $08,$FF,$00,$FF,$00,$FF,$00,$FF
 $D60E DEFB $80,$FC,$21,$FF,$21,$FF,$FB,$85
 $D616 DEFB $7B,$C7,$7A,$C3,$38,$C3,$3C,$CB
 $D61E DEFB $3C,$E3,$34,$E1,$1C,$E1,$1E,$ED
 $D626 DEFB $1E,$E1,$12,$E3,$1E,$DB,$1C,$C3
 $D62E DEFB $24,$C3,$3C,$E3,$3C,$DB,$1C,$81
 $D636 DEFB $24,$81,$7E,$11,$7E,$64,$EE,$EE
 $D63E DEFB $9B,$FF,$11,$FF,$00,$FF,$00,$FF
 $D646 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D64E DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D656 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D65E DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D666 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FC
 $D66E DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D676 DEFB $00,$FF,$00,$FF,$00,$FA,$00,$7F
 $D67E DEFB $00,$FF,$00,$FF,$00,$1F,$03,$E5
 $D686 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D68E DEFB $00,$FF,$00,$FF,$05,$CA,$80,$A7
 $D696 DEFB $00,$FF,$00,$FF,$E0,$51,$1A,$95
 $D69E DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D6A6 DEFB $00,$FF,$00,$FF

; Message at D6AA
t$D6AA DEFM "5*X"

; Data block at D6AD
b$D6AD DEFB $AA,$00,$FF,$00,$3F,$AE

; Message at D6B3
t$D6B3 DEFM "UjU"

; Data block at D6B6
b$D6B6 DEFB $00,$FE,$00,$FF,$00,$FF,$00,$FF
 $D6BE DEFB $00,$FF,$00,$FC,$D5,$AA,$55,$AA
 $D6C6 DEFB $00,$8F,$C0,$53,$AA,$55,$AA,$55
 $D6CE DEFB $01,$F1,$00,$FF,$00,$FF,$00,$FF
 $D6D6 DEFB $00,$FF,$03,$EA,$55,$AA,$55,$AA
 $D6DE DEFB $70,$BD,$AC,$59,$AA,$55,$AA,$55
 $D6E6 DEFB $0E,$D5,$00,$FF,$00,$FF,$00,$FF
 $D6EE DEFB $00,$FF,$15,$AA,$55,$AA,$55,$AA
 $D6F6 DEFB $42,$B5,$A6,$F5,$AA,$55,$AA

; Message at D6FD
t$D6FD DEFM "U*U"

; Data block at D700
b$D700 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FE
 $D708 DEFB $55,$AA,$55,$AA,$55,$AA,$4A,$ED
 $D710 DEFB $0A,$DD,$AA,$57,$AA,$55,$AA,$55
 $D718 DEFB $00,$F9,$00,$FF,$00,$FF,$01,$F2
 $D720 DEFB $55,$AA,$55,$AA,$55,$AF,$12,$BD
 $D728 DEFB $22,$BD,$A8,$7F,$AA,$55,$AA,$55
 $D730 DEFB $06,$E5,$00,$FF,$00,$FF,$0D,$CA
 $D738 DEFB $55,$AA,$55,$AA,$50,$FF,$42,$7D
 $D740 DEFB $42,$DD,$80,$FE,$AA,$55,$AA,$55
 $D748 DEFB $1A,$95,$00,$FF,$00,$FE

; Message at D74E
t$D74E DEFM "5*U"

; Data block at D751
b$D751 DEFB $AA,$55,$BF,$00,$FD,$82,$9D,$22
 $D759 DEFB $1D,$01,$FD,$AA,$FF,$AA

; Message at D75F
t$D75F DEFM "UjU"

; Data block at D762
b$D762 DEFB $00,$FC,$01,$FA,$D5,$AA,$55,$BF
 $D76A DEFB $40,$FF,$02,$FB,$62,$1D,$E2,$1D
 $D772 DEFB $02,$F6,$00,$FF,$AA,$FF,$AA,$55
 $D77A DEFB $03,$F5,$05,$EA,$55,$BF,$40,$FF
 $D782 DEFB $00,$FF,$04,$EC,$E2,$1D,$E2,$1D
 $D78A DEFB $09,$E8,$00,$FF,$00,$FF,$AA,$FF
 $D792 DEFB $0A,$E7,$15,$E1,$40,$FF,$00,$FF
 $D79A DEFB $00,$FF,$13,$D8,$E2,$3D,$E2,$3B
 $D7A2 DEFB $17,$B0,$00,$FF,$00,$FF,$00,$7F
 $D7AA DEFB $18,$E0,$1E,$E0,$00,$3F,$00,$FF
 $D7B2 DEFB $00,$FF,$27,$60,$C2,$7B,$C4,$F6
 $D7BA DEFB $4F,$40,$00,$FF,$00,$FF,$80,$0F
 $D7C2 DEFB $1F,$E0,$1F,$E0,$C0,$03,$00,$FF
 $D7CA DEFB $00,$FE,$9F,$C1,$84,$ED,$09,$DF
 $D7D2 DEFB $BF,$81,$00,$FD,$00,$FF,$F0,$00
 $D7DA DEFB $1F,$E0,$1F,$A0,$FC,$00,$00,$3F
 $D7E2 DEFB $01,$FB,$3E,$03,$12,$DD,$20,$BF
 $D7EA DEFB $7E,$07,$02,$FA,$00,$1F,$FF,$00
 $D7F2 DEFB $1F,$E0,$5F,$A0,$FF,$00,$C0,$07
 $D7FA DEFB $04,$F6,$FC,$0F,$22,$7F,$40,$AF
 $D802 DEFB $F8,$0E,$05,$EC,$E0,$01,$FF,$00
 $D80A DEFB $1F,$E0,$5F,$E0,$FF,$00,$F8,$00
 $D812 DEFB $09,$5C,$F0,$1E,$80,$D7,$50,$FF
 $D81A DEFB $F1,$3D,$13,$1C,$FE,$00,$FF,$00
 $D822 DEFB $1F,$C0,$1F,$E0,$FF,$00,$FF,$00
 $D82A DEFB $A3,$3C,$E1,$7B,$28,$EF,$00,$FF
 $D832 DEFB $C2,$7A,$E3,$3C,$FF,$00,$FF,$00
 $D83A DEFB $3F,$A0,$1F,$E0,$FF,$00,$FF,$00
 $D842 DEFB $C3,$3C,$84,$F7,$10,$FF,$00,$DF
 $D84A DEFB $85,$EB,$C3,$3D,$FF,$00,$FF,$00
 $D852 DEFB $5F,$E0,$1F,$E0,$FF,$00,$FF,$00
 $D85A DEFB $C3,$3F,$08,$D7,$00,$FB,$20,$7F
 $D862 DEFB $14,$DB,$C2,$3F,$FF,$00,$FF,$00
 $D86A DEFB $1F,$E0,$1F,$F8,$FF,$00,$FF,$00
 $D872 DEFB $C0,$3F,$28,$BF,$04,$EF,$80,$FF
 $D87A DEFB $24,$7F,$C0,$3F,$FF,$00,$FF,$00
 $D882 DEFB $1F,$FE,$07,$DF,$FF,$80,$FF,$00
 $D88A DEFB $C0,$3E,$40,$FF,$10,$BF,$00,$FF
 $D892 DEFB $80,$B6,$C0,$3E,$FF,$00,$FF,$C0
 $D89A DEFB $01,$FF,$20,$F6,$7F,$F0,$FF,$00
 $D8A2 DEFB $C1,$3D,$00,$FB,$40,$FF,$00,$FF
 $D8AA DEFB $49,$FF,$C1,$3A,$FF,$00,$3F,$7C
 $D8B2 DEFB $00,$FF,$09,$FF,$0F,$F7,$FF,$00
 $D8BA DEFB $C2,$3B,$04,$DF,$00,$DF,$00,$F7
 $D8C2 DEFB $00,$DD,$C5,$37,$FF,$C0,$83,$7E
 $D8CA DEFB $00,$DF,$00,$FF,$08,$EF,$FF,$60
 $D8D2 DEFB $C4,$2D,$20,$F7,$20,$FF,$08,$FF
 $D8DA DEFB $22,$FF,$C8,$1F,$3F,$F8,$81,$FF
 $D8E2 DEFB $20,$FF,$00,$ED,$10,$EB,$9F,$F6
 $D8EA DEFB $D2,$17,$08,$FD,$00,$FF,$00,$FF
 $D8F2 DEFB $00,$7F,$E0,$BF,$07,$FF,$00,$FF
 $D8FA DEFB $00,$F5,$12,$FF,$14,$FF,$09,$FD
 $D902 DEFB $E8,$7F,$02,$FF,$00,$EF,$00,$FF
 $D90A DEFB $80,$FF,$40,$FF,$00,$7F,$00,$FF
 $D912 DEFB $0A,$FF,$00,$FF,$00,$FB,$02,$FF
 $D91A DEFB $80,$F7,$00,$FF,$10,$FF,$00,$FF
 $D922 DEFB $00,$7F,$00,$FF,$80,$FF,$00,$FF
 $D92A DEFB $00,$FF,$00,$FF,$04,$FF,$00,$FF
 $D932 DEFB $08,$FF,$00,$FF,$00,$FF,$00,$FF
 $D93A DEFB $80,$FF,$00,$FF,$00,$FF,$00,$FF
 $D942 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D94A DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D952 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D95A DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D962 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D96A DEFB $00,$FF,$00,$FF,$00,$3F,$00,$FF
 $D972 DEFB $00,$FF,$00,$FF,$00,$FE,$00,$5F
 $D97A DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D982 DEFB $00,$FF,$00,$FF,$C0,$A7,$00,$F8
 $D98A DEFB $00,$FF,$00,$FF,$01,$E5,$A0,$53
 $D992 DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D99A DEFB $00,$FF,$00,$FF,$58,$A9,$07,$8A
 $D9A2 DEFB $00,$FF,$00,$FF,$1A,$55,$AC,$54
 $D9AA DEFB $00,$FF,$00,$FF,$00,$FF,$00,$FF
 $D9B2 DEFB $00,$FF,$00,$7F,$56,$AA,$75,$AA
 $D9BA DEFB $00,$FC,$00,$F1,$AA,$55,$AB,$55
 $D9C2 DEFB $00,$3F,$00,$FF,$00,$FF,$00,$FF
 $D9CA DEFB $00,$FF,$80,$8F,$55,$AA,$55,$AA
 $D9D2 DEFB $03,$CA,$0E,$BD,$AA,$55,$AA,$55
 $D9DA DEFB $C0,$57,$00,$FF,$00,$FF,$00,$FF
 $D9E2 DEFB $00,$FF,$70,$AB,$55,$AA,$55,$AA
 $D9EA DEFB $35,$9A,$42,$AD,$AA,$55,$AA,$55
 $D9F2 DEFB $A8,$55,$00,$FF,$00,$FF,$00,$FF
 $D9FA DEFB $00,$FF,$54,$AA,$55,$AA,$55,$AA
 $DA02 DEFB $65,$AF,$52,$B7,$AA,$55,$AA,$55
 $DA0A DEFB $AA,$55,$00,$7F,$00,$FF,$00,$FF
 $DA12 DEFB $00,$9F,$55,$AA,$55,$AA,$55,$EA
 $DA1A DEFB $50,$BB,$48,$BD,$AA,$F5,$AA,$55
 $DA22 DEFB $AA,$55,$80,$4F,$00,$FF,$00,$FF
 $DA2A DEFB $60,$A7,$55,$AA,$55,$AA,$15,$FE
 $DA32 DEFB $44,$BD,$42,$BE,$0A,$FF,$AA,$55
 $DA3A DEFB $AA,$55,$B0,$53,$00,$FF,$00,$FF
 $DA42 DEFB $58,$A9,$55,$AA,$55,$AA,$01,$7F
 $DA4A DEFB $42,$BB,$41,$B9,$00,$BF,$AA,$FD
 $DA52 DEFB $AA,$55,$AC,$54,$00,$7F,$00,$3F
 $DA5A DEFB $56,$AA,$55,$AA,$55,$FF,$80,$BF
 $DA62 DEFB $44,$B8,$46,$B8,$40,$DF,$02,$FF
 $DA6A DEFB $AA,$FD,$AB,$55,$80,$5F,$C0,$AF
 $DA72 DEFB $55,$AA,$55,$FF,$00,$FF,$40,$6F
 $DA7A DEFB $47,$B8,$47,$B8,$20,$37,$00,$FF
 $DA82 DEFB $02,$FF,$AA,$FD,$A0,$57,$50,$E7
 $DA8A DEFB $55,$FF,$00,$FF,$00,$FF,$90,$17
 $DA92 DEFB $47,$B8,$47,$BC,$C8,$1B,$00,$FF
 $DA9A DEFB $00,$FF,$02,$FF,$A8,$87,$18,$07
 $DAA2 DEFB $00,$FE,$00,$FF,$00,$FF,$E8,$0D
 $DAAA DEFB $47,$DC,$43,$DE,$E4,$06,$00,$FF
 $DAB2 DEFB $00,$FF,$00,$FC,$78,$07,$F8,$07
 $DABA DEFB $01,$F0,$00,$FF,$00,$FF,$F2,$02
 $DAC2 DEFB $23,$6F,$21,$B7,$F9,$83,$00,$7F
 $DACA DEFB $00,$FF,$03,$C0,$F8,$07,$F8,$07
 $DAD2 DEFB $0F,$00,$00,$FF,$00,$BF,$FD,$81
 $DADA DEFB $90,$FB,$48,$BB,$7C,$C0,$80,$DF
 $DAE2 DEFB $00,$FC,$3F,$00,$F8,$05,$F8,$07
 $DAEA DEFB $FF,$00,$00,$F8,$40,$5F,$7E,$E0
 $DAF2 DEFB $04,$FD,$44,$FE,$3F,$F0,$20,$6F
 $DAFA DEFB $03,$E0,$FF,$00,$FA,$05,$F8,$07
 $DB02 DEFB $FF,$00,$07,$80,$A0,$37,$1F,$70
 $DB0A DEFB $02,$F5,$01,$EB,$0F,$78,$90,$3A
 $DB12 DEFB $1F,$00,$FF,$00,$FA,$07,$F8,$03
 $DB1A DEFB $FF,$00,$7F,$00,$C8,$38,$8F,$BC
 $DB22 DEFB $0A,$FF,$14,$F7,$87,$DE,$C5,$3C
 $DB2A DEFB $FF,$00,$FF,$00,$F8,$07,$FC,$05
 $DB32 DEFB $FF,$00,$FF,$00,$C7,$3C,$43,$5E
 $DB3A DEFB $00,$FF,$08,$FF,$21,$EF,$C3,$3C
 $DB42 DEFB $FF,$00,$FF,$00,$F8,$07,$FA,$07
 $DB4A DEFB $FF,$00,$FF,$00,$C3,$BC,$A1,$D7
 $DB52 DEFB $00,$FB,$00,$DF,$10,$EB,$C3,$FC
 $DB5A DEFB $FF,$00,$FF,$00,$F8,$07,$F8,$07
 $DB62 DEFB $FF,$00,$FF,$00,$43,$FC,$28,$DB
 $DB6A DEFB $04,$FE,$20,$F7,$14,$FD,$03,$FC
 $DB72 DEFB $FF,$00,$FF,$00,$F8,$1F,$F8,$7F
 $DB7A DEFB $FF,$00,$FF,$00,$03,$FC,$24,$FE
 $DB82 DEFB $01,$FF,$08,$FD,$02,$FF,$03,$7C
 $DB8A DEFB $FF,$00,$FF,$01,$E0,$FB,$80,$FF
 $DB92 DEFB $FF,$03,$FF,$00,$03,$7C,$01,$6D
 $DB9A DEFB $00,$FF,$02,$FF,$00,$DF,$83,$BC
 $DBA2 DEFB $FF,$00,$FE,$0F,$04,$6F,$00,$FF
 $DBAA DEFB $FC,$3E,$FF,$00,$83,$5C,$92,$FF
 $DBB2 DEFB $00,$FF,$00,$FB,$20,$FB,$43,$DC
 $DBBA DEFB $FF,$00,$F0,$EF,$90,$FF,$00,$FB
 $DBC2 DEFB $C1,$7E,$FF,$03,$A3,$EC,$00,$BB
 $DBCA DEFB $00,$EF,$04,$FF,$04,$EF,$23,$B4
 $DBD2 DEFB $FF,$06,$10,$F7,$00,$FF,$04,$FF
 $DBDA DEFB $81,$FF,$FC,$1F,$13,$F8,$44,$FF
 $DBE2 DEFB $10,$FF,$00,$FF,$10,$BF,$4B,$E8
 $DBEA DEFB $F9,$6F,$08,$D7,$00,$B7,$00,$AF
 $DBF2 DEFB $00,$FF,$E0,$FF,$07,$FD,$00,$FE
 $DBFA DEFB $00,$FF,$00,$F7,$40,$FF,$17,$FE
 $DC02 DEFB $90,$BF,$28,$FF,$48,$FF,$50,$FF
 $DC0A DEFB $00,$FF,$00,$FE,$02,$FF,$01,$FF
 $DC12 DEFB $00,$FF,$08,$FF,$00,$FF,$01,$EF
 $DC1A DEFB $40,$FF,$00,$DF,$00,$FF,$00,$FF
 $DC22 DEFB $00,$FF,$01,$FF,$00,$FF,$00,$FE
 $DC2A DEFB $00,$FF,$00,$04,$00,$85,$10,$C3
 $DC32 DEFB $00,$CB,$20,$E1,$00,$ED,$00,$EE
 $DC3A DEFB $00,$11,$00,$81,$00,$E3,$01,$C3
 $DC42 DEFB $00,$E3,$AC,$54,$00,$7F,$00,$3F
 $DC4A DEFB $56,$AA,$55,$AA,$55,$FF,$80,$BF
 $DC52 DEFB $44,$B8,$46,$B8,$40,$DF,$02,$FF
 $DC5A DEFB $AA,$FD,$AB,$55,$80,$5F,$C0,$AF
 $DC62 DEFB $55,$AA,$55,$FF,$00,$FF,$40,$6F
 $DC6A DEFB $47,$B8,$47,$B8,$20,$37,$00,$FF
 $DC72 DEFB $02,$FF,$AA,$FD,$A0,$57,$50,$E7
 $DC7A DEFB $55,$FF,$00,$FF,$00,$FF,$C3,$00
 $DC82 DEFB $64

; -> $DF16 - Get random byte??
;
; Used by the routines at #R$E1AC, #R$E2EA, #R$E881, #R$E8A0, #R$E90A, #R$EB13,
; #R$EB96, #R$EDD6 and #R$EFDD.
c$DC83 JP $DF16      ;

; -> $DF37
;
; Used by the routine at #R$F26E.
c$DC86 JP $DF37      ;

; -> $DCDF - Initialization and go to game main loop
;
; Used by the routine at #R$6BBB.
c$DC89 JP $DCDF      ;

; -> $E01B
;
; Used by the routine at #R$E6A8.
c$DC8C JP $E01B      ;

; -> $DDBE
;
; Used by the routine at #R$F707.
c$DC8F JP $DDBE      ;

; -> $DF33
;
; Used by the routine at #R$E2EA.
c$DC92 JP $DF33      ;

; Routine at DC95
;
; Used by the routine at #R$DE91.
c$DC95 CALL $8003    ; -> $9193
 $DC98 LD IX,$5B11   ;
*$DC9C INC (IX+$05)  ;
 $DC9F LD DE,$0014   ;
 $DCA2 ADD IX,DE     ;
 $DCA4 LD A,(IX+$00) ;
 $DCA7 SUB $90       ;
 $DCA9 JR NZ,$DC9C   ;
 $DCAB LD ($FDEE),A  ;
 $DCAE RET           ;

; Routine at DCAF
;
; Used by the routine at #R$DEEF.
c$DCAF LD A,($FDFB)   ;
 $DCB2 OR A           ;
 $DCB3 RET Z          ;
 $DCB4 DEC (IY+$7D)   ;
 $DCB7 RET NZ         ;
 $DCB8 LD ($FDFD),A   ;
 $DCBB CALL $DF16     ;
 $DCBE LD B,$04       ;
 $DCC0 LD L,$FF       ;
 $DCC2 BIT 7,A        ;
 $DCC4 JR Z,$DCCA     ;
 $DCC6 LD B,$0C       ;
 $DCC8 LD L,$1F       ;
*$DCCA AND $0F        ;
 $DCCC SUB $04        ;
 $DCCE LD H,A         ;
 $DCCF CALL $E112     ; -> $E1AC
 $DCD2 ADD A,B        ;
 $DCD3 LD B,A         ;
 $DCD4 LD C,$0C       ;
 $DCD6 CALL $E10F     ; -> $E44D
 $DCD9 RET Z          ;
 $DCDA SET 6,(IX+$0B) ;
 $DCDE RET            ;

; Initialization and go to game main loop
;
; Used by the routine at #R$DC89.
c$DCDF LD HL,$5B11     ;
 $DCE2 XOR A           ;
*$DCE3 LD (HL),A       ;
 $DCE4 INC L           ;
 $DCE5 JR NZ,$DCE3     ;
 $DCE7 LD A,$90        ;
 $DCE9 LD ($5BD9),A    ;
 $DCEC LD ($5BEE),A    ;
 $DCEF LD IY,$FD80     ;
 $DCF3 LD HL,$5BDA     ; Player's object record address
 $DCF6 LD (HL),$10     ; ($5BDA) = $10 - Initial starting column
 $DCF8 INC HL          ;
 $DCF9 LD (HL),$40     ; ($5BDB) = $40 - Initial pixels down screen start point
 $DCFB INC HL          ;
 $DCFC LD (HL),$02     ; ($5BDC) = $02 - ??
 $DCFE INC HL          ;
 $DCFF INC HL          ; HL = $5BDE
 $DD00 EX DE,HL        ;
 $DD01 LD HL,$5BDA     ; Player's object record address
 $DD04 LD BC,$0004     ;
 $DD07 LDIR            ; Copying 4 bytes from $5BDA to $5BDE
 $DD09 EX DE,HL        ;
 $DD0A INC HL          ;
 $DD0B INC HL          ; HL = $5BE4
 $DD0C LD (HL),$0A     ;
 $DD0E INC HL          ; HL = $5BE5
 $DD0F LD (HL),$30     ;
 $DD11 INC HL          ; HL = $5BE6
 $DD12 CALL $F221      ;
 $DD15 LD HL,$FD9B     ; {Initialize values for random byte calculation
 $DD18 LD A,R          ;
 $DD1A LD (HL),A       ;
 $DD1B INC L           ;
 $DD1C XOR $AA         ;
 $DD1E LD (HL),A       ;
 $DD1F INC L           ;
 $DD20 RRCA            ;
 $DD21 LD (HL),A       ;
 $DD22 XOR $AA         ;
 $DD24 LD (HL),A       ; }
 $DD25 LD A,$90        ;
 $DD27 LD ($FD97),A    ;
 $DD2A LD ($FDDE),A    ;
 $DD2D LD ($FDDF),A    ;
 $DD30 LD (IY+$70),$88 ;
 $DD34 LD (IY+$16),$88 ;
 $DD38 LD (IY+$5D),$01 ; $01 - Enemy delay (Time until first enemy appears)
 $DD3C JP $DE91        ;

; Data block at DD3F
b$DD3F DEFB $00,$01,$00,$01,$02,$03,$04,$04
 $DD47 DEFB $04,$04,$04,$04,$05,$06,$07,$08
 $DD4F DEFB $07,$08,$0B,$0B,$09,$0A,$07,$08
 $DD57 DEFB $0B,$0B,$0B,$0B,$0C,$0D,$00,$01
 $DD5F DEFB $0F,$0F,$13,$13,$14,$14,$15,$15
 $DD67 DEFB $16,$16,$12,$12,$12,$12,$0E,$0E
 $DD6F DEFB $1C,$1C

; Process object records at $5B11
;
; Used by the routine at #R$DE91.
c$DD71 LD IX,$5B11    ;
*$DD75 BIT 5,(IX+$0B) ;
 $DD79 CALL NZ,$DD8D  ; => Process object record IX
 $DD7C LD DE,$0014    ;
 $DD7F ADD IX,DE      ; Next record
 $DD81 LD A,(IX+$00)  ;
 $DD84 CP $90         ; End marker?
 $DD86 RET Z          ;
 $DD87 JR $DD75       ;

; Process Player's object record
;
; Used by the routine at #R$DEEF.
c$DD89 LD IX,$5BDA   ; Player's object record address

; Process object IX??
;
; Used by the routine at #R$DD71.
;
; I:IX Address of the 20-byte object record
c$DD8D LD A,(IX+$0C)   ;
 $DD90 BIT 4,(IX+$0B)  ;
 $DD94 JR Z,$DDA2      ;
 $DD96 CP $10          ;
 $DD98 JR NC,$DDA2     ;
 $DD9A BIT 0,A         ;
 $DD9C JR Z,$DDA2      ;
 $DD9E AND $FE         ;
 $DDA0 OR $02          ;
*$DDA2 ADD A,A         ;
 $DDA3 LD E,A          ;
 $DDA4 LD A,(IX+$10)   ;
 $DDA7 AND $02         ;
 $DDA9 RRA             ;
 $DDAA ADD A,E         ;
 $DDAB LD E,A          ;
 $DDAC LD D,$00        ;
 $DDAE LD HL,$DD3F     ;
 $DDB1 ADD HL,DE       ;
 $DDB2 LD B,(HL)       ;
 $DDB3 LD (IX+$07),B   ;
 $DDB6 LD A,(IX+$12)   ;
 $DDB9 CP $09          ;
 $DDBB JP Z,$DE65      ;
; This entry point is used by the routine at #R$DC8F.
*$DDBE LD A,($FD97)    ;
 $DDC1 CP $88          ;
 $DDC3 JP NC,$DE65     ;
 $DDC6 SUB $0D         ;
 $DDC8 JP C,$DE65      ;
 $DDCB CP $04          ;
 $DDCD JP C,$DE65      ;
 $DDD0 LD B,A          ;
 $DDD1 LD A,(IX+$05)   ;
 $DDD4 SUB B           ;
 $DDD5 JP P,$DE65      ;
 $DDD8 ADD A,$0A       ;
 $DDDA JP P,$DDDF      ;
 $DDDD JR $DE10        ;
*$DDDF LD A,B          ;
 $DDE0 CP $5F          ;
 $DDE2 JR NC,$DE0B     ;
 $DDE4 LD C,$5F        ;
 $DDE6 CP (IX+$08)     ;
 $DDE9 JR Z,$DE2A      ;
 $DDEB PUSH BC         ;
 $DDEC LD H,A          ;
 $DDED DEC H           ;
 $DDEE LD A,H          ;
 $DDEF CP $60          ;
 $DDF1 JR NC,$DE08     ;
 $DDF3 LD L,$3B        ;
 $DDF5 CALL $98D9      ;
 $DDF8 LD BC,$05AA     ;
*$DDFB LD (HL),C       ;
 $DDFC INC L           ;
 $DDFD DJNZ $DDFB      ;
 $DDFF INC H           ;
 $DE00 DEC L           ;
 $DE01 LD BC,$0555     ;
*$DE04 LD (HL),C       ;
 $DE05 DEC L           ;
 $DE06 DJNZ $DE04      ;
*$DE08 POP BC          ;
 $DE09 JR $DE2A        ;
*$DE0B RES 5,(IX+$0B)  ;
 $DE0F RET             ;
*$DE10 LD A,B          ;
 $DE11 SUB $1F         ;
 $DE13 JR NC,$DE19     ;
 $DE15 LD C,$5F        ;
 $DE17 JR $DE2A        ;
*$DE19 CP $04          ;
 $DE1B JR NC,$DE21     ;
 $DE1D LD A,$04        ;
 $DE1F JR $DE27        ;
*$DE21 CP $5F          ;
 $DE23 JR C,$DE27      ;
 $DE25 LD A,$5F        ;
*$DE27 LD C,A          ;
 $DE28 LD B,$04        ;
*$DE2A LD (IX+$09),C   ;
 $DE2D LD (IX+$08),B   ;
 $DE30 LD A,(IX+$05)   ;
 $DE33 CP B            ;
 $DE34 JP P,$DE3D      ;
 $DE37 ADD A,$0A       ;
 $DE39 CP C            ;
 $DE3A JP P,$DE52      ;
*$DE3D CALL $DE6D      ;
 $DE40 LD A,(IX+$12)   ;
 $DE43 CP $07          ;
 $DE45 JR Z,$DE4D      ;
 $DE47 LD A,(IX+$04)   ;
 $DE4A CP $1F          ;
 $DE4C RET NC          ;
*$DE4D SET 5,(IX+$0B)  ;
 $DE51 RET             ;
*$DE52 LD A,(IX+$05)   ;
 $DE55 CP $E0          ;
 $DE57 JR NC,$DE3D     ;
 $DE59 CP $40          ;
 $DE5B JR C,$DE3D      ;
 $DE5D LD (IX+$0C),$16 ;
 $DE61 LD (IX+$07),$12 ;
*$DE65 LD (IX+$08),$04 ;
 $DE69 LD (IX+$09),$5F ;
*$DE6D BIT 4,(IX+$0B)  ;
 $DE71 JR NZ,$DE8C     ;
 $DE73 BIT 6,(IX+$0B)  ;
 $DE77 JP Z,$98D0      ;
 $DE7A LD A,(IX+$12)   ;
 $DE7D LD C,$02        ;
 $DE7F CP $0C          ;
 $DE81 JP Z,$DE8E      ;
 $DE84 CP $0E          ;
 $DE86 JR NZ,$DE8E     ;
 $DE88 LD C,$04        ;
 $DE8A JR $DE8E        ;
*$DE8C LD C,$00        ;
*$DE8E JP $800F        ; -> $806B

; Game's main loop, Part 1
;
; Used by the routines at #R$DCDF and #R$DEEF.
c$DE91 BIT 0,(IY+$62) ; Is Player alive??
 $DE95 JR Z,$DEAC     ;
 $DE97 LD A,($5BE6)   ;
 $DE9A CP $13         ;
 $DE9C JR NC,$DEAC    ;
 $DE9E LD A,$13       ;
 $DEA0 LD ($5BE6),A   ;
 $DEA3 LD A,$02       ;
 $DEA5 LD ($5BEB),A   ;
 $DEA8 XOR A          ;
 $DEA9 CALL $642D     ; -> $6456
*$DEAC BIT 0,(IY+$07) ;
 $DEB0 JR Z,$DEAC     ;
 $DEB2 RES 0,(IY+$07) ;
 $DEB6 LD A,($FDEE)   ;
 $DEB9 CP $32         ;
 $DEBB JR NC,$DEC0    ;
 $DEBD INC (IY+$6E)   ;
*$DEC0 BIT 5,(IY+$15) ;
 $DEC4 JR Z,$DECB     ;
 $DEC6 CALL $DC95     ;
 $DEC9 JR $DECE       ;
*$DECB CALL $8006     ; -> $91AA
*$DECE CALL $DD71     ; Process object records at $5B11
 $DED1 RES 5,(IY+$15) ;
 $DED5 BIT 6,(IY+$05) ; Check bit 6 (??) of Last joystick/keyboard bits ($FD85)
 $DED9 JR Z,$DEEF     ;
 $DEDB JR $DEEF       ;

; Data block at DEDD
b$DEDD DEFB $FD,$CB,$05,$76,$20,$FA,$FD,$CB
 $DEE5 DEFB $05,$76,$28,$FA,$FD,$CB,$05,$76
 $DEED DEFB $20,$FA

; Game's main loop, Part 2
;
; Used by the routine at #R$DE91.
c$DEEF CALL $E109    ; -> $ED52
 $DEF2 CALL $E100    ; -> $E4FC
 $DEF5 CALL $E103    ; -> $ECC1
 $DEF8 CALL $E106    ; -> $E6FE
 $DEFB CALL $F209    ; -> $F26E
 $DEFE CALL $F212    ; -> $F36D
 $DF01 CALL $F203    ; -> $F381
 $DF04 CALL $DD89    ; Process Player's object record
 $DF07 CALL $F206    ; -> $F707
 $DF0A CALL $E10C    ; -> $E2EA
 $DF0D CALL $6427    ; -> $6593
 $DF10 CALL $DCAF    ;
 $DF13 JP $DE91      ;

; Get random byte??
;
; Used by the routines at #R$DC83 and #R$DCAF.
c$DF16 LD A,($FD9B)  ;
 $DF19 AND $48       ;
 $DF1B ADD A,$38     ;
 $DF1D RLA           ;
 $DF1E RLA           ;
 $DF1F RL (IY+$1E)   ;
 $DF23 RL (IY+$1D)   ;
 $DF27 RL (IY+$1C)   ;
 $DF2B RL (IY+$1B)   ;
 $DF2F LD A,($FD9B)  ;
 $DF32 RET           ;

; Routine at DF33
;
; Used by the routines at #R$DC92 and #R$E01B.
c$DF33 LD E,$02      ;
 $DF35 JR $DF39      ;

; Routine at DF37
;
; Used by the routine at #R$DC86.
c$DF37 LD E,$00      ;
; This entry point is used by the routine at #R$DF33.
*$DF39 LD ($FD82),SP ;
 $DF3D LD SP,$F900   ;
; This entry point is used by the routines at #R$DF6D and #R$DF7B.
*$DF40 XOR A         ;
 $DF41 EX AF,AF'     ;
 $DF42 POP BC        ;
 $DF43 LD A,C        ;
 $DF44 BIT 7,A       ;
 $DF46 JR NZ,$DF7B   ;
; This entry point is used by the routine at #R$DF7B.
*$DF48 SUB L         ;
 $DF49 JR C,$DF4E    ;
 $DF4B SUB E         ;
 $DF4C JR NC,$DF6D   ;
*$DF4E ADD A,B       ;
 $DF4F JR C,$DF54    ;
 $DF51 SUB E         ;
 $DF52 JR NC,$DF6D   ;
*$DF54 POP BC        ;
 $DF55 LD A,C        ;
 $DF56 SUB H         ;
 $DF57 JP M,$DF40    ;
 $DF5A SUB B         ;
 $DF5B JP P,$DF40    ;
; This entry point is used by the routine at #R$DF7B.
*$DF5E LD SP,($FD82) ;
 $DF62 EX AF,AF'     ;
 $DF63 JR NZ,$DF71   ;
 $DF65 SCF           ;
 $DF66 RET           ;

; Routine at DF67
;
; Used by the routine at #R$DF7B.
c$DF67 LD SP,($FD82) ;
 $DF6B XOR A         ;
 $DF6C RET           ;

; Routine at DF6D
;
; Used by the routines at #R$DF37 and #R$DF7B.
c$DF6D POP BC        ;
 $DF6E JP $DF40      ;

; Routine at DF71
;
; Used by the routine at #R$DF37.
c$DF71 SET 0,(IY+$62) ; {Player is dead??
 $DF75 SET 7,(IX+$0B) ;
 $DF79 SCF            ;
 $DF7A RET            ; }

; Routine at DF7B
;
; Used by the routine at #R$DF37.
c$DF7B CP $80         ;
 $DF7D JR Z,$DF67     ;
 $DF7F AND $7F        ;
 $DF81 BIT 1,A        ;
 $DF83 JR Z,$DF96     ;
 $DF85 INC E          ;
 $DF86 DEC E          ;
 $DF87 JR Z,$DF91     ;
 $DF89 BIT 4,(IX+$0B) ;
 $DF8D JR Z,$DF91     ;
 $DF8F INC A          ;
 $DF90 EX AF,AF'      ;
*$DF91 LD A,C         ;
 $DF92 AND $7C        ;
 $DF94 JR $DF48       ;
*$DF96 BIT 2,A        ;
 $DF98 JR NZ,$DFBE    ;
 $DF9A INC E          ;
 $DF9B DEC E          ;
 $DF9C JR Z,$DF6D     ;
 $DF9E BIT 4,(IX+$0B) ;
 $DFA2 JR Z,$DF6D     ;
 $DFA4 LD A,B         ;
 $DFA5 SUB L          ;
 $DFA6 JR NC,$DF6D    ;
 $DFA8 ADD A,$08      ;
 $DFAA JR NC,$DF6D    ;
 $DFAC POP BC         ;
 $DFAD LD A,C         ;
 $DFAE SUB H          ;
 $DFAF JR C,$DF40     ;
 $DFB1 SUB $08        ;
 $DFB3 JR NC,$DF40    ;
 $DFB5 LD C,B         ;
 $DFB6 LD B,$FF       ;
 $DFB8 LD A,(BC)      ;
 $DFB9 OR $80         ;
 $DFBB LD (BC),A      ;
 $DFBC JR $DF67       ;
*$DFBE LD ($FDB3),DE  ;
 $DFC2 POP DE         ;
 $DFC3 LD C,A         ;
 $DFC4 SUB L          ;
 $DFC5 JR NC,$E014    ;
 $DFC7 ADD A,B        ;
 $DFC8 JR NC,$E014    ;
 $DFCA SUB D          ;
 $DFCB JR NC,$DFF3    ;
 $DFCD LD A,E         ;
 $DFCE SUB H          ;
 $DFCF JR C,$E014     ;
 $DFD1 SUB D          ;
 $DFD2 JR NC,$DFE4    ;
 $DFD4 LD A,E         ;
 $DFD5 SUB H          ;
 $DFD6 LD B,A         ;
 $DFD7 LD A,L         ;
 $DFD8 SUB D          ;
 $DFD9 SUB C          ;
 $DFDA CP B           ;
 $DFDB JR NC,$E014    ;
*$DFDD LD DE,($FDB3)  ;
 $DFE1 JP $DF5E       ;
*$DFE4 SUB D          ;
 $DFE5 JR NC,$E014    ;
 $DFE7 LD A,H         ;
 $DFE8 SUB E          ;
 $DFE9 ADD A,B        ;
 $DFEA LD B,A         ;
 $DFEB LD A,L         ;
 $DFEC SUB D          ;
 $DFED SUB C          ;
 $DFEE CP B           ;
 $DFEF JR NC,$E014    ;
 $DFF1 JR $DFDD       ;
*$DFF3 LD A,E         ;
 $DFF4 SUB H          ;
 $DFF5 JR C,$E014     ;
 $DFF7 SUB D          ;
 $DFF8 JR NC,$E005    ;
 $DFFA LD A,E         ;
 $DFFB SUB H          ;
 $DFFC LD B,A         ;
 $DFFD LD A,C         ;
 $DFFE ADD A,D        ;
 $DFFF SUB L          ;
 $E000 CP B           ;
 $E001 JR NC,$E014    ;
 $E003 JR $DFDD       ;
*$E005 SUB D          ;
 $E006 JR NC,$E014    ;
 $E008 LD A,H         ;
 $E009 SUB E          ;
 $E00A ADD A,B        ;
 $E00B LD B,A         ;
 $E00C LD A,C         ;
 $E00D ADD A,D        ;
 $E00E SUB L          ;
 $E00F CP B           ;
 $E010 JR NC,$E014    ;
 $E012 JR $DFDD       ;
*$E014 LD DE,($FDB3)  ;
 $E018 JP $DF40       ;

; Routine at E01B
;
; Used by the routine at #R$DC8C.
c$E01B BIT 1,(IX+$0B)  ;
 $E01F JR NZ,$E084     ;
 $E021 LD A,L          ;
 $E022 CP $20          ;
 $E024 JR NC,$E084     ;
 $E026 PUSH HL         ;
 $E027 PUSH DE         ;
 $E028 LD A,L          ;
 $E029 ADD A,A         ;
 $E02A ADD A,A         ;
 $E02B ADD A,$04       ;
 $E02D ADD A,E         ;
 $E02E LD L,A          ;
 $E02F LD A,H          ;
 $E030 ADD A,$06       ;
 $E032 LD H,A          ;
 $E033 CALL $DF33      ;
 $E036 POP DE          ;
 $E037 POP HL          ;
 $E038 JR NC,$E084     ;
 $E03A BIT 4,(IX+$0B)  ;
 $E03E JR NZ,$E083     ;
 $E040 LD A,H          ;
 $E041 CP $60          ;
 $E043 JR NC,$E049     ;
 $E045 CP $03          ;
 $E047 JR NC,$E04E     ;
*$E049 LD (IX+$0C),$16 ;
 $E04D RET             ;
*$E04E LD A,(IX+$12)   ;
 $E051 CP $05          ;
 $E053 JR Z,$E075      ;
 $E055 CP $04          ;
 $E057 JR Z,$E061      ;
 $E059 CP $01          ;
 $E05B JR Z,$E061      ;
 $E05D CP $0C          ;
 $E05F JR NZ,$E075     ;
*$E061 CALL $E112      ;
 $E064 ADD A,(IX+$13)  ;
 $E067 XOR $08         ;
 $E069 AND $0F         ;
 $E06B LD B,A          ;
 $E06C AND $07         ;
 $E06E JR NZ,$E071     ;
 $E070 INC B           ;
*$E071 LD (IX+$13),B   ;
 $E074 RET             ;
*$E075 CALL $E112      ;
 $E078 ADD A,(IX+$0C)  ;
 $E07B ADD A,$04       ;
 $E07D AND $0F         ;
 $E07F LD (IX+$0C),A   ;
 $E082 RET             ;
*$E083 RET             ;
*$E084 LD (IX+$04),L   ;
 $E087 LD (IX+$06),E   ;
 $E08A LD A,D          ;
 $E08B CP $04          ;
 $E08D JR C,$E097      ;
 $E08F CP $0D          ;
 $E091 JR NC,$E097     ;
*$E093 LD (IX+$05),H   ;
 $E096 RET             ;
*$E097 BIT 4,(IX+$0B)  ;
 $E09B JR Z,$E093      ;
 $E09D LD A,H          ;
 $E09E CP $3C          ;
 $E0A0 JR NC,$E093     ;
 $E0A2 BIT 3,(IY+$05)  ; Check bit 3 (Up) of Last joystick/keyboard bits
                       ; ($FD85)
 $E0A6 JR Z,$E0BE      ;
 $E0A8 BIT 4,(IY+$15)  ;
 $E0AC JR Z,$E0BA      ;
 $E0AE CP $1A          ;
 $E0B0 JR NC,$E093     ;
 $E0B2 BIT 1,(IX+$0B)  ;
 $E0B6 JR Z,$E0BE      ;
 $E0B8 JR $E093        ;
*$E0BA SET 5,(IY+$15)  ;
*$E0BE RET             ;

; Data block at E0BF
b$E0BF DEFB $24,$18,$D1,$FD,$CB,$15,$EE,$C9
 $E0C7 DEFB $24,$18,$D1,$CB,$15,$EE,$C9,$24
 $E0CF DEFB $18,$D1,$04,$DD,$74,$05,$C9,$DD
 $E0D7 DEFB $CB,$0B,$66,$28,$F6,$7C,$FE,$3C
 $E0DF DEFB $20,$F1,$FD,$CB,$05,$5E,$28,$04
 $E0E7 DEFB $FD,$CB,$15,$EE,$C9,$24,$18,$E3
 $E0EF DEFB $15,$EE,$C9,$24,$18,$E3,$CB,$15
 $E0F7 DEFB $EE,$C9,$24,$18,$E3,$06,$D3,$FE
 $E0FF DEFB $18

; -> $E4FC
;
; Used by the routine at #R$DEEF.
c$E100 JP $E4FC      ;

; -> $ECC1
;
; Used by the routine at #R$DEEF.
c$E103 JP $ECC1      ;

; -> $E6FE
;
; Used by the routine at #R$DEEF.
c$E106 JP $E6FE      ;

; -> $ED52
;
; Used by the routine at #R$DEEF.
c$E109 JP $ED52      ;

; -> $E2EA
;
; Used by the routine at #R$DEEF.
c$E10C JP $E2EA      ;

; -> $E44D
;
; Used by the routines at #R$DCAF and #R$F26E.
c$E10F JP $E44D      ;

; -> $E1AC
;
; Used by the routines at #R$DCAF and #R$E01B.
c$E112 JP $E1AC      ;

; Data block at E115
b$E115 DEFB $C3,$7D,$E7,$83,$00,$8B,$00,$05
 $E11D DEFB $05,$80,$00,$80,$00,$80,$00,$88
 $E125 DEFB $00,$8D,$00,$81,$00,$08,$09,$88
 $E12D DEFB $FF,$08,$09,$80,$00,$80,$00,$85
 $E135 DEFB $00,$86,$00,$86,$00,$87,$00,$87
 $E13D DEFB $00,$8A,$00,$84,$00,$8E,$00,$80
 $E145 DEFB $00,$82,$00,$80,$00,$80,$00,$80
 $E14D DEFB $00,$80,$00,$18,$03,$90,$00,$18
 $E155 DEFB $04,$80,$00,$80,$00,$80,$00,$8F
 $E15D DEFB $00,$89,$00,$8C,$00,$04,$26,$5C
 $E165 DEFB $ED,$7C,$EF,$A3,$EF,$52,$F0,$E7
 $E16D DEFB $F0,$14,$F1,$26,$F1,$4C,$F1,$37
 $E175 DEFB $EF,$F7,$EE,$3D,$EE,$D6,$ED,$28
 $E17D DEFB $EE,$15,$EE,$11,$EE,$24,$EE,$94
 $E185 DEFB $EE,$A8,$E1,$96,$EB,$13,$EB,$58
 $E18D DEFB $EC,$96,$EB,$81,$E8,$6B,$E8,$00
 $E195 DEFB $00,$68,$EB,$7B,$EB,$81,$E8,$00
 $E19D DEFB $00,$C7,$E9,$8E,$EA,$80,$F1,$D2
 $E1A5 DEFB $E9,$DD,$E9,$C1,$C3,$00,$64

; Routine at E1AC
;
; Used by the routines at #R$E112, #R$E2EA and #R$E90A.
c$E1AC CALL $DC83    ; -> $DF16
 $E1AF AND $03       ;
 $E1B1 RET Z         ;
 $E1B2 DEC A         ;
 $E1B3 DEC A         ;
 $E1B4 RET           ;

; Routine at E1B5
;
; Used by the routine at #R$E2EA.
c$E1B5 LD HL,$FDF2   ;
 $E1B8 LD DE,$FDC3   ;
 $E1BB LD A,(DE)     ;
 $E1BC INC A         ;
 $E1BD JR Z,$E1C2    ;
 $E1BF CALL $E1D1    ;
*$E1C2 LD HL,$FDF3   ;
 $E1C5 LD DE,$FDC5   ;
 $E1C8 LD A,(DE)     ;
 $E1C9 INC A         ;
 $E1CA JR Z,$E224    ;
 $E1CC CALL $E1D1    ;
 $E1CF JR $E224      ;

; Routine at E1D1
;
; Used by the routine at #R$E1B5.
c$E1D1 PUSH DE       ;
 $E1D2 PUSH HL       ;
 $E1D3 EX DE,HL      ;
 $E1D4 ADD A,$08     ;
 $E1D6 LD E,A        ;
 $E1D7 INC L         ;
 $E1D8 LD D,(HL)     ;
 $E1D9 SRL E         ;
 $E1DB LD HL,$F8EA   ;
 $E1DE LD B,$1D      ;
 $E1E0 CALL $E77D    ;
 $E1E3 POP DE        ;
 $E1E4 POP HL        ;
 $E1E5 JR Z,$E1F0    ;
 $E1E7 INC L         ;
 $E1E8 SET 7,(HL)    ;
 $E1EA LD BC,$4B02   ; +750??
 $E1ED JP $6415      ; -> $6825 - Update Score
*$E1F0 EX DE,HL      ;
 $E1F1 DEC (HL)      ;
 $E1F2 RET NZ        ;
 $E1F3 LD (HL),$28   ;
 $E1F5 LD A,(DE)     ;
 $E1F6 ADD A,$3B     ;
 $E1F8 RET C         ;
 $E1F9 SUB $0A       ;
 $E1FB AND $F8       ;
 $E1FD RRA           ;
 $E1FE RRA           ;
 $E1FF RRA           ;
 $E200 LD L,A        ;
 $E201 INC E         ;
 $E202 LD A,(DE)     ;
 $E203 SUB $0E       ;
 $E205 RET C         ;
 $E206 LD H,A        ;
 $E207 PUSH HL       ;
 $E208 LD BC,$1002   ;
 $E20B CALL $E44D    ;
 $E20E POP DE        ;
 $E20F RET Z         ;
 $E210 LD (HL),$FD   ;
 $E212 DEC L         ;
 $E213 DEC L         ;
 $E214 LD (HL),$0A   ;
 $E216 DEC L         ;
 $E217 DEC L         ;
 $E218 LD (HL),$00   ;
 $E21A DEC L         ;
 $E21B LD (HL),$00   ;
 $E21D DEC L         ;
 $E21E LD (HL),D     ;
 $E21F DEC L         ;
 $E220 DEC L         ;
 $E221 SET 6,(HL)    ;
 $E223 RET           ;

; Routine at E224
;
; Used by the routine at #R$E1B5.
c$E224 LD A,($FDCB)   ;
 $E227 INC A          ;
 $E228 JP Z,$E2B2     ;
 $E22B DEC A          ;
 $E22C ADD A,A        ;
 $E22D ADD A,A        ;
 $E22E ADD A,$08      ;
 $E230 LD E,A         ;
 $E231 LD A,($FDCC)   ;
 $E234 LD D,A         ;
 $E235 CP $50         ;
 $E237 LD HL,$FDF8    ;
 $E23A JR C,$E241     ;
 $E23C INC L          ;
 $E23D LD (HL),$00    ;
 $E23F JR $E290       ;
*$E241 INC (HL)       ;
 $E242 LD B,$1F       ;
 $E244 CP $20         ;
 $E246 JR NC,$E253    ;
 $E248 SRL B          ;
 $E24A LD A,($FDE5)   ; Get Area number
 $E24D CP $05         ;
 $E24F JR C,$E253     ;
 $E251 SRL B          ;
*$E253 LD A,(HL)      ;
 $E254 AND B          ;
 $E255 PUSH HL        ;
 $E256 JR NZ,$E26C    ;
 $E258 PUSH DE        ;
 $E259 EX DE,HL       ;
 $E25A LD A,($FDE3)   ;
 $E25D ADD A,$04      ;
 $E25F LD C,A         ;
 $E260 LD A,($FDE4)   ;
 $E263 ADD A,$04      ;
 $E265 LD B,A         ;
 $E266 LD A,$03       ;
 $E268 CALL $F200     ; -> $F4F6
 $E26B POP DE         ;
*$E26C LD HL,$F8ED    ;
 $E26F LD B,$10       ;
 $E271 LD A,E         ;
 $E272 SUB $06        ;
 $E274 LD E,A         ;
 $E275 LD A,D         ;
 $E276 SUB $10        ;
 $E278 LD D,A         ;
 $E279 CALL $E77D     ;
 $E27C POP HL         ;
 $E27D JR Z,$E290     ;
 $E27F INC L          ;
 $E280 INC (HL)       ;
 $E281 LD A,(HL)      ;
 $E282 CP $0C         ;
 $E284 JR C,$E290     ;
 $E286 SET 7,(IY+$4B) ;
 $E28A LD BC,$0F03    ; +1500?? for destroying a Jeep??
 $E28D CALL $6415     ; -> $6825 - Update Score
*$E290 LD A,($FDCB)   ;
 $E293 ADD A,A        ;
 $E294 ADD A,A        ;
 $E295 SUB $03        ;
 $E297 SUB (IY+$63)   ;
 $E29A JR NC,$E2B2    ;
 $E29C ADD A,$0D      ;
 $E29E JR NC,$E2B2    ;
 $E2A0 LD A,($FDCC)   ;
 $E2A3 SUB $17        ;
 $E2A5 SUB (IY+$64)   ;
 $E2A8 JR NC,$E2B2    ;
 $E2AA ADD A,$0C      ;
 $E2AC JR NC,$E2B2    ;
 $E2AE SET 0,(IY+$62) ; Player is dead??
*$E2B2 LD HL,$FDC7    ;
 $E2B5 LD A,(HL)      ;
 $E2B6 INC A          ;
 $E2B7 CALL NZ,$E2BF  ;
 $E2BA LD HL,$FDC9    ;
 $E2BD LD A,(HL)      ;
 $E2BE RET Z          ;
*$E2BF LD A,($FDE3)   ;
 $E2C2 ADD A,$07      ;
 $E2C4 SUB (HL)       ;
 $E2C5 RET C          ;
 $E2C6 SUB $16        ;
 $E2C8 RET NC         ;
 $E2C9 LD A,($FDE4)   ;
 $E2CC INC L          ;
 $E2CD SUB (HL)       ;
 $E2CE RET NC         ;
 $E2CF ADD A,$10      ;
 $E2D1 RET NC         ;
 $E2D2 LD A,($FDCE)   ;
 $E2D5 CP $3D         ;
 $E2D7 RET C          ;
 $E2D8 SET 0,(IY+$62) ; Player is dead??
 $E2DC RET            ;

; Routine at E2DD
;
; Used by the routine at #R$E2EA.
c$E2DD LD BC,$0806     ;
 $E2E0 LD H,$04        ;
 $E2E2 CALL $E44D      ;
 $E2E5 LD (IX+$0A),$07 ;
 $E2E9 RET             ;

; Routine at E2EA
;
; Used by the routine at #R$E10C.
c$E2EA CALL $E1B5      ;
 $E2ED DEC (IY+$5D)    ;
 $E2F0 JR Z,$E2FF      ;
 $E2F2 BIT 4,(IY+$15)  ;
 $E2F6 RET Z           ;
 $E2F7 LD A,($FDFA)    ;
 $E2FA CP $14          ;
 $E2FC JR NC,$E34C     ;
 $E2FE RET             ;
*$E2FF LD A,($FDE5)    ; Get Area number
 $E302 CP $07          ;
 $E304 JR C,$E308      ;
 $E306 LD A,$07        ;
*$E308 SRL A           ;
 $E30A NEG             ;
 $E30C ADD A,$03       ;
 $E30E ADD A,A         ;
 $E30F ADD A,A         ;
 $E310 ADD A,A         ;
 $E311 ADD A,$37       ;
 $E313 LD (IY+$5D),A   ;
 $E316 BIT 4,(IY+$15)  ;
 $E31A JP Z,$E3A4      ;
 $E31D LD A,($FDFA)    ;
 $E320 OR A            ;
 $E321 JR NZ,$E348     ;
 $E323 LD A,($FDE5)    ; Get Area number
 $E326 AND $03         ; $03 - Fortress byte
 $E328 JR NZ,$E348     ;
 $E32A PUSH AF         ;
 $E32B LD L,$02        ;
 $E32D CALL $E2DD      ;
 $E330 LD L,$08        ;
 $E332 CALL $E2DD      ;
 $E335 LD L,$14        ;
 $E337 CALL $E2DD      ;
 $E33A SET 7,(IX+$0B)  ;
 $E33E LD L,$1B        ;
 $E340 CALL $E2DD      ;
 $E343 POP AF          ;
 $E344 LD (IY+$7A),$04 ;
*$E348 CP $14          ;
 $E34A JR C,$E35A      ;
*$E34C LD A,($FDFC)    ;
 $E34F OR A            ;
 $E350 RET NZ          ;
 $E351 LD A,($5BE5)    ;
 $E354 SET 1,A         ;
 $E356 LD ($5BE5),A    ;
 $E359 RET             ;
*$E35A LD (IY+$5D),$0A ;
 $E35E LD L,$0F        ;
 $E360 CALL $DC83      ; -> $DF16 - Get random byte??
 $E363 BIT 7,A         ;
 $E365 JR NZ,$E368     ;
 $E367 DEC L           ;
*$E368 AND $07         ;
 $E36A ADD A,$FF       ;
 $E36C LD H,A          ;
 $E36D CALL $E1AC      ;
 $E370 ADD A,$08       ;
 $E372 LD B,A          ;
 $E373 LD C,$0F        ;
 $E375 LD A,($FDFA)    ;
 $E378 CP $0A          ;
 $E37A JR NZ,$E37D     ;
 $E37C DEC C           ;
*$E37D PUSH BC         ;
 $E37E CALL $E44D      ;
 $E381 POP BC          ;
 $E382 RET Z           ;
 $E383 LD A,C          ;
 $E384 CP $0E          ;
 $E386 JR NZ,$E398     ;
 $E388 SET 1,(IX+$0B)  ;
 $E38C SET 6,(IX+$0B)  ;
 $E390 SET 0,(IX+$0C)  ;
 $E394 LD (IX+$11),$20 ;
*$E398 INC (IY+$7A)    ;
 $E39B CALL $DC83      ; -> $DF16 - Get random byte??
 $E39E AND $01         ;
 $E3A0 JP Z,$EC1B      ;
 $E3A3 RET             ;
*$E3A4 CALL $DC83      ; -> $DF16 - Get random byte??
 $E3A7 AND $04         ;
 $E3A9 JR Z,$E3B5      ;
; This entry point is used by the routine at #R$EDD6.
*$E3AB LD L,$1F        ;
 $E3AD LD BC,$0C00     ;
 $E3B0 LD A,($FDDF)    ;
 $E3B3 JR $E3BD        ;
; This entry point is used by the routine at #R$EDD6.
*$E3B5 LD L,$FE        ;
 $E3B7 LD BC,$0400     ;
 $E3BA LD A,($FDDE)    ;
*$E3BD CP $60          ;
 $E3BF JR NC,$E3EC     ;
 $E3C1 CP $28          ;
 $E3C3 JR C,$E3EC      ;
 $E3C5 SUB $20         ;
 $E3C7 LD H,A          ;
 $E3C8 BIT 3,B         ;
 $E3CA LD A,($FDF1)    ;
 $E3CD JR NZ,$E3D0     ;
 $E3CF RRA             ;
*$E3D0 LD C,$18        ;
 $E3D2 RRA             ;
 $E3D3 JR NC,$E3D7     ;
 $E3D5 LD C,$30        ;
*$E3D7 PUSH BC         ;
 $E3D8 LD C,$02        ;
 $E3DA RLC (IY+$16)    ;
 $E3DE JR C,$E3E4      ;
 $E3E0 LD (IY+$5D),$08 ;
*$E3E4 CALL $E44D      ;
 $E3E7 POP BC          ;
 $E3E8 LD (IX+$11),C   ;
 $E3EB RET             ;
*$E3EC LD A,($FD97)    ;
 $E3EF CP $5E          ;
 $E3F1 JR NC,$E416     ;
 $E3F3 CP $2A          ;
 $E3F5 JR C,$E416      ;
 $E3F7 LD H,A          ;
 $E3F8 LD C,$07        ;
 $E3FA RLC (IY+$70)    ;
 $E3FE JR NC,$E408     ;
 $E400 LD C,$09        ;
 $E402 LD A,H          ;
 $E403 SUB $24         ;
 $E405 LD H,A          ;
 $E406 JR $E44D        ;
*$E408 LD A,H          ;
 $E409 SUB $37         ;
 $E40B LD H,A          ;
 $E40C LD A,L          ;
 $E40D XOR $01         ;
 $E40F LD L,A          ;
 $E410 LD (IY+$5D),$28 ;
 $E414 JR $E44D        ;
*$E416 LD A,($FDEE)    ;
 $E419 CP $32          ;
 $E41B JR C,$E425      ;
 $E41D LD C,$04        ;
 $E41F SRL (IY+$5D)    ;
 $E423 JR $E42C        ;
*$E425 CALL $DC83      ;
 $E428 AND $0E         ;
 $E42A JR NZ,$E438     ;
*$E42C CALL $DC83      ;
 $E42F LD C,$04        ;
 $E431 BIT 7,A         ;
 $E433 JR Z,$E448      ;
 $E435 INC C           ;
 $E436 JR $E448        ;
*$E438 CALL $DC83      ;
 $E43B AND $1E         ;
 $E43D LD L,A          ;
 $E43E LD H,$FF        ;
 $E440 CALL $E1AC      ;
 $E443 ADD A,$08       ;
 $E445 LD B,A          ;
 $E446 JR $E44D        ;
*$E448 AND $3F         ;
 $E44A ADD A,$08       ;
 $E44C LD H,A          ;
; This entry point is used by the routines at #R$E10F, #R$E1D1, #R$E2DD,
; #R$EF37, #R$EFDD and #R$F14C.
*$E44D EXX             ;
 $E44E LD HL,$5B11     ;
*$E451 LD A,(HL)       ;
 $E452 CP $90          ;
 $E454 RET Z           ;
 $E455 LD A,L          ;
 $E456 ADD A,$0B       ;
 $E458 LD L,A          ;
 $E459 BIT 5,(HL)      ;
 $E45B JR Z,$E462      ;
 $E45D ADD A,$09       ;
 $E45F LD L,A          ;
 $E460 JR $E451        ;
*$E462 SUB $0B         ;
 $E464 LD L,A          ;
 $E465 PUSH HL         ;
 $E466 EXX             ;
 $E467 LD D,$20        ;
 $E469 LD A,C          ;
 $E46A CP $09          ;
 $E46C JR Z,$E47A      ;
 $E46E CP $0B          ;
 $E470 JR Z,$E47A      ;
 $E472 CP $02          ;
 $E474 JR Z,$E47A      ;
 $E476 CP $0F          ;
 $E478 JR NZ,$E47C     ;
*$E47A SET 1,D         ;
*$E47C PUSH BC         ;
 $E47D PUSH HL         ;
 $E47E LD A,L          ;
 $E47F CP $20          ;
 $E481 JR C,$E484      ;
 $E483 XOR A           ;
*$E484 ADD A,A         ;
 $E485 ADD A,A         ;
 $E486 ADD A,$07       ;
 $E488 LD L,A          ;
 $E489 LD A,H          ;
 $E48A ADD A,$06       ;
 $E48C LD H,A          ;
 $E48D CALL $DC92      ;
 $E490 POP HL          ;
 $E491 POP BC          ;
 $E492 JR NC,$E4A7     ;
 $E494 LD A,C          ;
 $E495 CP $06          ;
 $E497 JR Z,$E4A7      ;
 $E499 CP $0A          ;
 $E49B JR Z,$E4A7      ;
 $E49D BIT 1,D         ;
 $E49F JR NZ,$E4A7     ;
 $E4A1 POP HL          ;
 $E4A2 LD (IY+$5D),$01 ;
 $E4A6 RET             ;
*$E4A7 EX DE,HL        ;
 $E4A8 EX (SP),HL      ;
 $E4A9 PUSH HL         ;
 $E4AA POP IX          ;
 $E4AC LD (HL),E       ;
 $E4AD INC L           ;
 $E4AE LD (HL),D       ;
 $E4AF INC L           ;
 $E4B0 LD (HL),$00     ;
 $E4B2 INC L           ;
 $E4B3 LD (HL),$00     ;
 $E4B5 INC L           ;
 $E4B6 LD (HL),E       ;
 $E4B7 INC L           ;
 $E4B8 LD (HL),D       ;
 $E4B9 INC L           ;
 $E4BA LD (HL),$03     ;
 $E4BC INC L           ;
 $E4BD LD (HL),$00     ;
 $E4BF INC L           ;
 $E4C0 LD (HL),$04     ;
 $E4C2 INC L           ;
 $E4C3 LD (HL),$5F     ;
 $E4C5 INC L           ;
 $E4C6 LD (HL),$0A     ;
 $E4C8 INC L           ;
 $E4C9 POP DE          ;
 $E4CA LD (HL),D       ;
 $E4CB INC L           ;
 $E4CC LD (HL),B       ;
 $E4CD INC L           ;
 $E4CE LD (HL),$00     ;
 $E4D0 LD A,L          ;
 $E4D1 ADD A,$03       ;
 $E4D3 LD L,A          ;
 $E4D4 LD (HL),$00     ;
 $E4D6 INC L           ;
 $E4D7 LD E,$0F        ;
 $E4D9 LD A,C          ;
 $E4DA CP $07          ;
 $E4DC JR Z,$E4E2      ;
 $E4DE CP $08          ;
 $E4E0 JR NZ,$E4E4     ;
*$E4E2 LD E,$38        ;
*$E4E4 LD (HL),E       ;
 $E4E5 INC L           ;
 $E4E6 LD (HL),C       ;
 $E4E7 INC L           ;
 $E4E8 LD (HL),B       ;
 $E4E9 CP $0C          ;
 $E4EB RET NZ          ;
 $E4EC LD (IX+$0C),$18 ;
 $E4F0 OR A            ;
 $E4F1 RET             ;

; Data block at E4F2
b$E4F2 DEFB $04,$0C,$0C,$08,$06,$0A,$04,$00
 $E4FA DEFB $02,$0E

; Routine at E4FC
;
; Used by the routine at #R$E100.
c$E4FC LD IX,$5BDA     ; Player's object record address
 $E500 LD A,($5BDE)    ;
 $E503 ADD A,A         ;
 $E504 ADD A,A         ;
 $E505 ADD A,(IX+$06)  ;
 $E508 LD ($FDE3),A    ;
 $E50B LD E,A          ;
 $E50C LD A,($5BDF)    ;
 $E50F LD ($FDE4),A    ;
 $E512 LD D,A          ;
 $E513 BIT 1,(IX+$0B)  ;
 $E517 JR Z,$E552      ;
 $E519 BIT 4,(IX+$0C)  ;
 $E51D JR Z,$E527      ;
 $E51F LD (IX+$0C),$00 ;
 $E523 LD (IX+$0A),$0A ;
*$E527 LD A,E          ;
 $E528 CP $40          ;
 $E52A JR NZ,$E53E     ;
 $E52C LD A,D          ;
 $E52D OR A            ;
 $E52E JR NZ,$E53A     ;
 $E530 RES 0,(IY+$62)  ;
 $E534 LD (IY+$7A),$00 ;
 $E538 POP AF          ;
 $E539 RET             ;
*$E53A LD D,$08        ;
 $E53C JR $E546        ;
*$E53E JR C,$E544      ;
 $E540 LD D,$02        ;
 $E542 JR $E546        ;
*$E544 LD D,$01        ;
*$E546 LD A,($FD85)    ; Get last joystick/keyboard bits
 $E549 AND $F0         ;
 $E54B OR D            ;
 $E54C LD ($FD85),A    ; Update last joystick/keyboard bits
 $E54F JP $E586        ;
*$E552 LD A,($5BE6)    ;
 $E555 CP $10          ;
 $E557 JR C,$E586      ;
 $E559 DEC (IX+$11)    ;
 $E55C RET NZ          ;
 $E55D LD B,$14        ;
 $E55F BIT 7,(IX+$0B)  ;
 $E563 JR Z,$E56A      ;
 $E565 CP $13          ;
 $E567 JR Z,$E56A      ;
 $E569 DEC B           ;
*$E56A LD A,B          ;
 $E56B LD ($5BE6),A    ;
 $E56E LD (IX+$11),$02 ;
 $E572 LD A,($5BE4)    ;
 $E575 DEC A           ;
 $E576 LD ($5BE4),A    ;
 $E579 DEC A           ;
 $E57A JR NZ,$E582     ;
 $E57C SET 0,(IY+$62)  ; Player is dead??
 $E580 POP AF          ;
 $E581 RET             ;
*$E582 INC (IX+$05)    ;
 $E585 RET             ;
*$E586 LD A,($FD85)    ; Get last joystick/keyboard bits
 $E589 AND $0F         ;
 $E58B XOR $0F         ;
 $E58D JR NZ,$E58F     ;
*$E58F XOR $0F         ;
 $E591 RET Z           ;
 $E592 CP $0B          ;
 $E594 JR C,$E598      ;
 $E596 LD A,$08        ;
*$E598 LD HL,$E4F1     ;
 $E59B LD C,A          ;
 $E59C LD B,$00        ;
 $E59E ADD HL,BC       ;
 $E59F LD A,(HL)       ;
 $E5A0 LD D,A          ;
 $E5A1 LD E,(IX+$0C)   ;
 $E5A4 SUB E           ;
 $E5A5 JR Z,$E5DB      ;
 $E5A7 BIT 4,E         ;
 $E5A9 JR NZ,$E5DB     ;
 $E5AB CALL $E5B8      ;
 $E5AE LD A,E          ;
 $E5AF AND $0F         ;
 $E5B1 LD (IX+$0C),A   ;
 $E5B4 LD D,A          ;
 $E5B5 JP $E5DB        ;

; Routine at E5B8
;
; Used by the routine at #R$E4FC.
c$E5B8 LD B,A        ;
 $E5B9 AND $0F       ;
 $E5BB CP $05        ;
 $E5BD JR C,$E5D3    ;
 $E5BF CP $08        ;
 $E5C1 JR Z,$E5D5    ;
 $E5C3 JR C,$E5D0    ;
 $E5C5 CP $0C        ;
 $E5C7 JR C,$E5CB    ;
 $E5C9 DEC E         ;
 $E5CA RET           ;
*$E5CB DEC E         ;
 $E5CC DEC E         ;
 $E5CD DEC E         ;
 $E5CE DEC E         ;
 $E5CF RET           ;
*$E5D0 INC E         ;
 $E5D1 INC E         ;
 $E5D2 INC E         ;
*$E5D3 INC E         ;
 $E5D4 RET           ;
*$E5D5 BIT 7,B       ;
 $E5D7 JR NZ,$E5D0   ;
 $E5D9 JR $E5CB      ;

; Routine at E5DB
;
; Used by the routines at #R$E4FC and #R$E972.
c$E5DB INC (IX+$10)  ;
 $E5DE LD H,(IX+$05) ;
 $E5E1 LD L,(IX+$04) ;
 $E5E4 LD E,(IX+$06) ;
 $E5E7 LD A,D        ;
 $E5E8 CP $10        ;
 $E5EA JR Z,$E5F5    ;
 $E5EC CP $17        ;
 $E5EE JR NZ,$E61B   ;
 $E5F0 CALL $E679    ;
 $E5F3 JR $E5F8      ;
*$E5F5 CALL $E648    ;
*$E5F8 LD (IX+$06),E ;
 $E5FB LD (IX+$04),L ;
 $E5FE LD D,(IX+$0F) ;
 $E601 LD E,(IX+$0E) ;
 $E604 LD H,(IX+$13) ;
 $E607 CALL $F21E    ; -> $F34F
 $E60A LD (IX+$0F),H ;
 $E60D LD (IX+$0E),L ;
 $E610 LD (IX+$13),C ;
 $E613 LD A,(IX+$0D) ;
 $E616 ADD A,H       ;
 $E617 LD (IX+$05),A ;
 $E61A RET           ;
*$E61B LD BC,$E628   ;
 $E61E PUSH BC       ;
 $E61F OR A          ;
 $E620 RET Z         ;
 $E621 CP $08        ;
 $E623 RET Z         ;
 $E624 JR C,$E648    ;
 $E626 JR $E679      ;

; Routine at E628
c$E628 LD A,L         ;
 $E629 CP $81         ;
 $E62B JR C,$E636     ;
 $E62D CP $FE         ;
 $E62F JR NC,$E636    ;
 $E631 RES 5,(IX+$0B) ;
 $E635 RET            ;
*$E636 LD A,D         ;
 $E637 CP $04         ;
 $E639 JP Z,$E6C3     ;
 $E63C JR C,$E6A8     ;
 $E63E CP $0C         ;
 $E640 JP Z,$E6C3     ;
 $E643 JP C,$E6DB     ;
 $E646 JR $E6A8       ;

; Routine at E648
;
; Used by the routine at #R$E5DB.
c$E648 CP $01         ;
 $E64A JR Z,$E650     ;
 $E64C CP $07         ;
 $E64E JR NZ,$E655    ;
*$E650 BIT 0,(IX+$10) ;
 $E654 RET Z          ;
*$E655 BIT 4,(IX+$0B) ;
 $E659 JR Z,$E660     ;
 $E65B BIT 0,(IY+$05) ; Check bit 0 (Right) of Last joystick/keyboard bits
                      ; ($FD85)
 $E65F RET Z          ;
*$E660 LD A,E         ;
 $E661 INC A          ;
 $E662 AND $03        ;
 $E664 LD E,A         ;
 $E665 JR Z,$E668     ;
 $E667 RET            ;
*$E668 LD A,L         ;
 $E669 INC A          ;
 $E66A CP $1E         ;
 $E66C JR NC,$E670    ;
*$E66E LD L,A         ;
 $E66F RET            ;
*$E670 BIT 4,(IX+$0B) ;
 $E674 JR Z,$E66E     ;
 $E676 LD E,$03       ;
 $E678 RET            ;

; Routine at E679
;
; Used by the routine at #R$E5DB.
c$E679 CP $09         ;
 $E67B JR Z,$E681     ;
 $E67D CP $0F         ;
 $E67F JR NZ,$E686    ;
*$E681 BIT 0,(IX+$10) ;
 $E685 RET Z          ;
*$E686 BIT 4,(IX+$0B) ;
 $E68A JR Z,$E693     ;
 $E68C BIT 1,(IY+$05) ; Check bit 1 (Left) of Last joystick/keyboard bits
                      ; ($FD85)
 $E690 JR NZ,$E693    ;
 $E692 RET            ;
*$E693 LD A,E         ;
 $E694 DEC A          ;
 $E695 AND $03        ;
 $E697 LD E,A         ;
 $E698 CP $03         ;
 $E69A RET NZ         ;
 $E69B DEC L          ;
 $E69C LD A,L         ;
 $E69D INC A          ;
 $E69E RET NZ         ;
 $E69F BIT 4,(IX+$0B) ;
 $E6A3 RET Z          ;
 $E6A4 INC L          ;
 $E6A5 LD E,$00       ;
 $E6A7 RET            ;

; Routine at E6A8
;
; Used by the routine at #R$E628.
c$E6A8 CP $03         ;
 $E6AA JR Z,$E6B0     ;
 $E6AC CP $0D         ;
 $E6AE JR NZ,$E6B6    ;
*$E6B0 BIT 0,(IX+$10) ;
 $E6B4 JR Z,$E6C3     ;
*$E6B6 BIT 4,(IX+$0B) ;
 $E6BA JR Z,$E6C2     ;
 $E6BC BIT 3,(IY+$05) ; Check bit 3 (Up) of Last joystick/keyboard bits ($FD85)
 $E6C0 JR Z,$E6C3     ;
*$E6C2 DEC H          ;
; This entry point is used by the routines at #R$E628 and #R$E6DB.
*$E6C3 LD A,H         ;
 $E6C4 CP $61         ;
 $E6C6 JR C,$E6D8     ;
 $E6C8 CP $FA         ;
 $E6CA JR NC,$E6D8    ;
 $E6CC LD A,(IX+$12)  ;
 $E6CF CP $07         ;
 $E6D1 JR Z,$E6D8     ;
 $E6D3 RES 5,(IX+$0B) ;
 $E6D7 RET            ;
*$E6D8 JP $DC8C       ;

; Routine at E6DB
;
; Used by the routine at #R$E628.
c$E6DB CP $05         ;
 $E6DD JR Z,$E6E3     ;
 $E6DF CP $0B         ;
 $E6E1 JR NZ,$E6E9    ;
*$E6E3 BIT 0,(IX+$10) ;
 $E6E7 JR Z,$E6C3     ;
*$E6E9 LD A,H         ;
 $E6EA INC A          ;
 $E6EB CP $55         ;
 $E6ED JR C,$E6FB     ;
 $E6EF BIT 4,(IX+$0B) ;
 $E6F3 JR Z,$E6FB     ;
 $E6F5 LD A,D         ;
 $E6F6 CP $08         ;
 $E6F8 RET Z          ;
 $E6F9 JR $E6FC       ;
*$E6FB LD H,A         ;
*$E6FC JR $E6C3       ;

; Routine at E6FE
;
; Used by the routine at #R$E106.
c$E6FE LD A,($FDFC)    ;
 $E701 LD ($FDFE),A    ;
 $E704 LD (IY+$7C),$00 ;
 $E708 LD IX,$5B11     ;
; This entry point is used by the routine at #R$E972.
*$E70C BIT 5,(IX+$0B)  ;
 $E710 JP Z,$E9B9      ;
 $E713 LD A,(IX+$04)   ;
 $E716 ADD A,A         ;
 $E717 ADD A,A         ;
 $E718 ADD A,(IX+$06)  ;
 $E71B LD E,A          ;
 $E71C LD D,(IX+$05)   ;
 $E71F LD A,(IX+$12)   ;
 $E722 CP $0A          ;
 $E724 JR Z,$E732      ;
 $E726 CP $06          ;
 $E728 JR Z,$E732      ;
 $E72A LD A,D          ;
 $E72B CP $61          ;
 $E72D JR NC,$E732     ;
 $E72F INC (IY+$7C)    ;
*$E732 LD HL,$F8ED     ;
 $E735 LD B,$09        ;
 $E737 INC E           ;
 $E738 INC E           ;
 $E739 LD A,(IX+$0C)   ;
 $E73C CP $13          ;
 $E73E JR C,$E744      ;
 $E740 CP $17          ;
 $E742 JR C,$E770      ;
*$E744 LD A,(IX+$12)   ;
 $E747 SUB $0A         ;
 $E749 JR Z,$E770      ;
 $E74B INC A           ;
 $E74C JR Z,$E770      ;
 $E74E CALL $E77D      ;
 $E751 JR Z,$E770      ;
; Killed the object
*$E753 LD (IX+$0C),$13 ;
 $E757 LD (IX+$11),$10 ;
 $E75B LD BC,$0203     ; +200 for the kill
 $E75E LD A,(IX+$12)   ;
 $E761 CP $0E          ;
 $E763 JR NZ,$E766     ;
 $E765 INC C           ; change to +2000
*$E766 CALL $6415      ; -> $6825 - Update Score
 $E769 LD A,$05        ;
 $E76B CALL $642D      ; -> $6456
 $E76E JR $E794        ;
*$E770 LD HL,$F8EA     ;
 $E773 LD B,$1D        ;
 $E775 CALL $E77D      ;
 $E778 JR NZ,$E753     ;
 $E77A JR $E794        ;

; Routine at E77C
;
; .
;
; I:HL ??
; I:D ??
; I:B ??
c$E77C INC L         ;
; This entry point is used by the routines at #R$E1D1, #R$E224, #R$E6FE and
; #R$F076.
*$E77D LD A,(HL)     ;
 $E77E INC L         ;
 $E77F CP $90        ; Inactive record marker??
 $E781 RET Z         ;
 $E782 SUB D         ;
 $E783 JR C,$E77C    ;
 $E785 CP B          ;
 $E786 JR NC,$E77C   ;
 $E788 LD A,E        ;
 $E789 SUB (HL)      ;
 $E78A JR NC,$E77C   ;
 $E78C NEG           ;
 $E78E CP B          ;
 $E78F JR NC,$E77C   ;
 $E791 INC B         ;
 $E792 DEC B         ;
 $E793 RET           ;

; Routine at E794
;
; Used by the routine at #R$E6FE.
c$E794 BIT 4,(IX+$0C)  ;
 $E798 JR NZ,$E7BD     ;
 $E79A LD A,(IX+$12)   ;
 $E79D CP $09          ;
 $E79F JR Z,$E7BD      ;
 $E7A1 LD A,($FDE4)    ;
 $E7A4 SUB D           ;
 $E7A5 JR NC,$E7BD     ;
 $E7A7 ADD A,$05       ;
 $E7A9 JR NC,$E7BD     ;
 $E7AB LD A,($FDE3)    ;
 $E7AE ADD A,$03       ;
 $E7B0 SUB E           ;
 $E7B1 JR NC,$E7B5     ;
 $E7B3 NEG             ;
*$E7B5 CP $06          ;
 $E7B7 JR NC,$E7BD     ;
 $E7B9 SET 0,(IY+$62)  ; Player is dead??
*$E7BD LD A,(IX+$0C)   ;
 $E7C0 LD D,A          ;
 $E7C1 CP $10          ;
 $E7C3 JP C,$E972      ;
 $E7C6 JR Z,$E7E4      ;
 $E7C8 CP $18          ;
 $E7CA JP Z,$E972      ;
 $E7CD CP $16          ;
 $E7CF JR NZ,$E7D8     ;
 $E7D1 RES 5,(IX+$0B)  ;
 $E7D5 JP $E9B9        ;
*$E7D8 CP $11          ;
 $E7DA JR Z,$E81B      ;
 $E7DC CP $12          ;
 $E7DE JR Z,$E843      ;
 $E7E0 CP $17          ;
 $E7E2 JR NZ,$E7FF     ;
*$E7E4 DEC (IX+$11)    ;
 $E7E7 LD D,A          ;
 $E7E8 JR NZ,$E7FC     ;
 $E7EA LD (IX+$12),$00 ;
 $E7EE CALL $EBE1      ;
 $E7F1 LD (IX+$0C),A   ;
 $E7F4 LD (IX+$11),$10 ;
 $E7F8 RES 1,(IX+$0B)  ;
*$E7FC JP $E9B6        ;
*$E7FF DEC (IX+$11)    ;
 $E802 LD B,$16        ;
 $E804 JR Z,$E815      ;
 $E806 INC (IX+$10)    ;
 $E809 LD A,(IX+$10)   ;
 $E80C DEC B           ;
 $E80D RRA             ;
 $E80E JR NC,$E815     ;
 $E810 DEC B           ;
 $E811 RRA             ;
 $E812 JR NC,$E815     ;
 $E814 DEC B           ;
*$E815 LD (IX+$0C),B   ;
 $E818 JP $E9B9        ;
*$E81B DEC (IX+$11)    ;
 $E81E JP NZ,$E9B9     ;
 $E821 LD (IX+$0C),$12 ;
 $E825 LD (IX+$11),$04 ;
 $E829 LD D,(IX+$05)   ;
 $E82C LD A,(IX+$04)   ;
 $E82F ADD A,A         ;
 $E830 ADD A,A         ;
 $E831 ADD A,(IX+$06)  ;
 $E834 SUB $03         ;
 $E836 LD E,A          ;
 $E837 LD C,$00        ;
 $E839 PUSH IX         ;
 $E83B CALL $F1BB      ;
 $E83E POP IX          ;
 $E840 JP $E9B9        ;
*$E843 DEC (IX+$11)    ;
 $E846 JP NZ,$E9B9     ;
 $E849 LD (IX+$11),$12 ;
 $E84D LD A,(IX+$12)   ;
 $E850 CP $08          ;
 $E852 JP Z,$EB7B      ;
 $E855 CP $04          ;
 $E857 JR NZ,$E862     ;
 $E859 CALL $EBE1      ;
 $E85C LD (IX+$0C),A   ;
 $E85F JP $E9B9        ;
*$E862 LD A,(IX+$13)   ;
 $E865 LD (IX+$0C),A   ;
 $E868 JP $E9B9        ;

; Routine at E86B
;
; Used by the routines at #R$E881 and #R$EB7B.
c$E86B LD A,$02        ;
 $E86D LD E,(IX+$06)   ;
 $E870 INC E           ;
 $E871 DEC E           ;
 $E872 JR Z,$E876      ;
 $E874 JR $E87B        ;
*$E876 LD (IX+$0C),$11 ;
 $E87A ADD A,A         ;
*$E87B LD (IX+$11),A   ;
 $E87E JP $E9B9        ;

; Routine at E881
c$E881 CALL $EBE1      ;
 $E884 LD (IX+$0C),A   ;
 $E887 CALL $DC83      ;
 $E88A RRA             ;
 $E88B JR C,$E86B      ;
 $E88D AND $0C         ;
 $E88F JR NZ,$E899     ;
 $E891 LD A,(IX+$12)   ;
 $E894 CP $09          ;
 $E896 CALL NZ,$EC1B   ;
*$E899 LD (IX+$11),$0E ;
 $E89D JP $E992        ;

; Routine at E8A0
;
; Used by the routine at #R$E972.
c$E8A0 DEC (IX+$11)   ;
 $E8A3 JP NZ,$E9B9    ;
 $E8A6 LD A,(IX+$13)  ;
 $E8A9 OR A           ;
 $E8AA JR Z,$E8D6     ;
 $E8AC CP $03         ;
 $E8AE JR Z,$E8D6     ;
 $E8B0 CP $01         ;
 $E8B2 JR NZ,$E8BE    ;
 $E8B4 CALL $EBE1     ;
 $E8B7 LD (IX+$0C),B  ;
 $E8BA LD A,$01       ;
 $E8BC JR $E8D6       ;
*$E8BE CALL $EBE1     ;
 $E8C1 LD (IX+$0C),A  ;
 $E8C4 CALL $DC83     ;
 $E8C7 BIT 6,A        ;
 $E8C9 PUSH AF        ;
 $E8CA PUSH BC        ;
 $E8CB CALL NZ,$EC1B  ;
 $E8CE POP BC         ;
 $E8CF POP AF         ;
 $E8D0 AND $02        ;
 $E8D2 JR NZ,$E8D6    ;
 $E8D4 JR $E904       ;
*$E8D6 INC A          ;
 $E8D7 AND $03        ;
 $E8D9 LD (IX+$13),A  ;
 $E8DC LD D,A         ;
 $E8DD LD BC,$0113    ;
 $E8E0 CALL $DC83     ;
 $E8E3 AND $1F        ;
 $E8E5 ADD A,C        ;
 $E8E6 LD C,A         ;
 $E8E7 LD A,D         ;
 $E8E8 BIT 0,A        ;
 $E8EA JR Z,$E8EE     ;
 $E8EC LD C,$04       ;
*$E8EE INC A          ;
 $E8EF AND $02        ;
 $E8F1 LD A,B         ;
 $E8F2 JR Z,$E8F6     ;
 $E8F4 NEG            ;
*$E8F6 LD B,A         ;
 $E8F7 ADD A,(IX+$05) ;
 $E8FA LD (IX+$05),A  ;
 $E8FD LD A,(IX+$0A)  ;
 $E900 SUB B          ;
 $E901 LD (IX+$0A),A  ;
*$E904 LD (IX+$11),C  ;
 $E907 JP $E9B9       ;

; Routine at E90A
;
; Used by the routine at #R$E972.
c$E90A LD L,(IX+$04)   ;
 $E90D LD A,(IX+$05)   ;
 $E910 LD H,A          ;
 $E911 CP $60          ;
 $E913 JR NC,$E96F     ;
 $E915 CP $2E          ;
 $E917 JR C,$E92F      ;
 $E919 LD (IX+$12),$01 ;
 $E91D CALL $E1AC      ;
 $E920 AND $0F         ;
 $E922 LD (IX+$0C),A   ;
 $E925 LD (IX+$13),A   ;
 $E928 LD (IX+$0A),$0A ;
 $E92C JP $E9B9        ;
*$E92F BIT 4,(IY+$15)  ;
 $E933 JR NZ,$E939     ;
 $E935 CP $14          ;
 $E937 JR C,$E96F      ;
*$E939 LD A,($5BDE)    ;
 $E93C SUB L           ;
 $E93D JR Z,$E952      ;
 $E93F JR NC,$E948     ;
 $E941 INC A           ;
 $E942 JR Z,$E952      ;
 $E944 LD B,$0A        ;
 $E946 JR $E954        ;
*$E948 DEC A           ;
 $E949 JR Z,$E952      ;
 $E94B DEC A           ;
 $E94C JR Z,$E952      ;
 $E94E LD B,$06        ;
 $E950 JR $E954        ;
*$E952 LD B,$08        ;
*$E954 LD (IX+$0C),B   ;
 $E957 DEC (IX+$11)    ;
 $E95A JR NZ,$E96F     ;
 $E95C LD (IX+$11),$19 ;
 $E960 CALL $DC83      ;
 $E963 AND $03         ;
 $E965 JR Z,$E96C      ;
 $E967 LD A,B          ;
 $E968 CP $08          ;
 $E96A JR NZ,$E96F     ;
*$E96C CALL $EC1B      ;
*$E96F JP $E9B9        ;

; Routine at E972
;
; Used by the routine at #R$E794.
c$E972 LD A,(IX+$12) ;
 $E975 CP $06        ;
 $E977 JR Z,$E90A    ;
 $E979 CP $0A        ;
 $E97B JP Z,$E8A0    ;
 $E97E DEC (IX+$11)  ;
 $E981 JP NZ,$E992   ;
 $E984 LD A,(IX+$12) ;
 $E987 ADD A,A       ;
 $E988 ADD A,$88     ;
 $E98A LD L,A        ;
 $E98B LD H,$E1      ;
 $E98D LD E,(HL)     ;
 $E98E INC L         ;
 $E98F LD H,(HL)     ;
 $E990 LD L,E        ;
 $E991 JP (HL)       ;
; This entry point is used by the routines at #R$E881, #R$EB13 and #R$EB96.
*$E992 LD A,(IX+$12) ;
 $E995 CP $0D        ;
 $E997 JP Z,$E9B9    ;
 $E99A CP $04        ;
 $E99C JR Z,$E9AE    ;
 $E99E CP $09        ;
 $E9A0 JR Z,$E9AE    ;
 $E9A2 CP $01        ;
 $E9A4 JR Z,$E9AE    ;
 $E9A6 CP $0C        ;
 $E9A8 JR Z,$E9AE    ;
 $E9AA CP $0F        ;
 $E9AC JR NZ,$E9B3   ;
*$E9AE LD D,(IX+$13) ;
 $E9B1 JR $E9B6      ;
*$E9B3 LD D,(IX+$0C) ;
; This entry point is used by the routines at #R$E794, #R$EB68, #R$EB7B and
; #R$EB96.
*$E9B6 CALL $E5DB    ;
; This entry point is used by the routines at #R$E6FE, #R$E794, #R$E86B,
; #R$E8A0, #R$E90A, #R$EC58 and #R$F180.
*$E9B9 LD DE,$0014   ;
 $E9BC ADD IX,DE     ;
 $E9BE LD A,(IX+$00) ;
 $E9C1 CP $90        ;
 $E9C3 RET Z         ;
 $E9C4 JP $E70C      ;

; Data block at E9C7
b$E9C7 DEFB $DD,$CB,$0B,$8E,$DD,$36,$12,$00
 $E9CF DEFB $C3,$96,$EB,$DD,$CB,$0B,$8E,$DD
 $E9D7 DEFB $36,$11,$30,$C3,$92,$E9,$DD,$7E
 $E9DF DEFB $05,$FE

; Message at E9E1
t$E9E1 DEFM "$04"

; Data block at E9E4
b$E9E4 DEFB $DD,$7E,$13,$57,$FE,$04,$38,$04
 $E9EC DEFB $FE,$0C,$38,$0F,$DD,$36,$12,$01
 $E9F4 DEFB $DD,$CB,$0B,$8E,$DD,$36,$11,$10
 $E9FC DEFB $C3,$92,$E9,$DD,$46,$13,$DD,$36
 $EA04 DEFB $11,$0B,$CD,$83,$DC,$E6,$03,$20
 $EA0C DEFB $6A,$CD,$83,$DC,$E6,$0F,$DD,$77
 $EA14 DEFB $0C,$C3,$92,$E9,$DD,$CB,$0B,$8E
 $EA1C DEFB $CD,$83,$DC,$F5,$E6,$07,$20,$1C
 $EA24 DEFB $F1,$F5,$E6,$18,$20,$07,$F1,$DD
 $EA2C DEFB $36,$12,$04,$18,$C3,$F1,$DD,$36
 $EA34 DEFB $12,$00,$E6,$E0,$18,$BA,$DD,$CB
 $EA3C DEFB $0B,$FE,$18,$B4,$F1,$DD,$36,$11
 $EA44 DEFB $05,$CD,$E1,$EB,$DD,$70,$13,$CD
 $EA4C DEFB $83,$DC,$CB,$7F,$28,$1D,$E6,$0F
 $EA54 DEFB $4F,$78,$E6,$07,$20,$0F,$79,$FE
 $EA5C DEFB $04,$28,$08,$FE,$0C,$20,$06,$0E
 $EA64 DEFB $0A,$18,$02,$0E,$06,$DD,$71,$0C
 $EA6C DEFB $C3,$92,$E9,$CD,$83,$DC,$E6,$0F
 $EA74 DEFB $DD,$77,$13,$DD,$70,$0C,$3A,$FE
 $EA7C DEFB $FD,$FE,$01,$20,$02,$18,$05,$CD
 $EA84 DEFB $83,$DC,$E6,$07,$CC,$1B,$EC,$C3
 $EA8C DEFB $92,$E9,$DD,$CB,$0B,$4E,$28,$10
 $EA94 DEFB $DD,$35,$0E,$DD,$36,$11,$01,$C2
 $EA9C DEFB $B9,$E9,$DD,$CB,$0B,$8E,$18,$68
 $EAA4 DEFB $DD,$56,$05,$DD,$7E,$04,$87,$87
 $EAAC DEFB $DD,$86,$06,$5F,$0E,$02,$3A,$E3
 $EAB4 DEFB $FD,$93,$30,$04,$ED,$44,$0E,$00
 $EABC DEFB $47,$3A,$E4,$FD,$92,$38,$49,$B8

; Message at EAC4
t$EAC4 DEFM "8Fx"

; Data block at EAC7
b$EAC7 DEFB $FE,$14,$30,$02,$0E,$01,$DD,$E5
 $EACF DEFB $C5,$0E,$00,$CD,$BB,$F1,$C1,$28
 $EAD7 DEFB $32,$DD,$71,$0C,$DD,$CB,$00,$C6
 $EADF DEFB $DD,$CB,$00,$CE,$1E,$04,$3A,$E5
 $EAE7 DEFB $FD,$FE,$05,$38,$06,$1C,$FE,$09
 $EAEF DEFB $38,$01,$1C,$DD,$73,$06,$DD,$36
 $EAF7 DEFB $07,$73,$DD,$E1,$DD,$36,$11,$01
 $EAFF DEFB $DD,$CB,$0B,$CE,$DD,$36,$0E,$03
 $EB07 DEFB $C3,$B9,$E9,$DD,$E1,$DD,$36,$11
 $EB0F DEFB $1C,$C3,$92,$E9

; Routine at EB13
c$EB13 LD B,$10      ;
 $EB15 LD A,($FDE5)  ; Get Area number
 $EB18 CP $04        ;
 $EB1A JR C,$EB1E    ;
 $EB1C LD B,$09      ;
*$EB1E LD (IX+$11),B ;
 $EB21 CALL $DC83    ;
 $EB24 AND $01       ;
 $EB26 JR Z,$EB5F    ;
 $EB28 CALL $EBE1    ;
 $EB2B LD A,(IX+$13) ;
 $EB2E AND $07       ;
 $EB30 JR NZ,$EB41   ;
 $EB32 LD A,B        ;
 $EB33 CP $04        ;
 $EB35 JR Z,$EB3F    ;
 $EB37 CP $0C        ;
 $EB39 JR NZ,$EB41   ;
 $EB3B LD B,$0A      ;
 $EB3D JR $EB41      ;
*$EB3F LD B,$06      ;
*$EB41 LD (IX+$0C),B ;
 $EB44 LD A,($FDE5)  ; Get Area number
 $EB47 DEC A         ;
 $EB48 BIT 1,A       ;
 $EB4A LD B,$03      ;
 $EB4C JR Z,$EB55    ;
 $EB4E LD B,$01      ;
 $EB50 CP $07        ;
 $EB52 JR C,$EB55    ;
 $EB54 DEC B         ;
*$EB55 CALL $DC83    ;
 $EB58 AND B         ;
 $EB59 CALL Z,$EC1B  ;
 $EB5C JP $E992      ;
*$EB5F LD A,(IX+$13) ;
 $EB62 LD (IX+$0C),A ;
 $EB65 JP $E992      ;

; Routine at EB68
c$EB68 LD (IX+$12),$01 ;
 $EB6C LD D,$08        ;
 $EB6E LD (IX+$0C),D   ;
 $EB71 LD (IX+$13),D   ;
 $EB74 LD (IX+$11),$20 ;
 $EB78 JP $E9B6        ;

; Routine at EB7B
;
; Used by the routine at #R$E794.
c$EB7B INC (IX+$0D)    ;
 $EB7E LD A,(IX+$0D)   ;
 $EB81 CP $05          ;
 $EB83 JP C,$E86B      ;
 $EB86 LD A,(IX+$13)   ;
 $EB89 XOR $08         ;
 $EB8B LD (IX+$0C),A   ;
 $EB8E LD (IX+$11),$40 ;
 $EB92 LD D,A          ;
 $EB93 JP $E9B6        ;

; Routine at EB96
c$EB96 BIT 7,(IX+$0B)  ;
 $EB9A JR NZ,$EBB4     ;
 $EB9C CALL $DC83      ;
 $EB9F AND $0F         ;
 $EBA1 LD D,A          ;
 $EBA2 ADD A,$19       ;
 $EBA4 LD (IX+$11),A   ;
 $EBA7 LD A,(IX+$10)   ;
 $EBAA AND $01         ;
 $EBAC JR NZ,$EBB4     ;
 $EBAE LD (IX+$0C),D   ;
 $EBB1 JP $E9B6        ;
*$EBB4 CALL $EBE1      ;
 $EBB7 LD (IX+$0C),B   ;
 $EBBA BIT 7,(IX+$0B)  ;
 $EBBE JR NZ,$EBC9     ;
 $EBC0 CALL $DC83      ;
 $EBC3 RRA             ;
 $EBC4 JR C,$EBDB      ;
 $EBC6 JP Z,$E992      ;
*$EBC9 LD (IX+$11),$11 ;
 $EBCD INC (IX+$0F)    ;
 $EBD0 LD A,(IX+$0F)   ;
 $EBD3 AND $07         ;
 $EBD5 JR NZ,$EBDB     ;
 $EBD7 RES 7,(IX+$0B)  ;
*$EBDB CALL $EC1B      ;
 $EBDE JP $E992        ;

; Routine at EBE1
;
; Used by the routines at #R$E794, #R$E881, #R$E8A0, #R$EB13 and #R$EB96.
c$EBE1 LD A,($5BDF)  ;
 $EBE4 LD BC,$0000   ;
 $EBE7 SUB (IX+$05)  ;
 $EBEA JR C,$EBF4    ;
 $EBEC SUB $10       ;
 $EBEE JR C,$EBFA    ;
 $EBF0 SET 2,C       ;
 $EBF2 JR $EBFA      ;
*$EBF4 ADD A,$10     ;
 $EBF6 JR C,$EBFA    ;
 $EBF8 SET 3,C       ;
*$EBFA LD A,($5BDE)  ;
 $EBFD CP (IX+$04)   ;
 $EC00 JR Z,$EC12    ;
 $EC02 JR NC,$EC0C   ;
 $EC04 ADD A,$01     ;
 $EC06 JR C,$EC12    ;
 $EC08 SET 1,C       ;
 $EC0A JR $EC12      ;
*$EC0C SUB $01       ;
 $EC0E JR C,$EC12    ;
 $EC10 SET 0,C       ;
*$EC12 LD HL,$E4F1   ;
 $EC15 ADD HL,BC     ;
 $EC16 LD A,(HL)     ;
 $EC17 AND $0F       ;
 $EC19 LD B,A        ;
 $EC1A RET           ;

; Routine at EC1B
;
; Used by the routines at #R$E2EA, #R$E881, #R$E8A0, #R$E90A, #R$EB13 and
; #R$EB96.
c$EC1B PUSH IX       ;
 $EC1D PUSH IX       ;
 $EC1F POP HL        ;
 $EC20 CALL $ED31    ;
 $EC23 LD A,H        ;
 $EC24 CP $60        ;
 $EC26 JR NC,$EC55   ;
 $EC28 CP $05        ;
 $EC2A JR C,$EC55    ;
 $EC2C LD A,L        ;
 $EC2D CP $80        ;
 $EC2F JR NC,$EC55   ;
 $EC31 LD A,($5BDF)  ;
 $EC34 ADD A,$04     ;
 $EC36 LD B,A        ;
 $EC37 LD A,($FDE3)  ;
 $EC3A ADD A,$04     ;
 $EC3C LD C,A        ;
 $EC3D LD E,$82      ;
 $EC3F LD A,($FDE5)  ; Get Area number
 $EC42 CP $04        ;
 $EC44 JR C,$EC51    ;
 $EC46 INC E         ;
 $EC47 CP $08        ;
 $EC49 JR C,$EC51    ;
 $EC4B INC E         ;
 $EC4C CP $0C        ;
 $EC4E JR C,$EC51    ;
 $EC50 INC E         ;
*$EC51 LD A,E        ;
 $EC52 CALL $F200    ; -> $F4F6
*$EC55 POP IX        ;
 $EC57 RET           ;

; Routine at EC58
c$EC58 LD A,(IX+$0C)   ;
 $EC5B CP $08          ;
 $EC5D JR C,$EC63      ;
 $EC5F LD A,$17        ;
 $EC61 JR $EC65        ;
*$EC63 LD A,$10        ;
*$EC65 LD (IX+$0C),A   ;
 $EC68 LD (IX+$13),$F6 ;
 $EC6C LD (IX+$11),$10 ;
 $EC70 LD (IX+$0F),$00 ;
 $EC74 LD (IX+$0E),$00 ;
 $EC78 LD A,(IX+$05)   ;
 $EC7B LD (IX+$0D),A   ;
 $EC7E JP $E9B9        ;

; Data block at EC81
b$EC81 DEFB $04,$FF,$00,$FC,$07,$02,$02,$FC
 $EC89 DEFB $07,$02,$03,$FD,$07,$02,$04,$FE
 $EC91 DEFB $07,$04,$04,$00,$07,$07,$04,$02
 $EC99 DEFB $07,$07,$03,$03,$07,$07,$02,$04
 $ECA1 DEFB $04,$0A,$00,$04,$00,$06,$FE,$04
 $ECA9 DEFB $00,$06,$FD,$03,$00,$06,$FC,$02
 $ECB1 DEFB $00,$05,$FC,$00,$00,$01,$FC,$FE
 $ECB9 DEFB $00,$01,$FD,$FD,$00,$01,$FE,$FC

; Routine at ECC1
;
; Used by the routine at #R$E103.
c$ECC1 LD A,($5BE6)   ;
 $ECC4 CP $10         ;
 $ECC6 RET NC         ;
 $ECC7 BIT 4,(IY+$05) ; Check bit 4 (Fire) of Last joystick/keyboard bits
                      ; ($FD85)
 $ECCB LD A,($FD95)   ;
 $ECCE LD D,A         ;
 $ECCF JR NZ,$ECE3    ; Fire => jump
 $ECD1 AND $70        ;
 $ECD3 LD ($FD95),A   ;
*$ECD6 BIT 5,(IY+$05) ;
 $ECDA JR NZ,$ECF2    ;
 $ECDC BIT 6,A        ;
 $ECDE RET Z          ;
 $ECDF RES 6,A        ;
 $ECE1 JR $ED1C       ;
; Fire button pressed
*$ECE3 BIT 7,A        ;
 $ECE5 JR Z,$ED1A     ;
 $ECE7 INC A          ;
 $ECE8 LD ($FD95),A   ;
 $ECEB AND $0F        ;
 $ECED CP $0F         ;
 $ECEF LD A,D         ;
 $ECF0 JR C,$ECD6     ;
*$ECF2 LD A,($FD95)   ;
 $ECF5 AND $F0        ;
 $ECF7 LD ($FD95),A   ;
 $ECFA LD A,($FDE7)   ; Get grenades number
 $ECFD OR A           ;
 $ECFE RET Z          ;
 $ECFF LD A,($5BDA)   ; Get player's column
 $ED02 ADD A,A        ;
 $ED03 ADD A,A        ;
 $ED04 LD L,A         ;
 $ED05 LD A,($5BDB)   ;
 $ED08 LD H,A         ;
 $ED09 SUB $30        ;
 $ED0B JR NC,$ED0F    ;
 $ED0D LD A,$04       ;
*$ED0F LD B,A         ;
 $ED10 LD C,L         ;
 $ED11 CALL $F21B     ; -> $F4E3
 $ED14 RET Z          ;
 $ED15 LD A,$FF       ; -1 more grenades
 $ED17 JP $6430       ; -> $6C7A - We've got A more grenades
*$ED1A OR $C0         ;
*$ED1C LD ($FD95),A   ;
 $ED1F LD HL,$5BDA    ; Player's object record address
 $ED22 LD A,($5BE6)   ;
 $ED25 LD B,A         ;
 $ED26 CALL $ED31     ;
 $ED29 CALL $F20C     ;
 $ED2C LD A,$06       ;
 $ED2E JP $642D       ; -> $6456

; Routine at ED31
;
; Used by the routines at #R$EC1B and #R$ECC1.
c$ED31 LD A,(HL)     ;
 $ED32 ADD A,A       ;
 $ED33 ADD A,A       ;
 $ED34 LD E,A        ;
 $ED35 INC HL        ;
 $ED36 LD D,(HL)     ;
 $ED37 INC HL        ;
 $ED38 LD A,(HL)     ;
 $ED39 ADD A,E       ;
 $ED3A LD E,A        ;
 $ED3B LD HL,$EC81   ;
 $ED3E LD A,B        ;
 $ED3F ADD A,A       ;
 $ED40 ADD A,A       ;
 $ED41 LD C,A        ;
 $ED42 LD B,$00      ;
 $ED44 ADD HL,BC     ;
 $ED45 LD A,(HL)     ;
 $ED46 ADD A,E       ;
 $ED47 LD E,A        ;
 $ED48 INC HL        ;
 $ED49 LD A,(HL)     ;
 $ED4A ADD A,D       ;
 $ED4B LD D,A        ;
 $ED4C INC HL        ;
 $ED4D LD C,(HL)     ;
 $ED4E INC HL        ;
 $ED4F LD B,(HL)     ;
 $ED50 EX DE,HL      ;
 $ED51 RET           ;

; Routine at ED52
;
; Used by the routine at #R$E109.
c$ED52 LD (IY+$17),$FF ;
 $ED56 LD HL,$FF00     ;
 $ED59 LD DE,$F900     ;
; This entry point is used by the routines at #R$EDD6, #R$EF37, #R$EF7C,
; #R$EFDD, #R$F076, #R$F114 and #R$F126.
*$ED5C LD A,L          ;
 $ED5D AND $F8         ;
 $ED5F LD L,A          ;
 $ED60 CP (IY+$08)     ;
 $ED63 JR Z,$ED8E      ;
 $ED65 LD L,(HL)       ;
 $ED66 INC L           ;
 $ED67 INC L           ;
 $ED68 LD A,(HL)       ;
 $ED69 AND $3F         ;
 $ED6B CP $27          ;
 $ED6D JR NC,$ED5C     ;
 $ED6F ADD A,A         ;
 $ED70 ADD A,$16       ;
 $ED72 LD C,A          ;
 $ED73 LD B,$E1        ;
 $ED75 INC L           ;
 $ED76 LD A,(HL)       ;
 $ED77 AND $1F         ;
 $ED79 ADD A,A         ;
 $ED7A ADD A,A         ;
 $ED7B LD (DE),A       ;
 $ED7C LD A,(BC)       ;
 $ED7D BIT 7,A         ;
 $ED7F JR NZ,$EDB9     ;
 $ED81 INC E           ;
 $ED82 LD (DE),A       ;
 $ED83 INC E           ;
 $ED84 INC C           ;
 $ED85 INC L           ;
 $ED86 LD A,(HL)       ;
 $ED87 LD (DE),A       ;
 $ED88 INC E           ;
 $ED89 LD A,(BC)       ;
 $ED8A LD (DE),A       ;
 $ED8B INC E           ;
 $ED8C JR $ED5C        ;
*$ED8E LD A,($FDCB)    ;
 $ED91 INC A           ;
 $ED92 JR Z,$EDA8      ;
 $ED94 DEC A           ;
 $ED95 ADD A,A         ;
 $ED96 ADD A,A         ;
 $ED97 LD (DE),A       ;
 $ED98 EX DE,HL        ;
 $ED99 INC L           ;
 $ED9A LD (HL),$10     ;
 $ED9C INC L           ;
 $ED9D LD A,($FDCC)    ;
 $EDA0 SUB $06         ;
 $EDA2 LD (HL),A       ;
 $EDA3 INC L           ;
 $EDA4 LD (HL),$04     ;
 $EDA6 INC L           ;
 $EDA7 EX DE,HL        ;
*$EDA8 LD A,$80        ;
 $EDAA LD (DE),A       ;
 $EDAB XOR A           ;
 $EDAC EX AF,AF'       ;
 $EDAD XOR A           ;
 $EDAE CALL $6424      ; -> $7511 - XOR AF and AF' with every byte in
                       ; $F900-F9FF
 $EDB1 LD ($FDF4),A    ;
 $EDB4 EX AF,AF'       ;
 $EDB5 LD ($FDF5),A    ;
 $EDB8 RET             ;
*$EDB9 AND $7F         ;
 $EDBB EXX             ;
 $EDBC ADD A,A         ;
 $EDBD LD H,$E1        ;
 $EDBF ADD A,$64       ;
 $EDC1 LD L,A          ;
 $EDC2 LD E,(HL)       ;
 $EDC3 INC L           ;
 $EDC4 LD D,(HL)       ;
 $EDC5 PUSH DE         ;
 $EDC6 EXX             ;
 $EDC7 RET             ;

; Routine at EDC8
;
; Used by the routines at #R$EDD6, #R$EF37 and #R$EF7C.
c$EDC8 EX DE,HL      ;
 $EDC9 INC L         ;
 $EDCA LD (HL),A     ;
 $EDCB INC L         ;
 $EDCC INC E         ;
 $EDCD LD A,(DE)     ;
 $EDCE LD (HL),A     ;
 $EDCF INC L         ;
 $EDD0 LD (HL),B     ;
 $EDD1 INC L         ;
 $EDD2 LD (HL),$80   ;
 $EDD4 EX DE,HL      ;
 $EDD5 RET           ;

; Routine at EDD6
c$EDD6 LD C,(HL)       ;
 $EDD7 LD A,$1C        ;
 $EDD9 LD B,$2D        ;
 $EDDB CALL $EDC8      ;
 $EDDE INC L           ;
 $EDDF CP $20          ;
 $EDE1 JR NC,$EE0E     ;
 $EDE3 CP $06          ;
 $EDE5 JR NC,$EDEB     ;
 $EDE7 LD (HL),$08     ;
 $EDE9 JR $EE0E        ;
*$EDEB DEC (HL)        ;
 $EDEC JR NZ,$EE0E     ;
 $EDEE CALL $DC83      ;
 $EDF1 AND $0F         ;
 $EDF3 ADD A,$14       ;
 $EDF5 LD (HL),A       ;
 $EDF6 PUSH HL         ;
 $EDF7 PUSH DE         ;
 $EDF8 LD (IY+$16),$AA ;
 $EDFC LD A,C          ;
 $EDFD OR A            ;
 $EDFE JR Z,$EE09      ;
 $EE00 CP $18          ;
 $EE02 JR C,$EE0C      ;
 $EE04 CALL $E3AB      ;
 $EE07 JR $EE0C        ;
*$EE09 CALL $E3B5      ;
*$EE0C POP DE          ;
 $EE0D POP HL          ;
; This entry point is used by the routine at #R$EE15.
*$EE0E JP $ED5C        ;

; Routine at EE11
c$EE11 INC L         ;
 $EE12 LD A,(HL)     ;
 $EE13 JR $EE1F      ;

; Routine at EE15
c$EE15 LD A,($FD97)  ;
 $EE18 INC A         ;
 $EE19 JR NZ,$EE22   ;
 $EE1B INC L         ;
 $EE1C LD A,(HL)     ;
 $EE1D ADD A,$26     ;
; This entry point is used by the routine at #R$EE11.
*$EE1F LD ($FD97),A  ;
*$EE22 JR $EE0E      ;

; Data block at EE24
b$EE24 DEFB $1A,$C6,$04,$12,$1A,$F6,$82,$12
 $EE2C DEFB $EB,$2C,$36,$04,$2C,$1C,$1A,$D6
 $EE34 DEFB $04

; Message at EE35
t$EE35 DEFM "w,6"

; Data block at EE38
b$EE38 DEFB $02,$2C,$EB,$18,$D1,$7E,$E6,$1F
 $EE40 DEFB $4F,$3E,$1C,$06,$12,$CD,$C8,$ED
 $EE48 DEFB $2C,$D6,$12,$30,$04,$36,$00,$18
 $EE50 DEFB $BD,$C6,$04,$FE,$4E,$30,$F8,$47
 $EE58 DEFB $7E,$E6,$1F,$20,$07,$CD,$83,$DC
 $EE60 DEFB $E6,$1F,$C6,$1E

; Message at EE64
t$EE64 DEFM "w5 "

; Data block at EE67
b$EE67 DEFB $E7,$CD,$83,$DC,$E6,$C0,$C6,$3C
 $EE6F DEFB $77,$E5,$D5,$60,$69,$01,$0B,$08
 $EE77 DEFB $2C,$CB,$7D,$CB,$BD,$28,$02,$06
 $EE7F DEFB $06,$CD,$4D,$E4,$28,$0B,$CD,$83
 $EE87 DEFB $DC,$E6,$03,$20,$04,$DD,$CB,$0B
 $EE8F DEFB $FE,$D1,$E1,$18,$BB,$7E,$E6,$1F
 $EE97 DEFB $4F,$3E,$18,$06,$14,$CD,$C8,$ED
 $EE9F DEFB $2C,$D6,$12,$30,$05,$36,$00,$C3
 $EEA7 DEFB $5C,$ED,$C6,$04,$FE,$4E,$30,$F7
 $EEAF DEFB $47,$7E,$B7,$20,$0D,$78,$FE,$08
 $EEB7 DEFB $38,$ED,$CD,$83,$DC,$E6,$80,$C6

; Message at EEBF
t$EEBF DEFM "(w5 "

; Data block at EEC3
b$EEC3 DEFB $E2,$CD,$83,$DC,$E6,$3F,$C6,$0C
 $EECB DEFB $FD,$CB,$15,$66,$28,$0C,$3A,$FA
 $EED3 DEFB $FD,$FE,$14,$30,$CE,$FD,$34,$7A
 $EEDB DEFB $18,$02,$C6,$AF,$77,$E5,$D5,$60
 $EEE3 DEFB $69,$01,$0B,$04,$7D,$2C,$2C,$B7
 $EEEB DEFB $28,$03,$2D,$06,$0C,$CD,$4D,$E4
 $EEF3 DEFB $D1,$E1,$18,$AF,$4E,$1A,$F6,$82
 $EEFB DEFB $12,$EB,$2C,$36,$10,$2C,$1C,$1A
 $EF03 DEFB $D6,$04

; Message at EF05
t$EF05 DEFM "w,6"

; Data block at EF08
b$EF08 DEFB $02,$2C,$EB,$D6,$02,$30,$06,$2C
 $EF10 DEFB $36,$00,$C3,$5C,$ED,$C6,$01,$47
 $EF18 DEFB $23,$7E,$3C,$28,$F5,$36,$FF,$E5
 $EF20 DEFB $D5,$60,$69,$01,$0A,$08,$CD,$4D
 $EF28 DEFB $E4,$28,$08,$7D,$36,$00,$D6,$09
 $EF30 DEFB $6F,$36,$05,$D1,$E1,$18,$DB

; Routine at EF37
c$EF37 INC BC         ;
 $EF38 LD A,(BC)      ;
 $EF39 EXX            ;
 $EF3A LD B,A         ;
 $EF3B EXX            ;
 $EF3C LD C,(HL)      ;
 $EF3D LD A,$0C       ;
 $EF3F LD B,$09       ;
 $EF41 CALL $EDC8     ;
 $EF44 SUB $0E        ;
 $EF46 JR NC,$EF4E    ;
 $EF48 INC L          ;
 $EF49 LD (HL),$00    ;
; This entry point is used by the routine at #R$EF7C.
*$EF4B JP $ED5C       ;
*$EF4E DEC A          ;
 $EF4F LD B,A         ;
 $EF50 INC L          ;
 $EF51 LD A,(HL)      ;
 $EF52 INC A          ;
 $EF53 JR Z,$EF4B     ;
 $EF55 LD (HL),$FF    ;
 $EF57 EXX            ;
 $EF58 INC B          ;
 $EF59 EXX            ;
 $EF5A JR NZ,$EF66    ;
 $EF5C INC (IY+$61)   ;
 $EF5F BIT 0,(IY+$61) ;
 $EF63 JR Z,$EF4B     ;
 $EF65 INC B          ;
*$EF66 PUSH HL        ;
 $EF67 PUSH DE        ;
 $EF68 LD H,B         ;
 $EF69 LD L,C         ;
 $EF6A LD BC,$0806    ;
 $EF6D CALL $E44D     ;
 $EF70 JR Z,$EF78     ;
 $EF72 LD A,L         ;
 $EF73 SUB $09        ;
 $EF75 LD L,A         ;
 $EF76 LD (HL),$08    ;
*$EF78 POP DE         ;
 $EF79 POP HL         ;
 $EF7A JR $EF4B       ;

; Routine at EF7C
c$EF7C LD A,(HL)      ;
 $EF7D CP $0B         ;
 $EF7F JR NZ,$EF4B    ;
 $EF81 LD B,$24       ;
 $EF83 XOR A          ;
 $EF84 LD (DE),A      ;
 $EF85 LD A,$38       ;
 $EF87 CALL $EDC8     ;
 $EF8A DEC L          ;
 $EF8B LD A,$4A       ;
 $EF8D LD (DE),A      ;
 $EF8E LD A,$38       ;
 $EF90 CALL $EDC8     ;
 $EF93 BIT 4,(IY+$15) ;
 $EF97 JP NZ,$ED5C    ;
 $EF9A SUB $0C        ;
 $EF9C LD B,A         ;
 $EF9D LD C,$33       ;
 $EF9F ADD A,$18      ;
 $EFA1 JR $EFDD       ;

; Data block at EFA3
b$EFA3 DEFB $1A,$4F,$3E,$06,$06,$26,$CD,$C8
 $EFAB DEFB $ED,$2D,$79,$C6,$1A,$12,$06,$26
 $EFB3 DEFB $3E,$06,$CD,$C8,$ED,$EB,$36,$82

; Message at EFBB
t$EFBB DEFM ",q,"

; Data block at EFBE
b$EFBE DEFB $1A,$D6,$05

; Message at EFC1
t$EFC1 DEFM "Gp,6"

; Data block at EFC5
b$EFC5 DEFB $1D,$2C,$79,$C6,$20,$F6,$82,$77
 $EFCD DEFB $2C,$ED,$44,$C6,$80

; Message at EFD2
t$EFD2 DEFM "w,p,6"

; Data block at EFD7
b$EFD7 DEFB $1D,$2C,$36,$80,$EB,$78

; Routine at EFDD
;
; Used by the routine at #R$EF7C.
c$EFDD INC L         ;
 $EFDE CP $4B        ;
 $EFE0 JP NC,$ED5C   ;
 $EFE3 CP $15        ;
 $EFE5 JR NC,$EFEF   ;
 $EFE7 LD (HL),$01   ;
 $EFE9 INC L         ;
 $EFEA LD (HL),$00   ;
 $EFEC JP $ED5C      ;
*$EFEF DEC (HL)      ;
 $EFF0 JP NZ,$ED5C   ;
 $EFF3 LD (HL),$0C   ;
 $EFF5 CALL $DC83    ;
 $EFF8 AND $07       ;
 $EFFA ADD A,B       ;
 $EFFB SUB $30       ;
 $EFFD EX AF,AF'     ;
 $EFFE INC L         ;
 $EFFF LD A,(HL)     ;
 $F000 ADD A,$10     ;
 $F002 LD (HL),A     ;
 $F003 LD A,($FDE5)  ; Get Area number
 $F006 ADD A,$05     ;
 $F008 RLCA          ;
 $F009 RLCA          ;
 $F00A RLCA          ;
 $F00B CP (HL)       ;
 $F00C JP C,$ED5C    ;
 $F00F LD A,(HL)     ;
 $F010 AND $30       ;
 $F012 XOR $30       ;
 $F014 PUSH HL       ;
 $F015 PUSH DE       ;
 $F016 LD E,$00      ;
 $F018 LD A,C        ;
 $F019 LD BC,$0C07   ;
 $F01C JR NZ,$F021   ;
 $F01E INC C         ;
 $F01F LD E,$12      ;
*$F021 LD L,$1F      ;
 $F023 ADD A,$0D     ;
 $F025 EX AF,AF'     ;
 $F026 LD H,A        ;
 $F027 JR NC,$F030   ;
 $F029 EX AF,AF'     ;
 $F02A BIT 6,A       ;
 $F02C JR NZ,$F03B   ;
 $F02E JR $F035      ;
*$F030 EX AF,AF'     ;
 $F031 BIT 6,A       ;
 $F033 JR Z,$F03B    ;
*$F035 NEG           ;
 $F037 ADD A,$80     ;
 $F039 JR $F03F      ;
*$F03B LD B,$04      ;
 $F03D LD L,$FE      ;
*$F03F SUB E         ;
 $F040 PUSH AF       ;
 $F041 CALL $E44D    ;
 $F044 POP DE        ;
 $F045 CALL $DC83    ;
 $F048 AND $07       ;
 $F04A ADD A,D       ;
 $F04B LD (IX+$11),A ;
 $F04E POP DE        ;
 $F04F POP HL        ;
 $F050 JR $F076      ;

; Data block at F052
b$F052 DEFB $EB,$7E,$4F,$FE,$40,$38,$02,$D6
 $F05A DEFB $04,$F6,$84

; Message at F05D
t$F05D DEFM "w,6"

; Data block at F060
b$F060 DEFB $1C,$2C,$1C,$1A

; Message at F064
t$F064 DEFM "Gw,6"

; Data block at F068
b$F068 DEFB $0E,$2C,$EB,$2C,$FE,$70,$30,$06
 $F070 DEFB $FE,$14

; Message at F072
t$F072 DEFM "0*6"

; Data block at F075
b$F075 DEFB $1C

; Routine at F076
;
; Used by the routine at #R$EFDD.
c$F076 PUSH BC       ;
 $F077 EXX           ;
 $F078 POP DE        ;
 $F079 LD A,D        ;
 $F07A SUB $08       ;
 $F07C LD D,A        ;
 $F07D LD A,E        ;
 $F07E ADD A,$0D     ;
 $F080 LD E,A        ;
 $F081 LD HL,$F8EA   ;
 $F084 LD B,$10      ;
 $F086 CALL $E77D    ;
 $F089 EXX           ;
 $F08A JP Z,$ED5C    ;
 $F08D DEC L         ;
 $F08E DEC L         ;
 $F08F SET 7,(HL)    ;
 $F091 PUSH HL       ;
 $F092 PUSH DE       ;
 $F093 LD BC,$0304   ; +3000
 $F096 CALL $6415    ; -> $6825 - Update Score
 $F099 POP DE        ;
 $F09A POP HL        ;
 $F09B JP $ED5C      ;

; Data block at F09E
b$F09E DEFB $08,$7E,$FE,$19,$38,$02,$36,$17
 $F0A6 DEFB $08,$35,$20,$CC,$36,$17,$D6,$10
 $F0AE DEFB $D5,$E5,$C5,$57,$FE,$48,$1E,$03
 $F0B6 DEFB $38,$02,$1E,$08,$3A,$DE,$5B,$BB
 $F0BE DEFB $38,$22,$83,$FE,$1E,$30,$1D,$79
 $F0C6 DEFB $CB,$77,$20,$02,$C6,$0A,$C6,$04
 $F0CE DEFB $5F,$0E,$80,$CD,$BB,$F1,$28,$0C
 $F0D6 DEFB $DD,$CB,$00,$CE,$DD,$36,$07,$A8
 $F0DE DEFB $DD,$36,$06,$05,$C1,$E1,$D1,$18
 $F0E6 DEFB $8F,$EB,$01,$0C,$18,$36,$84

; Message at F0ED
t$F0ED DEFM ",p,"

; Data block at F0F0
b$F0F0 DEFB $1C,$1A,$C6,$01

; Message at F0F4
t$F0F4 DEFM "w,q,6"

; Data block at F0F9
b$F0F9 DEFB $00,$2C,$36,$0F,$2C,$C6,$01

; Message at F100
t$F100 DEFM "w,6 ,"

; Data block at F105
b$F105 DEFB $EB,$2C,$0E,$81,$D6,$16,$DA,$4C
 $F10D DEFB $EE,$C3,$51,$EE,$C3,$76,$F0

; Routine at F114
c$F114 EX DE,HL      ;
 $F115 LD A,(HL)     ;
 $F116 LD (HL),$81   ;
 $F118 INC L         ;
 $F119 LD (HL),A     ;
 $F11A INC E         ;
 $F11B INC L         ;
 $F11C LD A,(DE)     ;
 $F11D LD (HL),A     ;
 $F11E INC L         ;
 $F11F DEC E         ;
 $F120 LD (HL),E     ;
 $F121 INC L         ;
 $F122 EX DE,HL      ;
 $F123 JP $ED5C      ;

; Routine at F126
c$F126 EX DE,HL      ;
 $F127 LD B,(HL)     ;
 $F128 LD (HL),$81   ;
 $F12A INC L         ;
 $F12B LD (HL),B     ;
 $F12C INC E         ;
 $F12D INC L         ;
 $F12E LD A,(DE)     ;
 $F12F LD C,A        ;
 $F130 LD (HL),A     ;
 $F131 INC L         ;
 $F132 DEC E         ;
 $F133 LD (HL),E     ;
 $F134 INC L         ;
 $F135 LD (HL),$81   ;
 $F137 INC L         ;
 $F138 LD A,B        ;
 $F139 ADD A,$08     ;
 $F13B LD (HL),A     ;
 $F13C INC L         ;
 $F13D LD A,C        ;
 $F13E SUB $08       ;
 $F140 JR NC,$F144   ;
 $F142 LD A,$04      ;
*$F144 LD (HL),A     ;
 $F145 INC L         ;
 $F146 LD (HL),E     ;
 $F147 INC L         ;
 $F148 EX DE,HL      ;
; This entry point is used by the routine at #R$F14C.
*$F149 JP $ED5C      ;

; Routine at F14C
c$F14C LD C,(HL)       ;
 $F14D INC L           ;
 $F14E LD A,(HL)       ;
 $F14F INC L           ;
 $F150 CP $06          ;
 $F152 JR Z,$F15A      ;
 $F154 JR NC,$F149     ;
 $F156 LD (HL),$00     ;
 $F158 JR $F149        ;
*$F15A LD A,(HL)       ;
 $F15B INC A           ;
 $F15C JR Z,$F149      ;
 $F15E LD (HL),$FF     ;
 $F160 PUSH DE         ;
 $F161 PUSH HL         ;
 $F162 LD H,$FD        ;
 $F164 LD L,C          ;
 $F165 LD BC,$080D     ;
 $F168 LD A,$80        ;
 $F16A LD (DE),A       ;
 $F16B CALL $E44D      ;
 $F16E JR Z,$F17C      ;
 $F170 LD (IX+$06),$00 ;
 $F174 LD (IX+$0F),$14 ;
 $F178 LD (IX+$11),$01 ;
*$F17C POP HL          ;
 $F17D POP DE          ;
 $F17E JR $F149        ;

; Routine at F180
c$F180 LD (IX+$11),$01 ;
 $F184 LD A,(IX+$04)   ;
 $F187 ADD A,A         ;
 $F188 ADD A,A         ;
 $F189 LD E,A          ;
 $F18A LD A,(IX+$05)   ;
 $F18D LD D,A          ;
 $F18E CP $34          ;
 $F190 JR C,$F199      ;
 $F192 RLA             ;
 $F193 JR C,$F199      ;
 $F195 LD (IX+$12),$01 ;
*$F199 LD D,A          ;
 $F19A DEC (IX+$0F)    ;
 $F19D JP NZ,$E9B9     ;
 $F1A0 LD (IX+$0F),$14 ;
 $F1A4 LD A,E          ;
 $F1A5 CP $40          ;
 $F1A7 JR NC,$F1AB     ;
 $F1A9 ADD A,$08       ;
*$F1AB SUB $04         ;
 $F1AD LD E,A          ;
 $F1AE INC D           ;
 $F1AF LD C,$80        ;
 $F1B1 PUSH IX         ;
 $F1B3 CALL $F1BB      ;
 $F1B6 POP IX          ;
 $F1B8 JP $E9B9        ;

; Routine at F1BB
;
; Used by the routines at #R$E794 and #R$F180.
c$F1BB LD A,E        ;
 $F1BC CP $78        ;
 $F1BE JR NC,$F1DB   ;
 $F1C0 LD A,D        ;
 $F1C1 CP $60        ;
 $F1C3 JR NC,$F1DB   ;
 $F1C5 CP $04        ;
 $F1C7 JR C,$F1DB    ;
 $F1C9 LD A,($5BDF)  ;
 $F1CC ADD A,$05     ;
 $F1CE LD B,A        ;
 $F1CF LD A,($FDE3)  ;
 $F1D2 ADD A,$03     ;
 $F1D4 OR C          ;
 $F1D5 LD C,A        ;
 $F1D6 EX DE,HL      ;
 $F1D7 XOR A         ;
 $F1D8 JP $F20F      ;
*$F1DB XOR A         ;
 $F1DC RET           ;

; Data block at F1DD
b$F1DD DEFB $0A

; Message at F1DE
t$F1DE DEFM "0S:"

; Data block at F1E1
b$F1E1 DEFB $D3,$FD,$4F,$87,$87,$FD,$86,$55
 $F1E9 DEFB $93,$30,$47,$C6,$07,$30,$0B,$CB
 $F1F1 DEFB $60,$20,$3F,$FD,$CB,$5A,$E6,$69
 $F1F9 DEFB $18,$14,$C6,$0B,$38,$34,$C6

; -> $F4F6
;
; Used by the routines at #R$E224 and #R$EC1B.
c$F200 JP $F4F6      ;

; -> $F381
;
; Used by the routine at #R$DEEF.
c$F203 JP $F381      ;

; -> $F707
;
; Used by the routine at #R$DEEF.
c$F206 JP $F707      ;

; -> $F26E
;
; Used by the routine at #R$DEEF.
c$F209 JP $F26E      ;

; -> $F24A
;
; Used by the routine at #R$ECC1.
c$F20C JP $F24A      ;

; -> $F4E9
;
; Used by the routine at #R$F1BB.
c$F20F JP $F4E9      ;

; -> $F36D
;
; Used by the routine at #R$DEEF.
c$F212 JP $F36D      ;

; Data block at F215
b$F215 DEFB $C3,$82,$F5,$C3,$A0,$F5

; -> $F4E3
;
; Used by the routine at #R$ECC1.
c$F21B JP $F4E3      ;

; -> $F34F
;
; Used by the routine at #R$E5DB.
c$F21E JP $F34F      ;

; Routine at F221
;
; Used by the routine at #R$DCDF.
c$F221 JP $F224      ;
*$F224 LD HL,$F73C   ;
 $F227 CALL $F237    ;
 $F22A CALL $F237    ;
 $F22D CALL $F237    ;
 $F230 CALL $F23B    ;
 $F233 LD B,$14      ;
 $F235 JR $F23D      ;

; Routine at F237
;
; Used by the routine at #R$F221.
c$F237 LD B,$0E      ;
 $F239 JR $F23D      ;

; Routine at F23B
;
; Used by the routine at #R$F221.
c$F23B LD B,$05      ;
; This entry point is used by the routines at #R$F221 and #R$F237.
*$F23D PUSH BC       ;
*$F23E LD (HL),$00   ;
 $F240 INC HL        ;
 $F241 DJNZ $F23E    ;
 $F243 POP BC        ;
 $F244 LD A,(HL)     ;
 $F245 INC A         ;
 $F246 JR NZ,$F23D   ;
 $F248 INC HL        ;
 $F249 RET           ;

; Routine at F24A
;
; Used by the routine at #R$F20C.
c$F24A LD IX,$F82D     ;
 $F24E LD DE,$0005     ;
*$F251 LD A,(IX+$00)   ;
 $F254 INC A           ;
 $F255 RET Z           ;
 $F256 DEC A           ;
 $F257 JR Z,$F25D      ;
 $F259 ADD IX,DE       ;
 $F25B JR $F251        ;
*$F25D LD (IX+$01),L   ;
 $F260 LD (IX+$02),H   ;
 $F263 LD (IX+$03),C   ;
 $F266 LD (IX+$04),B   ;
 $F269 LD (IX+$00),$0E ;
 $F26D RET             ;

; Routine at F26E
;
; Used by the routine at #R$F209.
c$F26E LD IX,$F82D     ;
 $F272 LD HL,$F8ED     ;
 $F275 LD (HL),$90     ;
 $F277 LD ($FDBD),HL   ;
*$F27A LD A,(IX+$00)   ;
 $F27D INC A           ;
 $F27E RET Z           ;
 $F27F DEC A           ;
 $F280 JR NZ,$F289     ;
*$F282 LD DE,$0005     ;
 $F285 ADD IX,DE       ;
 $F287 JR $F27A        ;
*$F289 LD L,(IX+$01)   ;
 $F28C LD H,(IX+$02)   ;
 $F28F CALL $F5BF      ;
 $F292 LD A,(IX+$03)   ;
 $F295 ADD A,L         ;
 $F296 LD (IX+$01),A   ;
 $F299 LD L,A          ;
 $F29A RLA             ;
 $F29B JP C,$F33D      ;
 $F29E LD A,(IX+$04)   ;
 $F2A1 ADD A,H         ;
 $F2A2 BIT 5,(IY+$15)  ;
 $F2A6 JR Z,$F2A9      ;
 $F2A8 INC A           ;
*$F2A9 LD (IX+$02),A   ;
 $F2AC LD H,A          ;
 $F2AD CP $60          ;
 $F2AF JP NC,$F33D     ;
 $F2B2 CP $05          ;
 $F2B4 JP C,$F33D      ;
 $F2B7 DEC (IX+$00)    ;
 $F2BA JP Z,$F348      ;
 $F2BD EX DE,HL        ;
 $F2BE LD HL,($FDBD)   ;
 $F2C1 LD (HL),D       ;
 $F2C2 INC L           ;
 $F2C3 LD (HL),E       ;
 $F2C4 INC L           ;
 $F2C5 LD (HL),$90     ;
 $F2C7 LD ($FDBD),HL   ;
 $F2CA LD A,($FDDA)    ;
 $F2CD LD B,A          ;
 $F2CE BIT 7,A         ;
 $F2D0 JR Z,$F32F      ;
 $F2D2 LD A,($FDD4)    ;
 $F2D5 SUB D           ;
 $F2D6 JR NC,$F32F     ;
 $F2D8 ADD A,$0A       ;
 $F2DA JR NC,$F32F     ;
 $F2DC LD A,($FDD3)    ;
 $F2DF LD C,A          ;
 $F2E0 ADD A,A         ;
 $F2E1 ADD A,A         ;
 $F2E2 ADD A,(IY+$55)  ;
 $F2E5 SUB E           ;
 $F2E6 JR NC,$F32F     ;
 $F2E8 ADD A,$07       ;
 $F2EA JR NC,$F2F7     ;
 $F2EC BIT 4,B         ;
 $F2EE JR NZ,$F32F     ;
 $F2F0 SET 4,(IY+$5A)  ;
 $F2F4 LD L,C          ;
 $F2F5 JR $F30B        ;
*$F2F7 ADD A,$0B       ;
 $F2F9 JR C,$F32F      ;
 $F2FB ADD A,$07       ;
 $F2FD JR NC,$F32F     ;
 $F2FF BIT 1,B         ;
 $F301 JR NZ,$F32F     ;
 $F303 SET 1,(IY+$5A)  ;
 $F307 LD A,C          ;
 $F308 ADD A,$04       ;
 $F30A LD L,A          ;
*$F30B LD H,(IY+$54)   ;
 $F30E PUSH DE         ;
 $F30F LD BC,$1302     ;
 $F312 PUSH IX         ;
 $F314 CALL $E10F      ;
 $F317 JR Z,$F321      ;
 $F319 LD (IX+$11),$12 ;
 $F31D SET 6,(IX+$0B)  ;
*$F321 LD A,$05        ;
 $F323 CALL $642D      ; -> $6456
 $F326 LD BC,$0104     ; +1000
 $F329 CALL $6415      ; -> $6825 - Update Score
 $F32C POP IX          ;
 $F32E POP DE          ;
*$F32F EX DE,HL        ;
 $F330 INC L           ;
 $F331 CALL $DC86      ;
 $F334 DEC L           ;
 $F335 JR C,$F344      ;
 $F337 CALL $F5C6      ;
 $F33A JP $F282        ;
*$F33D LD (IX+$00),$00 ;
 $F341 JP $F282        ;
*$F344 LD (IX+$00),$00 ;
*$F348 EX DE,HL        ;
 $F349 CALL $F6C2      ;
 $F34C JP $F282        ;

; Routine at F34F
;
; Used by the routines at #R$F21E and #R$F381.
c$F34F LD A,H        ;
 $F350 LD L,$00      ;
 $F352 ADD A,$02     ;
 $F354 LD C,A        ;
 $F355 LD H,A        ;
 $F356 JP P,$F35D    ;
 $F359 DEC L         ;
 $F35A SCF           ;
 $F35B JR $F35E      ;
*$F35D XOR A         ;
*$F35E RR H          ;
 $F360 RR L          ;
 $F362 RR H          ;
 $F364 RR L          ;
 $F366 RR H          ;
 $F368 RR L          ;
 $F36A ADD HL,DE     ;
 $F36B LD A,H        ;
 $F36C RET           ;

; Routine at F36D
;
; Used by the routine at #R$F212.
c$F36D CALL $F37B    ;
 $F370 LD IX,$F81E   ;
 $F374 LD A,$90      ;
 $F376 LD ($F8EA),A  ;
 $F379 JR $F385      ;

; Routine at F37B
;
; Used by the routine at #R$F36D.
c$F37B LD IX,$F7C9   ;
 $F37F JR $F385      ;

; Routine at F381
;
; Used by the routine at #R$F203.
c$F381 LD IX,$F73C    ;
; This entry point is used by the routines at #R$F36D and #R$F37B.
*$F385 LD C,(IX+$00)  ;
 $F388 INC C          ;
 $F389 RET Z          ;
 $F38A DEC C          ;
 $F38B JP Z,$F4DB     ;
 $F38E LD D,(IX+$03)  ;
 $F391 LD E,(IX+$02)  ;
 $F394 PUSH DE        ;
 $F395 SRL D          ;
 $F397 SRL E          ;
 $F399 BIT 3,(IX+$00) ;
 $F39D JR Z,$F3A4     ;
 $F39F CALL $F68A     ;
 $F3A2 JR $F3A7       ;
*$F3A4 CALL $F5A0     ;
*$F3A7 LD A,(IX+$00)  ;
 $F3AA BIT 3,A        ;
 $F3AC JR Z,$F3CE     ;
 $F3AE AND $03        ;
 $F3B0 JR NZ,$F3CE    ;
 $F3B2 LD D,(IX+$0A)  ;
 $F3B5 LD E,(IX+$09)  ;
 $F3B8 LD H,(IX+$08)  ;
 $F3BB CALL $F34F     ;
 $F3BE RLA            ;
 $F3BF JR C,$F3C5     ;
 $F3C1 POP DE         ;
 $F3C2 JP $F481       ;
*$F3C5 LD (IX+$0A),H  ;
 $F3C8 LD (IX+$09),L  ;
 $F3CB LD (IX+$08),C  ;
*$F3CE LD A,(IX+$01)  ;
 $F3D1 LD B,(IX+$06)  ;
 $F3D4 LD C,(IX+$00)  ;
 $F3D7 LD E,(IX+$04)  ;
 $F3DA LD D,(IX+$05)  ;
 $F3DD LD HL,$0000    ;
 $F3E0 BIT 5,C        ;
 $F3E2 RES 5,C        ;
 $F3E4 JR NZ,$F3E9    ;
*$F3E6 SUB D          ;
 $F3E7 JR NC,$F3F3    ;
*$F3E9 INC H          ;
 $F3EA ADD A,E        ;
 $F3EB JR C,$F3F3     ;
 $F3ED DJNZ $F3E9     ;
 $F3EF SET 5,C        ;
 $F3F1 JR $F3F6       ;
*$F3F3 INC L          ;
 $F3F4 DJNZ $F3E6     ;
*$F3F6 LD (IX+$01),A  ;
 $F3F9 LD (IX+$00),C  ;
 $F3FC POP DE         ;
 $F3FD LD A,H         ;
 $F3FE RL C           ;
 $F400 JR C,$F404     ;
 $F402 NEG            ;
*$F404 ADD A,D        ;
 $F405 BIT 5,(IY+$15) ;
 $F409 JR Z,$F40D     ;
 $F40B INC A          ;
 $F40C INC A          ;
*$F40D CP $C0         ;
 $F40F JR C,$F41C     ;
*$F411 LD A,(IX+$00)  ;
 $F414 AND $0C        ;
 $F416 JP Z,$F4D7     ;
 $F419 JP $F481       ;
*$F41C CP $09         ;
 $F41E JP C,$F411     ;
 $F421 LD (IX+$03),A  ;
 $F424 LD D,A         ;
 $F425 LD A,L         ;
 $F426 RL C           ;
 $F428 JR C,$F430     ;
 $F42A LD A,E         ;
 $F42B SUB L          ;
 $F42C JR C,$F411     ;
 $F42E JR $F433       ;
*$F430 ADD A,E        ;
 $F431 JR C,$F411     ;
*$F433 LD E,A         ;
 $F434 LD (IX+$02),A  ;
 $F437 JR C,$F411     ;
 $F439 SRL D          ;
 $F43B SRL E          ;
 $F43D PUSH DE        ;
 $F43E BIT 3,(IX+$00) ;
 $F442 JR Z,$F453     ;
 $F444 LD H,$01       ;
 $F446 CALL $F5DD     ;
 $F449 POP DE         ;
 $F44A LD A,(IX+$00)  ;
 $F44D AND $03        ;
 $F44F JR NZ,$F457    ;
 $F451 JR $F470       ;
*$F453 CALL $F582     ;
 $F456 POP DE         ;
*$F457 LD A,($FDE3)   ;
 $F45A INC A          ;
 $F45B SUB E          ;
 $F45C JR NC,$F470    ;
 $F45E ADD A,$06      ;
 $F460 JR NC,$F470    ;
 $F462 LD A,($FDE4)   ;
 $F465 SUB D          ;
 $F466 JR NC,$F470    ;
 $F468 ADD A,$05      ;
 $F46A JR NC,$F470    ;
 $F46C SET 0,(IY+$62) ; Player is dead??
*$F470 LD A,(IX+$07)  ;
 $F473 SUB (IX+$06)   ;
 $F476 LD (IX+$07),A  ;
 $F479 JR NC,$F4DB    ;
 $F47B LD D,(IX+$03)  ;
 $F47E LD E,(IX+$02)  ;
*$F481 SRL D          ;
 $F483 SRL E          ;
 $F485 LD A,(IX+$00)  ;
 $F488 AND $0C        ;
 $F48A JR Z,$F4D4     ;
 $F48C LD HL,$F8EA    ;
 $F48F LD A,D         ;
 $F490 ADD A,$0F      ;
 $F492 LD (HL),A      ;
 $F493 INC L          ;
 $F494 LD A,E         ;
 $F495 ADD A,$0F      ;
 $F497 LD (HL),A      ;
 $F498 LD A,($FDE4)   ;
 $F49B SUB $06        ;
 $F49D SUB D          ;
 $F49E JR NC,$F4BA    ;
 $F4A0 ADD A,$14      ;
 $F4A2 JR NC,$F4BA    ;
 $F4A4 LD A,($FDE3)   ;
 $F4A7 SUB E          ;
 $F4A8 JP C,$F4B1     ;
 $F4AB SUB $06        ;
 $F4AD JR NC,$F4BA    ;
 $F4AF JR $F4B6       ;
*$F4B1 ADD A,$07      ;
 $F4B3 JP NC,$F4BA    ;
*$F4B6 SET 0,(IY+$62) ;
*$F4BA LD H,$00       ;
 $F4BC CALL $F5DD     ;
 $F4BF LD A,($F8D3)   ;
 $F4C2 LD L,A         ;
 $F4C3 LD A,($F8D4)   ;
 $F4C6 LD H,A         ;
 $F4C7 LD A,($F8D5)   ;
 $F4CA CALL $642A     ;
 $F4CD LD A,$04       ;
 $F4CF CALL $642D     ; -> $6456
 $F4D2 JR $F4D7       ;
*$F4D4 CALL $F6C2     ;
*$F4D7 XOR A          ;
 $F4D8 LD (IX+$00),A  ;
*$F4DB LD DE,$000E    ;
 $F4DE ADD IX,DE      ;
 $F4E0 JP $F385       ;

; Routine at F4E3
;
; Used by the routine at #R$F21B.
c$F4E3 LD IX,$F81E   ;
 $F4E7 JR $F4ED      ;

; Routine at F4E9
;
; Used by the routine at #R$F20F.
c$F4E9 LD IX,$F7C9   ;
; This entry point is used by the routine at #R$F4E3.
*$F4ED SET 7,B       ;
 $F4EF ADD A,A       ;
 $F4F0 JR NC,$F4F4   ;
 $F4F2 OR $80        ;
*$F4F4 JR $F4FA      ;

; Routine at F4F6
;
; Used by the routine at #R$F200.
c$F4F6 LD IX,$F73C     ;
; This entry point is used by the routine at #R$F4E9.
*$F4FA SLA H           ;
 $F4FC SLA L           ;
 $F4FE EX AF,AF'       ;
 $F4FF LD DE,$000E     ;
*$F502 LD A,(IX+$00)   ;
 $F505 INC A           ;
 $F506 RET Z           ;
 $F507 DEC A           ;
 $F508 JR Z,$F50E      ;
 $F50A ADD IX,DE       ;
 $F50C JR $F502        ;
*$F50E LD A,B          ;
 $F50F RLA             ;
 $F510 LD B,$90        ;
 $F512 JR NC,$F516     ;
 $F514 SET 3,B         ;
*$F516 SUB H           ;
 $F517 JR NC,$F51D     ;
 $F519 RES 7,B         ;
 $F51B NEG             ;
*$F51D LD D,A          ;
 $F51E SLA C           ;
 $F520 LD A,C          ;
 $F521 JR NC,$F525     ;
 $F523 SET 2,B         ;
*$F525 SUB L           ;
 $F526 JR NC,$F52C     ;
 $F528 NEG             ;
 $F52A JR $F52E        ;
*$F52C SET 6,B         ;
*$F52E LD E,A          ;
 $F52F CP D            ;
 $F530 JR C,$F535      ;
 $F532 LD C,E          ;
 $F533 JR $F536        ;
*$F535 LD C,D          ;
*$F536 LD (IX+$00),B   ;
 $F539 LD A,E          ;
 $F53A SRL A           ;
 $F53C LD (IX+$01),A   ;
 $F53F LD (IX+$02),L   ;
 $F542 LD (IX+$03),H   ;
 $F545 LD (IX+$04),E   ;
 $F548 LD (IX+$05),D   ;
 $F54B EX AF,AF'       ;
 $F54C BIT 7,A         ;
 $F54E RES 7,A         ;
 $F550 LD (IX+$06),A   ;
 $F553 JR Z,$F557      ;
 $F555 LD C,$50        ;
*$F557 LD (IX+$07),C   ;
 $F55A BIT 3,B         ;
 $F55C JR Z,$F580      ;
 $F55E LD D,$00        ;
 $F560 LD (IX+$09),D   ;
 $F563 LD (IX+$0A),D   ;
 $F566 LD A,C          ;
 $F567 AND $E0         ;
 $F569 BIT 4,C         ;
 $F56B JR Z,$F56F      ;
 $F56D ADD A,$20       ;
*$F56F LD (IX+$07),A   ;
 $F572 RRA             ;
 $F573 RRA             ;
 $F574 RRA             ;
 $F575 RRA             ;
 $F576 OR A            ;
 $F577 RET Z           ;
 $F578 RRA             ;
 $F579 LD (IX+$06),A   ;
 $F57C LD (IX+$08),$E0 ;
*$F580 OR A            ;
 $F581 RET             ;

; Routine at F582
;
; Used by the routines at #R$F381 and #R$F5C6.
c$F582 CALL $F5CD    ;
 $F585 RET NC        ;
 $F586 EX DE,HL      ;
 $F587 LD A,L        ;
 $F588 PUSH AF       ;
 $F589 CALL $98D9    ;
 $F58C POP AF        ;
 $F58D AND $03       ;
 $F58F LD B,A        ;
 $F590 LD A,$C0      ;
 $F592 JR Z,$F598    ;
*$F594 RRA           ;
 $F595 RRA           ;
 $F596 DJNZ $F594    ;
*$F598 LD D,A        ;
 $F599 OR (HL)       ;
 $F59A LD (HL),A     ;
 $F59B INC H         ;
 $F59C LD A,D        ;
 $F59D OR (HL)       ;
 $F59E LD (HL),A     ;
 $F59F RET           ;

; Routine at F5A0
;
; Used by the routines at #R$F381, #R$F5BF and #R$F6C2.
c$F5A0 CALL $F5CD    ;
 $F5A3 RET NC        ;
 $F5A4 EX DE,HL      ;
 $F5A5 LD A,L        ;
 $F5A6 PUSH AF       ;
 $F5A7 CALL $98D9    ;
 $F5AA POP AF        ;
 $F5AB AND $03       ;
 $F5AD LD B,A        ;
 $F5AE OR A          ;
 $F5AF LD A,$3F      ;
 $F5B1 JR Z,$F5B7    ;
*$F5B3 RRCA          ;
 $F5B4 RRCA          ;
 $F5B5 DJNZ $F5B3    ;
*$F5B7 LD D,A        ;
 $F5B8 AND (HL)      ;
 $F5B9 LD (HL),A     ;
 $F5BA LD A,D        ;
 $F5BB INC H         ;
 $F5BC AND (HL)      ;
 $F5BD LD (HL),A     ;
 $F5BE RET           ;

; Routine at F5BF
;
; Used by the routine at #R$F26E.
c$F5BF PUSH HL       ;
 $F5C0 EX DE,HL      ;
 $F5C1 CALL $F5A0    ;
 $F5C4 POP HL        ;
 $F5C5 RET           ;

; Routine at F5C6
;
; Used by the routine at #R$F26E.
c$F5C6 PUSH HL       ;
 $F5C7 EX DE,HL      ;
 $F5C8 CALL $F582    ;
 $F5CB POP HL        ;
 $F5CC RET           ;

; Routine at F5CD
;
; Used by the routines at #R$F582 and #R$F5A0.
c$F5CD LD A,($FD97)  ;
 $F5D0 SUB $0D       ;
 $F5D2 RET C         ;
 $F5D3 SUB D         ;
 $F5D4 RET C         ;
 $F5D5 SUB $1F       ;
 $F5D7 JR NC,$F5DB   ;
 $F5D9 XOR A         ;
 $F5DA RET           ;
*$F5DB SCF           ;
 $F5DC RET           ;

; Routine at F5DD
;
; Used by the routine at #R$F381.
c$F5DD EX DE,HL        ;
 $F5DE LD A,(IX+$0A)   ;
 $F5E1 LD B,A          ;
 $F5E2 ADD A,H         ;
 $F5E3 LD C,A          ;
 $F5E4 PUSH IX         ;
 $F5E6 LD A,$20        ;
 $F5E8 BIT 2,(IX+$00)  ;
 $F5EC JR Z,$F5F0      ;
 $F5EE SET 2,A         ;
*$F5F0 LD ($F8DA),A    ;
 $F5F3 LD A,L          ;
 $F5F4 AND $03         ;
 $F5F6 LD ($F8D5),A    ;
 $F5F9 LD A,L          ;
 $F5FA AND $FC         ;
 $F5FC RRA             ;
 $F5FD RRA             ;
 $F5FE LD ($F8D3),A    ;
 $F601 INC D           ;
 $F602 DEC D           ;
 $F603 LD A,B          ;
 $F604 LD B,$12        ;
 $F606 JR Z,$F623      ;
 $F608 BIT 0,(IX+$00)  ;
 $F60C JR Z,$F615      ;
 $F60E LD A,(IX+$0C)   ;
 $F611 ADD A,$1D       ;
 $F613 JR $F624        ;
*$F615 NEG             ;
 $F617 LD B,$19        ;
 $F619 CP $10          ;
 $F61B JR C,$F623      ;
 $F61D INC B           ;
 $F61E CP $1A          ;
 $F620 JR C,$F623      ;
 $F622 INC B           ;
*$F623 LD A,B          ;
*$F624 LD ($F8D6),A    ;
 $F627 LD IX,$F8CF     ;
 $F62B LD (IX+$08),$04 ;
 $F62F LD (IX+$09),$5F ;
 $F633 LD (IX+$0A),$05 ;
 $F637 LD A,C          ;
 $F638 SUB (IX+$01)    ;
 $F63B JP P,$F661      ;
 $F63E NEG             ;
*$F640 SUB $05         ;
 $F642 JR C,$F681      ;
 $F644 PUSH AF         ;
 $F645 LD A,($F8D0)    ;
 $F648 SUB $04         ;
 $F64A LD ($F8D4),A    ;
 $F64D CALL $98D0      ;
 $F650 POP AF          ;
 $F651 INC A           ;
 $F652 LD B,A          ;
 $F653 LD A,($F8D4)    ;
 $F656 SUB B           ;
 $F657 LD C,A          ;
 $F658 LD A,B          ;
 $F659 CP $05          ;
 $F65B JR C,$F640      ;
 $F65D LD A,$05        ;
 $F65F JR $F640        ;
*$F661 SUB $05         ;
 $F663 JR C,$F681      ;
 $F665 PUSH AF         ;
 $F666 LD A,($F8D0)    ;
 $F669 ADD A,$04       ;
 $F66B LD ($F8D4),A    ;
 $F66E CALL $98D0      ;
 $F671 POP AF          ;
 $F672 INC A           ;
 $F673 LD B,A          ;
 $F674 ADD A,(IX+$05)  ;
 $F677 LD C,A          ;
 $F678 LD A,B          ;
 $F679 CP $05          ;
 $F67B JR C,$F661      ;
 $F67D LD A,$05        ;
 $F67F JR $F661        ;
*$F681 LD (IX+$05),C   ;
 $F684 CALL $98D0      ;
 $F687 POP IX          ;
 $F689 RET             ;

; Routine at F68A
;
; Used by the routine at #R$F381.
c$F68A EX DE,HL       ;
 $F68B LD A,(IX+$0A)  ;
 $F68E LD C,A         ;
 $F68F ADD A,H        ;
 $F690 LD ($F8D0),A   ;
 $F693 LD A,L         ;
 $F694 AND $03        ;
 $F696 LD ($F8D1),A   ;
 $F699 LD A,L         ;
 $F69A AND $FC        ;
 $F69C RRA            ;
 $F69D RRA            ;
 $F69E LD ($F8CF),A   ;
 $F6A1 BIT 0,(IX+$00) ;
 $F6A5 JR Z,$F6AE     ;
 $F6A7 LD A,(IX+$0C)  ;
 $F6AA ADD A,$1D      ;
 $F6AC JR $F6BE       ;
*$F6AE LD A,C         ;
 $F6AF NEG            ;
 $F6B1 LD C,$19       ;
 $F6B3 CP $10         ;
 $F6B5 JR C,$F6BD     ;
 $F6B7 INC C          ;
 $F6B8 CP $1A         ;
 $F6BA JR C,$F6BD     ;
 $F6BC INC C          ;
*$F6BD LD A,C         ;
*$F6BE LD ($F8D2),A   ;
 $F6C1 RET            ;

; Routine at F6C2
;
; Used by the routines at #R$F26E and #R$F381.
c$F6C2 LD HL,$F856   ;
*$F6C5 LD A,(HL)     ;
 $F6C6 INC A         ;
 $F6C7 JR Z,$F704    ;
 $F6C9 LD BC,$0011   ;
 $F6CC ADD HL,BC     ;
 $F6CD LD A,(HL)     ;
 $F6CE OR A          ;
 $F6CF JR Z,$F6D7    ;
 $F6D1 LD BC,$0003   ;
 $F6D4 ADD HL,BC     ;
 $F6D5 JR $F6C5      ;
*$F6D7 PUSH DE       ;
 $F6D8 LD (HL),$07   ;
 $F6DA XOR A         ;
 $F6DB SBC HL,BC     ;
 $F6DD LD A,E        ;
 $F6DE SUB $03       ;
 $F6E0 LD E,A        ;
 $F6E1 AND $03       ;
 $F6E3 LD B,A        ;
 $F6E4 LD A,E        ;
 $F6E5 AND $FC       ;
 $F6E7 RRA           ;
 $F6E8 RRA           ;
 $F6E9 LD E,A        ;
 $F6EA LD (HL),E     ;
 $F6EB INC HL        ;
 $F6EC LD A,D        ;
 $F6ED SUB $04       ;
 $F6EF LD (HL),A     ;
 $F6F0 INC HL        ;
 $F6F1 LD (HL),B     ;
 $F6F2 INC HL        ;
 $F6F3 LD (HL),$17   ;
 $F6F5 INC HL        ;
 $F6F6 LD (HL),E     ;
 $F6F7 INC HL        ;
 $F6F8 LD (HL),A     ;
 $F6F9 INC HL        ;
 $F6FA LD (HL),B     ;
 $F6FB INC HL        ;
 $F6FC LD (HL),$17   ;
 $F6FE INC HL        ;
 $F6FF INC HL        ;
 $F700 INC HL        ;
 $F701 LD (HL),$0A   ;
 $F703 POP DE        ;
*$F704 JP $F5A0      ;

; Routine at F707
;
; Used by the routine at #R$F206.
c$F707 LD IX,$F856   ;
*$F70B LD A,(IX+$00) ;
 $F70E INC A         ;
 $F70F RET Z         ;
 $F710 LD A,(IX+$11) ;
 $F713 OR A          ;
 $F714 JR NZ,$F71D   ;
*$F716 LD DE,$0014   ; Record width = 20
 $F719 ADD IX,DE     ;
 $F71B JR $F70B      ;
*$F71D DEC A         ;
 $F71E LD (IX+$11),A ;
 $F721 JR NZ,$F727   ;
 $F723 LD B,$12      ;
 $F725 JR $F734      ;
*$F727 DEC A         ;
 $F728 SRL A         ;
 $F72A JR C,$F716    ;
 $F72C AND $01       ;
 $F72E LD B,$18      ;
 $F730 JR NZ,$F734   ;
 $F732 LD B,$17      ;
*$F734 LD (IX+$07),B ;
 $F737 CALL $DC8F    ; -> $DDBE
 $F73A JR $F716      ;

; Data block at F73C
b$F73C DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {Record
 $F74A DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; width 14
 $F758 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F766 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F774 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F782 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F790 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F79E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F7AC DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F7BA DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $F7C8 DEFB $FF                                                     ; End marker

; Data block at F7C9
b$F7C9 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {Record
 $F7D7 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; width 14
 $F7E5 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F7F3 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F801 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F80F DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $F81D DEFB $FF                                                     ; End marker

; Data block at F81E
b$F81E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; Record
                                                                    ; width 14
 $F82C DEFB $FF                                                     ; End marker

; Data block at F82D
b$F82D DEFB $00,$00,$00,$00,$00 ; {Record width 5
 $F832 DEFB $00,$00,$00,$00,$00 ;
 $F837 DEFB $00,$00,$00,$00,$00 ;
 $F83C DEFB $00,$00,$00,$00,$00 ;
 $F841 DEFB $00,$00,$00,$00,$00 ;
 $F846 DEFB $00,$00,$00,$00,$00 ;
 $F84B DEFB $00,$00,$00,$00,$00 ;
 $F850 DEFB $00,$00,$00,$00,$00 ; }
 $F855 DEFB $FF                 ; End marker

; Data block at F856
b$F856 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; {Record width 20
 $F860 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F86A DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F874 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F87E DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F888 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F892 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F89C DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F8A6 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F8B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F8BA DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ;
 $F8C4 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00 ; }
 $F8CE DEFB $FF                                     ; End marker

; Data block at F8CF
b$F8CF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F8D7 DEFB $04,$5F,$14,$20,$00,$00,$00,$00
 $F8DF DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F8E7 DEFB $00,$00,$00
 $F8EA DEFB $00,$00,$90
 $F8ED DEFB $90,$00,$00,$00,$00,$00,$00,$00
 $F8F5 DEFB $00,$00,$00,$00,$00,$00,$90,$90
 $F8FD DEFB $90,$00,$00

; Buffer
b$F900 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F908 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F910 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F918 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F920 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F928 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F930 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F938 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F940 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F948 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F950 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F958 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F960 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F968 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F970 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F978 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F980 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F988 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F990 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F998 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9A0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9A8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9B0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9B8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9C0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9C8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9D0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9D8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9E0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9E8 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9F0 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $F9F8 DEFB $00,$00,$00,$00,$00,$00,$00,$00

; Checksums??
b$FA00 DEFB $91,$65,$C3,$24,$8E,$00,$E1,$01
 $FA08 DEFB $3B,$72,$CA,$4A,$58,$D7,$FD,$A6
 $FA10 DEFB $16,$1E,$FD,$9D,$42,$4D,$7F,$56
 $FA18 DEFB $2B,$4D,$60,$B5,$33,$94,$3E,$CE
 $FA20 DEFB $D4,$3F,$4E,$46,$C0,$D1,$C2,$2A
 $FA28 DEFB $F0,$09,$C4,$69,$51,$B2,$6E,$DD
 $FA30 DEFB $EC,$DF,$84,$41,$9A,$65,$D4,$70
 $FA38 DEFB $B9,$70,$92,$D6,$8B,$6A,$52,$D9
 $FA40 DEFB $6F,$6A,$BF,$BE,$D3,$00,$50,$89
 $FA48 DEFB $1D,$D6,$BC,$AE,$CF,$69,$03,$C3
 $FA50 DEFB $17,$97,$01,$A1,$A0,$48,$C0,$F3
 $FA58 DEFB $E5,$0B,$61,$62,$9B,$8A,$32,$1C
 $FA60 DEFB $41,$4F,$08,$8B,$95,$DD,$35,$CC
 $FA68 DEFB $A1,$FB,$8E,$ED,$AE,$C5,$07,$89
 $FA70 DEFB $58,$C1,$B3,$49,$6C,$4E,$58,$60
 $FA78 DEFB $25,$9C,$50,$71,$B0,$93,$54,$4E
 $FA80 DEFB $57,$1A,$52,$05,$E1,$2D,$9F,$80
 $FA88 DEFB $94,$F2,$FE,$4A,$A8,$BD,$A1,$FA
 $FA90 DEFB $B2,$72,$42,$59,$13,$C0,$15,$F6
 $FA98 DEFB $7D,$E2,$07,$C9,$2D,$D9,$41,$08
 $FAA0 DEFB $3C,$30,$E6,$B8,$26,$9C,$FC,$02
 $FAA8 DEFB $99,$84,$01,$9A,$AD,$1E,$38,$BF
 $FAB0 DEFB $B2,$1E,$FE,$F2,$37,$D7,$12,$52
 $FAB8 DEFB $D9,$60,$C6,$09,$F0,$79,$3B,$34
 $FAC0 DEFB $75,$16,$BC,$F8,$CB,$14,$B9,$D3
 $FAC8 DEFB $02,$71,$AF,$38,$75,$8E,$BA,$83
 $FAD0 DEFB $AB,$55,$77,$6B,$D6,$22,$31,$9F
 $FAD8 DEFB $29,$C4,$27,$C4,$40,$8C,$0F,$B8
 $FAE0 DEFB $DC,$9F,$17,$F7,$89,$2F,$79,$E5
 $FAE8 DEFB $1F,$B3,$C0,$E4,$5C,$82,$5A,$B5
 $FAF0 DEFB $E2,$F5,$96,$6A,$58,$14,$7E,$5A
 $FAF8 DEFB $BC,$69,$FA,$FB,$DD,$BC,$C1,$F9

; Data block at FB00
b$FB00 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB08 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB10 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB18 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB20 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB28 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB30 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB38 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB40 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB48 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB50 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB58 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB60 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB68 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB70 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB78 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB80 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB88 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB90 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FB98 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBA0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBA8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBB0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBB8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBC0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBC8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBD0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBD8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBE0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBE8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBF0 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FBF8 DEFB $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC
 $FC00 DEFB $FC,$00,$00,$00,$00,$00

; Buffer for at least 144 bytes
b$FC06 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC0E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC16 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC1E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC26 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC2E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC36 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC3E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC46 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC4E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC56 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC5E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC66 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC6E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC76 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC7E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC86 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC8E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC96 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FC9E DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCA6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCAE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCB6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCBE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCC6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCCE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCD6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCDE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCE6 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCEE DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FCF6 DEFB $00,$00,$00,$00,$00,$00

; -> $7357
c$FCFC JP $7357      ;

; Stack, grows to lower addresses from $FD80
b$FCFF DEFB $00
 $FD00 DEFW $0000,$0000,$0000,$0000
 $FD08 DEFW $0000,$0000,$0000,$0000
 $FD10 DEFW $0000,$0000,$0000,$0000
 $FD18 DEFW $0000,$0000,$0000,$0000
 $FD20 DEFW $0000,$0000,$0000,$0000
 $FD28 DEFW $0000,$0000,$0000,$0000
 $FD30 DEFW $0000,$0000,$0000,$0000
 $FD38 DEFW $0000,$0000,$0000,$0000
 $FD40 DEFW $0000,$0000,$0000,$0000
 $FD48 DEFW $0000,$0000,$0000,$0000
 $FD50 DEFW $0000,$0000,$0000,$0000
 $FD58 DEFW $0000,$0000,$0000,$0000
 $FD60 DEFW $0000,$0000,$0000,$68A1
 $FD68 DEFW $7BE0,$4405,$69AF,$0100
 $FD70 DEFW $1848,$171F,$1F09,$6995
 $FD78 DEFW $7394,$6440,$0004,$0210

; (IY+xx) variables; IY=$FD80
b$FD80 DEFW $61FC    ; ?? see $7A11
 $FD82 DEFW $0000    ; Saved SP
 $FD84 DEFB $00      ; (IY+$04) - Joystick type: 1=KEMPSTON 2=INTERFACE II
                     ; 3=FULLER 4=CURSOR
 $FD85 DEFB $00      ; (IY+$05) - Last bits from input (joystick/keyboard) in game mode = $00;
                     ;         bit0=Right, bit1=Left, bit2=Down, bit3=Up, bit4=Fire, bit5=??, bit6=??, bit7=??
 $FD86 DEFB $00      ; Land space size remaining = $00
 $FD87 DEFB $0F      ; (IY+$07) - ?? = $00
 $FD88 DEFB $00      ; (IY+$08) -  Offset in $FF00 buffer = $00
 $FD89 DEFB $00
 $FD8A DEFW $0000    ; Current address in level sequence, starts from $9236
 $FD8C DEFB $00
 $FD8D DEFW $61E8    ; Saved SP
 $FD8F DEFW $6439

; -> $7A5D - Delay by BC-1 HALTs
;
; Used by the routine at #R$7357.
c$FD91 JP $7A5D      ;

; (IY+xx) variables continued
b$FD94 DEFB $00
 $FD95 DEFB $00                             ; (IY+$15) - ??
 $FD96 DEFB $00                             ; (IY+$16) - ?? = $88,$AA
 $FD97 DEFB $00                             ; (IY+$17) - ?? = $90,$FF
 $FD98 DEFB $00                             ; Last key read from keyboard
 $FD99 DEFW $0000                           ; ??
 $FD9B DEFB $00,$00,$00,$00                 ; (IY+$1B),(IY+$1C),(IY+$1D),(IY+$1E)
                                            ; - Stored values for random byte
                                            ; calculation
 $FD9F DEFB $00                             ; ?? = $00
 $FDA0 DEFB $07                             ; ?? = $07
 $FDA1 DEFW $5800                           ; ?? = $5800; hi byte accessed as
                                            ; (IY+$22)
 $FDA3 DEFW $7EA0                           ; Font address = $7EA0
 $FDA5 DEFW $0C04                           ; ??? = $0000
 $FDA7 DEFB $00                             ; ?? = $00; inc/dec (smth on char
                                            ; printing)
 $FDA8 DEFB $15                             ; Saved special char in $7637
 $FDA9 DEFW $FDAC                           ; ?? = $FDAB
 $FDAB DEFB $00                             ; Screen attribute??
 $FDAC DEFB $02                             ; ??
 $FDAD DEFB $00,$00
 $FDAF DEFB $01                             ; ?? = $00
 $FDB0 DEFB $02                             ; ?? = $00
 $FDB1 DEFB $01                             ; ?? = $01
 $FDB2 DEFB $00                             ; (IY+$32) - ??
 $FDB3 DEFW $0000                           ; ??
 $FDB5 DEFB $00
 $FDB6 DEFB $00                             ; (IY+$36) - ?? = $00,$FF
 $FDB7 DEFB $00                             ; (IY+$37) - ?? = $00,$FF
 $FDB8 DEFB $00                             ; (IY+$38) - ?? = $01,$02
 $FDB9 DEFB $00                             ; ??
 $FDBA DEFB $00                             ; ??
 $FDBB DEFB $19
 $FDBC DEFB $00                             ; ?? = $40
 $FDBD DEFB $00,$00,$00,$00,$00
 $FDC2 DEFB $02                             ; (IY+$42) - ?? = $02
 $FDC3 DEFB $00                             ; ?? = $FF
 $FDC4 DEFB $00                             ; (IY+$44) - ??
 $FDC5 DEFB $00                             ; ?? = $FF
 $FDC6 DEFB $00                             ; (IY+$46) - ??
 $FDC7 DEFB $00                             ; Motorbike?? = $FF
 $FDC8 DEFB $00
 $FDC9 DEFB $00                             ; ?? = $FF
 $FDCA DEFB $00
 $FDCB DEFB $00                             ; (IY+$4B) - Jeep?? = $FF
 $FDCC DEFB $00,$00,$00
 $FDCF DEFB $00                             ; ??
 $FDD0 DEFB $00,$00,$00
 $FDD3 DEFB $00                             ; ??
 $FDD4 DEFB $00                             ; (IY+$54) - ??
 $FDD5 DEFB $00                             ; (IY+$55) - ??
 $FDD6 DEFB $00,$00,$00,$00
 $FDDA DEFB $00                             ; (IY+$5A) - ?? = $00; bit1, bit4
 $FDDB DEFB $00                             ; (IY+$5B) - ?? = $03; bit0; dec
 $FDDC DEFB $00
 $FDDD DEFB $00                             ; (IY+$5D) - Enemy delay =
                                            ; $01,$08,$0A,$28; dec/srl
 $FDDE DEFB $00                             ; (IY+$5E) - ??, = $90
 $FDDF DEFB $00                             ; (IY+$5F) - ??, = $90
 $FDE0 DEFB $00                             ; ?? = $00
 $FDE1 DEFB $00                             ; (IY+$61) - ??; bit0; inc
 $FDE2 DEFB $00                             ; (IY+$62) - bit0=1 - Player is
                                            ; dead
 $FDE3 DEFB $00                             ; (IY+$63) - ??
 $FDE4 DEFB $00                             ; (IY+$64) - ??
 $FDE5 DEFB $00                             ; (IY+$65) - Area number = $01; inc
 $FDE6 DEFB $00                             ; (IY+$66) - Lives player have
 $FDE7 DEFB $00                             ; (IY+$67) - Grenades player have
 $FDE8 DEFB $00                             ; Score, 1st char = '0'
 $FDE9 DEFB $00                             ; (IY+$69) - Score, 2nd char = '0'
 $FDEA DEFB $00,$00,$00,$00
 $FDEE DEFB $00                             ; (IY+$6E) - ??
 $FDEF DEFB $00
 $FDF0 DEFB $00                             ; (IY+$70) - ?? = $88
 $FDF1 DEFB $00                             ; (IY+$71) - ??
 $FDF2 DEFB $00,$00,$00,$00,$00,$00,$00,$00
 $FDFA DEFB $00                             ; (IY+$7A) - ?? = $00,$04
 $FDFB DEFB $00                             ; ?? = $00
 $FDFC DEFB $00                             ; (IY+$7C) - ?? = $00
 $FDFD DEFB $00                             ; (IY+$7D) - ??
 $FDFE DEFB $00                             ; ??
 $FDFF DEFB $00

; Table addresses for every even screen line
w$FE00 DEFW $4000,$4200,$4400,$4600,$4020,$4220,$4420,$4620
 $FE10 DEFW $4040,$4240,$4440,$4640,$4060,$4260,$4460,$4660
 $FE20 DEFW $4080,$4280,$4480,$4680,$40A0,$42A0,$44A0,$46A0
 $FE30 DEFW $40C0,$42C0,$44C0,$46C0,$40E0,$42E0,$44E0,$46E0
 $FE40 DEFW $4800,$4A00,$4C00,$4E00,$4820,$4A20,$4C20,$4E20
 $FE50 DEFW $4840,$4A40,$4C40,$4E40,$4860,$4A60,$4C60,$4E60
 $FE60 DEFW $4880,$4A80,$4C80,$4E80,$48A0,$4AA0,$4CA0,$4EA0
 $FE70 DEFW $48C0,$4AC0,$4CC0,$4EC0,$48E0,$4AE0,$4CE0,$4EE0
 $FE80 DEFW $5000,$5200,$5400,$5600,$5020,$5220,$5420,$5620
 $FE90 DEFW $5040,$5240,$5440,$5640,$5060,$5260,$5460,$5660
 $FEA0 DEFW $5080,$5280,$5480,$5680,$50A0,$52A0,$54A0,$56A0
 $FEB0 DEFW $50C0,$52C0,$54C0,$56C0,$50E0,$52E0,$54E0,$56E0
 $FEC0 DEFW $5800,$5A00,$5C00,$5E00,$5820,$5A20,$5C20,$5E20
 $FED0 DEFW $5840,$5A40,$5C40,$5E40,$5860,$5A60,$5C60,$5E60
 $FEE0 DEFW $5880,$5A80,$5C80,$5E80,$58A0,$5AA0,$5CA0,$5EA0
 $FEF0 DEFW $58C0,$5AC0,$5CC0,$5EC0,$58E0,$5AE0,$5CE0,$5EE0

; Buffer
b$FF00 DEFB $00,$00,$DD,$21,$00,$40,$11,$00,$BE,$3E,$FF,$37,$14,$08,$15,$F3
 $FF10 DEFB $3E,$0F,$D3,$FE,$DB,$FE,$1F,$E6,$20,$F6,$02,$4F,$BF,$CD,$A7,$FF
 $FF20 DEFB $30,$FB,$21,$15,$04,$10,$FE,$2B,$7C,$B5,$20,$F9,$CD,$A3,$FF,$30
 $FF30 DEFB $EC,$06,$9C,$CD,$A3,$FF,$30,$E5,$3E,$C6,$B8,$30,$E0,$24,$20,$F1
 $FF40 DEFB $06,$C9,$CD,$A7,$FF,$30,$D6,$78,$FE,$D4,$30,$F4,$CD,$A7,$FF,$D2
 $FF50 DEFB $00,$00,$79,$EE,$03,$4F,$26,$00,$06,$B0,$18,$27,$08,$20,$0F,$30
 $FF60 DEFB $17,$F5,$7D,$EE,$A5,$0F,$C6,$0F,$DD,$77,$00,$F1,$18,$0F,$CB,$11
 $FF70 DEFB $AD,$C0,$79,$1F,$4F,$13,$18,$07,$DD,$7E,$00,$AD,$C0,$DD,$23,$1B
 $FF80 DEFB $08,$06,$B2,$2E,$01,$CD,$A3,$FF,$D0,$3E,$CB,$B8,$CB,$15,$06,$B0
 $FF90 DEFB $D2,$85,$FF,$7C,$AD,$67,$7A,$B3,$20,$C2,$7C,$FE,$01,$D2,$00,$00
 $FFA0 DEFB $C3,$C7,$FF,$CD,$A7,$FF,$D0,$3E,$16,$3D,$20,$FD,$A7,$04,$C8,$3E
 $FFB0 DEFB $7F,$DB,$FE,$1F,$00,$A9,$E6,$20,$28,$F3,$79,$2F,$4F,$ED,$5F,$E6
 $FFC0 DEFB $07,$F6,$08,$D3,$FE,$37,$C9,$31,$00,$62,$C3,$1E,$64,$21,$63,$FF
 $FFD0 DEFB $7D,$7D,$37,$CB,$57,$11,$66,$FF,$7E,$7E,$7E,$47,$4F,$CB,$D7,$CB
 $FFE0 DEFB $D7,$1A,$77,$77,$78,$12,$23,$13,$7E,$47,$4F,$CB,$D7,$CB,$D7,$1A
 $FFF0 DEFB $77,$77,$78,$12,$C3,$EF,$FE,$00,$00,$00,$00,$00,$A6,$FF,$88,$FF
